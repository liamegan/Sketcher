{"version":3,"file":"index.modern.js","sources":["../src/common.ts","../src/Vec2.ts","../src/Vec3.ts","../src/Vec4.ts","../src/Mat2.ts","../src/Mat3.ts","../src/Quat.ts","../src/Mat4.ts"],"sourcesContent":["const conversionFactor = 180 / Math.PI;\n\nconst radianToDegrees = function(radian:number):number {\n\treturn radian * conversionFactor;\n}\n\nconst degreesToRadian = function(degrees:number):number {\n\treturn degrees / conversionFactor;\n}\n\nexport { radianToDegrees, degreesToRadian };","import { radianToDegrees, degreesToRadian } from \"./common\";\n\n/**\n * A basic 2D Vector class that provides simple algebraic functionality in the form\n * of 2D Vectors.\n *\n * We use Getters/setters for both principle properties (x & y) as well as virtual\n * properties (rotation, length etc.).\n *\n * @class Vec2\n * @author Liam Egan <liam@wethecollective.com>\n * @version 1.0.0\n * @created Jan 07, 2020\n */\nclass Vec2 {\n  /**\n   * The Vector Class constructor\n   *\n   * @constructor\n   * @chainable\n   * @param {number} x \t\t\t\tThe x coord\n   * @param {number} y \t\t\t\tThe y coord\n   */\n  constructor(...args: number[]) {\n    this.reset(...args);\n  }\n\n  /**\n   * Resets the vector coordinates\n   *\n   * @public\n   * @chainable\n   * @param {number|Array} x \tThe x coord, OR the array to reset to\n   * @param {number} y \t\t\t\tThe y coord\n   */\n  reset(...args: number[]): Vec2 {\n    let [x, y] = args;\n    if (isNaN(x)) x = 0;\n    if (isNaN(y)) y = 0;\n    this.x = x;\n    this.y = y;\n    return this;\n  }\n\n  /**\n   * Resets the vector coordinates to another vector object\n   *\n   * @public\n   * @chainable\n   * @param {Vector} v \t\t\t\tThe vector object to use to reset the coordinates\n   */\n  resetToVector(v: Vec2): Vec2 {\n    this.x = v.x;\n    this.y = v.y;\n    return this;\n  }\n\n  /**\n   * Clones the vector\n   *\n   * @public\n   * @chainable\n   * @return {Vector}\t\t\t\t\tThe cloned vector\n   */\n  clone(): Vec2 {\n    return new Vec2(this.x, this.y);\n  }\n\n  /**\n   * Adds one vector to another.\n   *\n   * @public\n   * @chainable\n   * @param  {Vec2}  vector The vector to add to this one\n   * @return {Vec2}\t\t\t\t\tReturns itself, modified\n   */\n  add(vector: Vec2): Vec2 {\n    this.x += vector.x;\n    this.y += vector.y;\n    return this;\n  }\n  /**\n   * Clones the vector and adds the vector to it instead\n   *\n   * @public\n   * @chainable\n   * @param  {Vec2}  vector The vector to add to this one\n   * @return {Vec2}\t\t\t\t\tReturns the clone of itself, modified\n   */\n  addNew(vector: Vec2): Vec2 {\n    return this.clone().add(vector);\n  }\n\n  /**\n   * Adds a scalar to the vector, modifying both the x and y\n   *\n   * @public\n   * @chainable\n   * @param  {number}  scalar The scalar to add to the vector\n   * @return {Vec2}\t\t\t\t\tReturns itself, modified\n   */\n  addScalar(scalar: number): Vec2 {\n    return this.add(new Vec2(scalar, scalar));\n  }\n  /**\n   * Clones the vector and adds the scalar to it instead\n   *\n   * @public\n   * @chainable\n   * @param  {number}  scalar The scalar to add to the vector\n   * @return {Vec2}\t\t\t\t\tReturns the clone of itself, modified\n   */\n  addScalarNew(scalar: number): Vec2 {\n    return this.clone().addScalar(scalar);\n  }\n\n  /**\n   * Subtracts one vector from another.\n   *\n   * @public\n   * @chainable\n   * @param  {Vec2}  vector The vector to subtract from this one\n   * @return {Vec2}\t\t\t\t\tReturns itself, modified\n   */\n  subtract(vector: Vec2): Vec2 {\n    this.x -= vector.x;\n    this.y -= vector.y;\n    return this;\n  }\n  /**\n   * Clones the vector and subtracts the vector from it instead\n   *\n   * @public\n   * @chainable\n   * @param  {Vec2}  vector The vector to subtract from this one\n   * @return {Vec2}\t\t\t\t\tReturns the clone of itself, modified\n   */\n  subtractNew(vector: Vec2): Vec2 {\n    return this.clone().subtract(vector);\n  }\n\n  /**\n   * Subtracts a scalar from the vector, modifying both the x and y\n   *\n   * @public\n   * @chainable\n   * @param  {number}  scalar The scalar to subtract from the vector\n   * @return {Vec2}\t\t\t\t\tReturns itself, modified\n   */\n  subtractScalar(scalar: number): Vec2 {\n    return this.subtract(new Vec2(scalar, scalar));\n  }\n  /**\n   * Clones the vector and subtracts the scalar from it instead\n   *\n   * @public\n   * @chainable\n   * @param  {number}  scalar The scalar to add to the vector\n   * @return {Vec2}\t\t\t\t\tReturns the clone of itself, modified\n   */\n  subtractScalarNew(scalar: number): Vec2 {\n    return this.clone().subtractScalar(scalar);\n  }\n\n  /**\n   * Divides one vector by another.\n   *\n   * @public\n   * @chainable\n   * @param  {Vec2}  vector The vector to divide this by\n   * @return {Vec2}\t\t\t\t\tReturns itself, modified\n   */\n  divide(vector: Vec2): Vec2 {\n    if (vector.x !== 0) {\n      this.x /= vector.x;\n    } else {\n      this.x = 0;\n    }\n    if (vector.y !== 0) {\n      this.y /= vector.y;\n    } else {\n      this.y = 0;\n    }\n    return this;\n  }\n  /**\n   * Clones the vector and divides it by the vector instead\n   *\n   * @public\n   * @chainable\n   * @param  {Vec2}  vector The vector to divide the clone by\n   * @return {Vec2}\t\t\t\t\tReturns the clone of itself, modified\n   */\n  divideNew(vector: Vec2): Vec2 {\n    return this.clone().divide(vector);\n  }\n\n  /**\n   * Divides the vector by a scalar.\n   *\n   * @public\n   * @chainable\n   * @param  {number}  scalar The scalar to divide both x and y by\n   * @return {Vec2}\t\t\t\t\tReturns itself, modified\n   */\n  divideScalar(scalar: number): Vec2 {\n    var v = new Vec2(scalar, scalar);\n    return this.divide(v);\n  }\n  /**\n   * Clones the vector and divides it by the provided scalar.\n   *\n   * @public\n   * @chainable\n   * @param  {number}  scalar The scalar to divide both x and y by\n   * @return {Vec2}\t\t\t\t\tReturns the clone of itself, modified\n   */\n  divideScalarNew(scalar: number): Vec2 {\n    return this.clone().divideScalar(scalar);\n  }\n\n  /**\n   * Multiplies one vector by another.\n   *\n   * @public\n   * @chainable\n   * @param  {Vec2}  vector The vector to multiply this by\n   * @return {Vec2}\t\t\t\t\tReturns itself, modified\n   */\n  multiply(vector: Vec2): Vec2 {\n    this.x *= vector.x;\n    this.y *= vector.y;\n    return this;\n  }\n  /**\n   * Clones the vector and multiplies it by the vector instead\n   *\n   * @public\n   * @chainable\n   * @param  {Vec2}  vector The vector to multiply the clone by\n   * @return {Vec2}\t\t\t\t\tReturns the clone of itself, modified\n   */\n  multiplyNew(vector: Vec2): Vec2 {\n    return this.clone().multiply(vector);\n  }\n\n  /**\n   * Multiplies the vector by a scalar.\n   *\n   * @public\n   * @chainable\n   * @param  {number}  scalar The scalar to multiply both x and y by\n   * @return {Vec2}\t\t\t\t\tReturns itself, modified\n   */\n  multiplyScalar(scalar: number): Vec2 {\n    var v = new Vec2(scalar, scalar);\n    return this.multiply(v);\n  }\n  /**\n   * Clones the vector and multiplies it by the provided scalar.\n   *\n   * @public\n   * @chainable\n   * @param  {number}  scalar The scalar to multiply both x and y by\n   * @return {Vec2}\t\t\t\t\tReturns the clone of itself, modified\n   */\n  multiplyScalarNew(scalar: number): Vec2 {\n    return this.clone().multiplyScalar(scalar);\n  }\n\n  /**\n   * Alias of {@link Vector#multiplyScalar__anchor multiplyScalar}\n   */\n  scale(scalar: number): Vec2 {\n    return this.multiplyScalar(scalar);\n  }\n  /**\n   * Alias of {@link Vector#multiplyScalarNew__anchor multiplyScalarNew}\n   */\n  scaleNew(scalar: number): Vec2 {\n    return this.multiplyScalarNew(scalar);\n  }\n\n  /**\n   * Rotates a vecor by a given amount, provided in radians.\n   *\n   * @public\n   * @chainable\n   * @param  {number}  radian The angle, in radians, to rotate the vector by\n   * @return {Vec2}\t\t\t\t\tReturns itself, modified\n   */\n  rotate(radian: number): Vec2 {\n    var x = this.x * Math.cos(radian) - this.y * Math.sin(radian);\n    var y = this.x * Math.sin(radian) + this.y * Math.cos(radian);\n\n    this.x = x;\n    this.y = y;\n\n    return this;\n  }\n  /**\n   * Clones the vector and rotates it by the supplied radian value\n   *\n   * @public\n   * @chainable\n   * @param  {number}  radian The angle, in radians, to rotate the vector by\n   * @return {Vec2}\t\t\t\t\tReturns the clone of itself, modified\n   */\n  rotateNew(radian: number): Vec2 {\n    return this.clone().rotate(radian);\n  }\n\n  /**\n   * Rotates a vecor by a given amount, provided in degrees. Converts the degree\n   * value to radians and runs the rotaet method.\n   *\n   * @public\n   * @chainable\n   * @param  {number}  degrees The angle, in degrees, to rotate the vector by\n   * @return {Vec2}\t\t\t\t\t\tReturns itself, modified\n   */\n  rotateDeg(degrees: number): Vec2 {\n    return this.rotate(degreesToRadian(degrees));\n  }\n  /**\n   * Clones the vector and rotates it by the supplied degree value\n   *\n   * @public\n   * @chainable\n   * @param  {number}  degrees The angle, in degrees, to rotate the vector by\n   * @return {Vec2}\t\t\t\t\t Returns the clone of itself, modified\n   */\n  rotateDegNew(degrees: number): Vec2 {\n    return this.rotateNew(degreesToRadian(degrees));\n  }\n\n  /**\n   * Alias of {@link Vector#rotate__anchor rotate}\n   */\n  rotateBy(radian: number): Vec2 {\n    return this.rotate(radian);\n  }\n  /**\n   * Alias of {@link Vector#rotateNew__anchor rotateNew}\n   */\n  rotateByNew(radian: number): Vec2 {\n    return this.rotateNew(radian);\n  }\n\n  /**\n   * Alias of {@link Vector#rotateDeg__anchor rotateDeg}\n   */\n  rotateDegBy(degrees: number): Vec2 {\n    return this.rotateDeg(degrees);\n  }\n  /**\n   * Alias of {@link Vector#rotateDegNew__anchor rotateDegNew}\n   */\n  rotateDegByNew(radian: number): Vec2 {\n    return this.rotateDegNew(radian);\n  }\n\n  /**\n   * Rotates a vector to a specific angle\n   *\n   * @public\n   * @chainable\n   * @param  {number}  radian The angle, in radians, to rotate the vector to\n   * @return {Vec2}\t\t\t\t\tReturns itself, modified\n   */\n  rotateTo(radian: number): Vec2 {\n    return this.rotate(radian - this.angle);\n  }\n  /**\n   * Clones the vector and rotates it to the supplied radian value\n   *\n   * @public\n   * @chainable\n   * @param  {number}  radian The angle, in radians, to rotate the vector to\n   * @return {Vec2}\t\t\t\t\tReturns the clone of itself, modified\n   */\n  rotateToNew(radian: number): Vec2 {\n    return this.clone().rotateTo(radian);\n  }\n\n  /**\n   * Rotates a vecor to a given amount, provided in degrees. Converts the degree\n   * value to radians and runs the rotateTo method.\n   *\n   * @public\n   * @chainable\n   * @param  {number}  degrees The angle, in degrees, to rotate the vector to\n   * @return {Vec2}\t\t\t\t\t\tReturns itself, modified\n   */\n  rotateToDeg(degrees: number): Vec2 {\n    return this.rotateTo(degreesToRadian(degrees));\n  }\n  /**\n   * Clones the vector and rotates it to the supplied degree value\n   *\n   * @public\n   * @chainable\n   * @param  {number}  degrees The angle, in degrees, to rotate the vector to\n   * @return {Vec2}\t\t\t\t\t Returns the clone of itself, modified\n   */\n  rotateToDegNew(degrees: number): Vec2 {\n    return this.rotateToNew(degreesToRadian(degrees));\n  }\n\n  /**\n   * Negates the vector.\n   *\n   * @public\n   * @chainable\n   * @return {Vec2}\t\t\t\t\tReturns itself, modified\n   */\n  negate(): Vec2 {\n    return this.multiplyScalar(-1);\n  }\n\n  /**\n   * Clones the vector and negates it.\n   *\n   * @public\n   * @chainable\n   * @return {Vec2}\t\t\t\t\tReturns itself, modified\n   */\n  negateNew(): Vec2 {\n    return this.multiplyScalarNew(-1);\n  }\n\n  /**\n   * Inverses the vector.\n   *\n   * @public\n   * @chainable\n   * @return {Vec2}\t\t\t\t\tReturns itself, modified\n   */\n  inverse(): Vec2 {\n    this.x = 1 / this.x;\n    this.y = 1 / this.y;\n    return this;\n  }\n\n  /**\n   * Clones the vector and then inverses it.\n   *\n   * @public\n   * @chainable\n   * @return {Vec2}\t\t\t\t\tReturns itself, modified\n   */\n  inverseNew(): Vec2 {\n    const c = this.clone();\n    c.x = 1 / c.x;\n    c.y = 1 / c.y;\n    return c;\n  }\n\n  /**\n   * Normalises the vector down to a length of 1 unit\n   *\n   * @public\n   * @chainable\n   * @return {Vec2}\t\t\t\t\tReturns itself, modified\n   */\n  normalise(): Vec2 {\n    return this.divideScalar(this.length);\n  }\n  /**\n   * Clones the vector and normalises it\n   *\n   * @public\n   * @chainable\n   * @return {Vec2}\t\t\t\t\tReturns a clone of itself, modified\n   */\n  normaliseNew(): Vec2 {\n    return this.divideScalarNew(this.length);\n  }\n\n  /**\n   * Calculates the distance between this and the supplied vector\n   *\n   * @param  {Vec2} vector The vector to calculate the distance from\n   * @return {number}        The distance between this and the supplied vector\n   */\n  distance(vector: Vec2): number {\n    return this.subtractNew(vector).length;\n  }\n\n  /**\n   * Calculates the distance on the X axis between this and the supplied vector\n   *\n   * @param  {Vec2} vector The vector to calculate the distance from\n   * @return {number}        The distance, along the x axis, between this and the supplied vector\n   */\n  distanceX(vector: Vec2): number {\n    return this.x - vector.x;\n  }\n\n  /**\n   * Calculated the distance on the Y axis between this and the supplied vector\n   *\n   * @param  {Vec2} vector The vector to calculate the distance from\n   * @return {number}        The distance, along the y axis, between this and the supplied vector\n   */\n  distanceY(vector: Vec2): number {\n    return this.y - vector.y;\n  }\n\n  /**\n   * Calculates the dot product between this and a supplied vectorT\n   *\n   * @example\n   * // returns -14\n   * new Vector(2, -3).dot(new Vector(-4, 2))\n   * new Vector(-4, 2).dot(new Vector(2, -3))\n   * new Vector(2, -4).dot(new Vector(-3, 2))\n   *\n   * @param  {Vec2} vector The vector object against which to calculate the dot product\n   * @return {number}        The dot product of the two vectors\n   */\n  dot(vector: Vec2): number {\n    return this.x * vector.x + this.y * vector.y;\n  }\n\n  det(vector: Vec2): number {\n    return this.x * vector.y + this.y * vector.x;\n  }\n\n  slopeBetween(vector: Vec2): number {\n    return (vector.y - this.y) / (vector.x - this.x);\n  }\n\n  /**\n   * Calculates the cross product between this and the supplied vector.\n   *\n   * @example\n   * // returns -2\n   * new Vector(2, -3).cross(new Vector(-4, 2))\n   * new Vector(-4, 2).cross(new Vector(2, -3))\n   * // returns 2\n   * new Vector(2, -4).cross(new Vector(-3, 2))\n   *\n   * @param  {Vec2} vector The vector object against which to calculate the cross product\n   * @return {number}        The cross product of the two vectors\n   */\n  cross(vector: Vec2): number {\n    return this.x * vector.x - this.y * vector.y;\n  }\n\n  ceil(): Vec2 {\n    this.x = Math.ceil(this.x);\n    this.y = Math.ceil(this.y);\n    return this;\n  }\n\n  ceilNew(): Vec2 {\n    return this.clone().ceil();\n  }\n\n  floor(): Vec2 {\n    this.x = Math.floor(this.x);\n    this.y = Math.floor(this.y);\n    return this;\n  }\n\n  floorNew(): Vec2 {\n    return this.clone().floor();\n  }\n\n  round(): Vec2 {\n    this.x = Math.round(this.x);\n    this.y = Math.round(this.y);\n    return this;\n  }\n\n  roundNew(): Vec2 {\n    return this.clone().round();\n  }\n\n  mod(vector: Vec2): Vec2 {\n    this.x = this.x % vector.x;\n    this.y = this.y % vector.y;\n    return this;\n  }\n\n  modNew(vector: Vec2): Vec2 {\n    return this.clone().mod(vector);\n  }\n\n  fract(): Vec2 {\n    this.x -= Math.floor(this.x);\n    this.y -= Math.floor(this.y);\n    return this;\n  }\n\n  fractNew(): Vec2 {\n    return this.clone().fract();\n  }\n\n  transformByMat2(m): Vec2 {\n    if (m.array) m = m.array; // This just transforms the matrix to an array.\n    if (m instanceof Array && m.length >= 4) {\n      const c = this.clone();\n      this.x = m[0] * c.x + m[2] * c.y;\n      this.y = m[1] * c.x + m[3] * c.y;\n    }\n    return this;\n  }\n\n  transformByMat2New(m): Vec2 {\n    return this.clone().transformByMat2(m);\n  }\n\n  transformByMat3(m): Vec2 {\n    if (m.array) m = m.array; // This just transforms the matrix to an array.\n    if (m instanceof Array && m.length >= 9) {\n      const c = this.clone();\n      this.x = m[0] * c.x + m[3] * c.y + m[6];\n      this.y = m[1] * c.x + m[4] * c.y + m[7];\n    }\n    return this;\n  }\n\n  transformByMat3New(m): Vec2 {\n    return this.clone().transformByMat3(m);\n  }\n\n  /**\n   * Getters and setters\n   */\n\n  /**\n   * (getter/setter) The x value of the vector.\n   *\n   * @type {number}\n   * @default 0\n   */\n  #x: number = 0;\n  set x(x: number) {\n    if (typeof x == \"number\") {\n      this.#x = x;\n    } else {\n      throw new TypeError(\"X should be a number\");\n    }\n  }\n  get x(): number {\n    return this.#x || 0;\n  }\n\n  /**\n   * (getter/setter) The y value of the vector.\n   *\n   * @type {number}\n   * @default 0\n   */\n  #y: number = 0;\n  set y(y: number) {\n    if (typeof y == \"number\") {\n      this.#y = y;\n    } else {\n      throw new TypeError(\"Y should be a number\");\n    }\n  }\n  get y(): number {\n    return this.#y || 0;\n  }\n\n  /**\n   * (getter/setter) The length of the vector presented as a square. If you're using\n   * length for comparison, this is quicker.\n   *\n   * @type {number}\n   * @default 0\n   */\n  set lengthSquared(length: number) {\n    var factor;\n    if (typeof length == \"number\") {\n      factor = length / this.lengthSquared;\n      this.multiplyScalar(factor);\n    } else {\n      throw new TypeError(\"length should be a number\");\n    }\n  }\n  get lengthSquared(): number {\n    return this.x * this.x + this.y * this.y;\n  }\n\n  /**\n   * (getter/setter) The length of the vector\n   *\n   * @type {number}\n   * @default 0\n   */\n  set length(length: number) {\n    var factor;\n    if (typeof length == \"number\") {\n      factor = length / this.length;\n      this.multiplyScalar(factor);\n    } else {\n      throw new TypeError(\"length should be a number\");\n    }\n  }\n  get length(): number {\n    return Math.sqrt(this.lengthSquared);\n  }\n\n  /**\n   * (getter/setter) The angle of the vector, in radians\n   *\n   * @type {number}\n   * @default 0\n   */\n  set angle(radian: number) {\n    if (typeof radian == \"number\") {\n      this.rotateTo(radian);\n    } else {\n      throw new TypeError(\"angle should be a number\");\n    }\n  }\n  get angle(): number {\n    return Math.atan2(this.y, this.x);\n  }\n\n  /**\n   * (getter/setter) The angle of the vector, in radians\n   *\n   * @type {number}\n   * @default 0\n   */\n  set angleInDegrees(degrees: number) {\n    if (typeof degrees == \"number\") {\n      this.rotateToDeg(degrees);\n    } else {\n      throw new TypeError(\"angle should be a number\");\n    }\n  }\n  get angleInDegrees(): number {\n    return radianToDegrees(Math.atan2(this.y, this.x));\n  }\n\n  /**\n   * (getter/setter) Vector width.\n   * Alias of {@link Vector#x x}\n   *\n   * @type {number}\n   */\n  set width(w: number) {\n    this.x = w;\n  }\n  get width(): number {\n    return this.x;\n  }\n\n  /**\n   * (getter/setter) Vector height.\n   * Alias of {@link Vector#x x}\n   *\n   * @type {number}\n   */\n  set height(h: number) {\n    this.y = h;\n  }\n  get height(): number {\n    return this.y;\n  }\n\n  /**\n   * (getter) Vector area.\n   * @readonly\n   *\n   * @type {number}\n   */\n  get area(): number {\n    return this.x * this.y;\n  }\n\n  /**\n   * (getter/setter) Vector slope.\n   *\n   * @type {number}\n   */\n  set slope(value: number) {\n    if (!isNaN(value)) {\n      let angle = Math.atan(value);\n      this.angle = angle;\n    }\n  }\n  get slope(): number {\n    return this.y / this.x;\n  }\n\n  /**\n   * (getter) Returns the basic array representation of this vector.\n   * @readonly\n   *\n   * @type {number}\n   */\n  get array(): number[] {\n    return [this.x, this.y];\n  }\n\n  /**\n   * (getter/sette) Swizzle XY\n   *\n   * @type {number}\n   */\n  get xy(): Vec2 | number[] {\n    return new Vec2(this.x, this.y);\n  }\n  set xy(v: Vec2 | number[]) {\n    if (v instanceof Vec2) {\n      this.resetToVector(v);\n    } else if (v instanceof Array && v.length >= 2) {\n      this.reset(v[0], v[1]);\n    } else {\n      throw new Error(\"input should be of type Vector\");\n    }\n  }\n\n  /**\n   * (getter/sette) Swizzle YX\n   *\n   * @type {number}\n   */\n  get yx(): any {\n    return new Vec2(this.y, this.x);\n  }\n  set yx(v: any) {\n    this.xy = Vec2.interpolate(v).yx;\n  }\n\n  /**\n   * (getter/sette) Swizzle XX\n   *\n   * @type {number}\n   */\n  get xx(): any {\n    return new Vec2(this.x, this.x);\n  }\n  set xx(v: any) {\n    v = Vec2.interpolate(v);\n    this.x = v.y;\n  }\n\n  /**\n   * (getter/sette) Swizzle YY\n   *\n   * @type {number}\n   */\n  get yy(): any {\n    return new Vec2(this.y, this.y);\n  }\n  set yy(v: any) {\n    v = Vec2.interpolate(v);\n    this.y = v.y;\n  }\n\n  /**\n   * Static methods\n   */\n  /**\n   * Iterpolates a provided anonymous value into a vew Vec2\n   *\n   * @param {Vec2|array|string|number} v The value to interpolate\n   * @returns {Vec2} out\n   */\n  static interpolate(v: any) {\n    if (v instanceof Vec2) {\n      return new Vec2(v.x, v.y);\n    } else if (v instanceof Array && v.length >= 2) {\n      return new Vec2(v[0], v[1]);\n    } else if (!isNaN(v)) {\n      return new Vec2(v, v);\n    } else if (typeof v === \"string\") {\n      const nv = v.split(\",\");\n      const x: number = Number(nv[0]);\n      const y: number = Number(nv[1]);\n      if (nv.length >= 2 && !isNaN(x) && !isNaN(y)) {\n        return new Vec2(x, y);\n      }\n    } else {\n      throw new Error(\"The passed interpolant could not be parsed into a vec2\");\n    }\n  }\n\n  /**\n   * Performs a linear interpolation between two vec2's\n   *\n   * @param {vec2} v1 the first operand\n   * @param {vec2} v2 the second operand\n   * @param {Number} d interpolation amount in the range of 0 - 1\n   * @returns {Vec2}\n   */\n  static lerp(v1: Vec2, v2: Vec2, d: number): Vec2 {\n    return new Vec2(v1.x + d * (v2.x - v1.x), v1.y + d * (v2.y - v1.y));\n  }\n\n  /**\n   * Finds the angle between 2 vectors.\n   *\n   * @param {vec2} a the first operand\n   * @param {vec2} b the second operand\n   * @returns {number}\n   */\n  static getAngle(a: Vec2, b: Vec2): number {\n    a = a.clone();\n    b = b.clone();\n\n    a.normalise();\n    b.normalise();\n\n    const cosine = a.dot(b);\n\n    if (cosine > 1.0) {\n      return 0;\n    } else if (cosine < -1.0) {\n      return Math.PI;\n    } else {\n      return Math.acos(cosine);\n    }\n  }\n}\n\nexport { Vec2 };\n","import { Vec2 } from \"./Vec2\";\nimport { Mat4 } from \"./Mat4\";\n\n/**\n * A basic 3D Vector class that provides simple algebraic functionality in the form\n * of 3D Vectors.\n *\n * We use Getters/setters for both principle properties (x & y) as well as virtual\n * properties (rotation, length etc.).\n *\n * @class Vec3\n * @author Liam Egan <liam@wethecollective.com>\n * @version 1.0.0\n * @created Jan 07, 2020\n */\nclass Vec3 {\n  /**\n   * The Vector Class constructor\n   *\n   * @constructor\n   * @param {number} x \t\t\t\tThe x coord\n   * @param {number} y \t\t\t\tThe y coord\n   * @param {number} z \t\t\t\tThe z coord\n   */\n  constructor(...args: number[]) {\n    this.reset(...args);\n  }\n\n  /**\n   * Resets the vector coordinates\n   *\n   * @public\n   * @chainable\n   * @param {number} x \t\t\t\tThe x coord\n   * @param {number} y \t\t\t\tThe y coord\n   * @param {number} z \t\t\t\tThe z coord\n   */\n  reset(...args: number[]): Vec3 {\n    let [x, y, z, w] = args;\n    if (isNaN(x)) x = 0;\n    if (isNaN(y)) y = 0;\n    if (isNaN(z)) z = 0;\n    this.x = x;\n    this.y = y;\n    this.z = z;\n    return this;\n  }\n\n  /**\n   * Resets the vector coordinates to another vector object\n   *\n   * @public\n   * @chainable\n   * @param {Vec3} v \t\t\t\tThe vector object to use to reset the coordinates\n   */\n  resetToVector(v: Vec3): Vec3 {\n    if (v instanceof Vec3) {\n      this.x = v.x;\n      this.y = v.y;\n      this.z = v.z;\n    }\n    return this;\n  }\n\n  /**\n   * Clones the vector\n   *\n   * @public\n   * @return {Vec3}\t\t\t\t\tThe cloned vector\n   */\n  clone(): Vec3 {\n    return new Vec3(this.x, this.y, this.z);\n  }\n\n  /**\n   * Adds one vector to another.\n   *\n   * @public\n   * @chainable\n   * @param  {Vec3}  vector The vector to add to this one\n   * @return {Vec3}\t\t\t\t\tReturns itself, modified\n   */\n  add(vector: Vec3): Vec3 {\n    this.x += vector.x;\n    this.y += vector.y;\n    this.z += vector.z;\n    return this;\n  }\n  /**\n   * Clones the vector and adds the vector to it instead\n   *\n   * @public\n   * @chainable\n   * @param  {Vec3}  vector The vector to add to this one\n   * @return {Vec3}\t\t\t\t\tReturns the clone of itself, modified\n   */\n  addNew(vector: Vec3): Vec3 {\n    return this.clone().add(vector);\n  }\n\n  /**\n   * Adds a scalar to the vector, modifying both the x and y\n   *\n   * @public\n   * @chainable\n   * @param  {number}  scalar The scalar to add to the vector\n   * @return {Vec3}\t\t\t\t\tReturns itself, modified\n   */\n  addScalar(scalar: number): Vec3 {\n    return this.add(new Vec3(scalar, scalar, scalar));\n  }\n  /**\n   * Clones the vector and adds the scalar to it instead\n   *\n   * @public\n   * @chainable\n   * @param  {number}  scalar The scalar to add to the vector\n   * @return {Vec3}\t\t\t\t\tReturns the clone of itself, modified\n   */\n  addScalarNew(scalar: number): Vec3 {\n    return this.clone().addScalar(scalar);\n  }\n\n  /**\n   * Subtracts one vector from another.\n   *\n   * @public\n   * @chainable\n   * @param  {Vec3}  vector The vector to subtract from this one\n   * @return {Vec3}\t\t\t\t\tReturns itself, modified\n   */\n  subtract(vector: Vec3): Vec3 {\n    this.x -= vector.x;\n    this.y -= vector.y;\n    this.z -= vector.z;\n    return this;\n  }\n  /**\n   * Clones the vector and subtracts the vector from it instead\n   *\n   * @public\n   * @chainable\n   * @param  {Vec3}  vector The vector to subtract from this one\n   * @return {Vec3}\t\t\t\t\tReturns the clone of itself, modified\n   */\n  subtractNew(vector: Vec3): Vec3 {\n    return this.clone().subtract(vector);\n  }\n\n  /**\n   * Subtracts a scalar from the vector, modifying both the x and y\n   *\n   * @public\n   * @chainable\n   * @param  {number}  scalar The scalar to subtract from the vector\n   * @return {Vec3}\t\t\t\t\tReturns itself, modified\n   */\n  subtractScalar(scalar: number): Vec3 {\n    return this.subtract(new Vec3(scalar, scalar, scalar));\n  }\n  /**\n   * Clones the vector and subtracts the scalar from it instead\n   *\n   * @public\n   * @chainable\n   * @param  {number}  scalar The scalar to add to the vector\n   * @return {Vec3}\t\t\t\t\tReturns the clone of itself, modified\n   */\n  subtractScalarNew(scalar: number): Vec3 {\n    return this.clone().subtractScalar(scalar);\n  }\n\n  /**\n   * Divides one vector by another.\n   *\n   * @public\n   * @chainable\n   * @param  {Vec3}  vector The vector to divide this by\n   * @return {Vec3}\t\t\t\t\tReturns itself, modified\n   */\n  divide(vector: Vec3): Vec3 {\n    if (vector.x !== 0) {\n      this.x /= vector.x;\n    } else {\n      this.x = 0;\n    }\n    if (vector.y !== 0) {\n      this.y /= vector.y;\n    } else {\n      this.y = 0;\n    }\n    if (vector.z !== 0) {\n      this.z /= vector.z;\n    } else {\n      this.z = 0;\n    }\n    return this;\n  }\n  /**\n   * Clones the vector and divides it by the vector instead\n   *\n   * @public\n   * @chainable\n   * @param  {Vec3}  vector The vector to divide the clone by\n   * @return {Vec3}\t\t\t\t\tReturns the clone of itself, modified\n   */\n  divideNew(vector: Vec3): Vec3 {\n    return this.clone().divide(vector);\n  }\n\n  /**\n   * Divides the vector by a scalar.\n   *\n   * @public\n   * @chainable\n   * @param  {number}  scalar The scalar to divide both x and y by\n   * @return {Vec3}\t\t\t\t\tReturns itself, modified\n   */\n  divideScalar(scalar: number): Vec3 {\n    var v = new Vec3(scalar, scalar, scalar);\n    return this.divide(v);\n  }\n  /**\n   * Clones the vector and divides it by the provided scalar.\n   *\n   * @public\n   * @chainable\n   * @param  {number}  scalar The scalar to divide both x and y by\n   * @return {Vec3}\t\t\t\t\tReturns the clone of itself, modified\n   */\n  divideScalarNew(scalar: number): Vec3 {\n    return this.clone().divideScalar(scalar);\n  }\n\n  /**\n   * Multiplies one vector by another.\n   *\n   * @public\n   * @chainable\n   * @param  {Vec3}  vector The vector to multiply this by\n   * @return {Vec3}\t\t\t\t\tReturns itself, modified\n   */\n  multiply(vector: Vec3): Vec3 {\n    this.x *= vector.x;\n    this.y *= vector.y;\n    this.z *= vector.z;\n    return this;\n  }\n  /**\n   * Clones the vector and multiplies it by the vector instead\n   *\n   * @public\n   * @chainable\n   * @param  {Vec3}  vector The vector to multiply the clone by\n   * @return {Vec3}\t\t\t\t\tReturns the clone of itself, modified\n   */\n  multiplyNew(vector: Vec3): Vec3 {\n    return this.clone().multiply(vector);\n  }\n\n  /**\n   * Multiplies the vector by a scalar.\n   *\n   * @public\n   * @chainable\n   * @param  {number}  scalar The scalar to multiply both x and y by\n   * @return {Vec3}\t\t\t\t\tReturns itself, modified\n   */\n  multiplyScalar(scalar: number): Vec3 {\n    var v = new Vec3(scalar, scalar, scalar);\n    return this.multiply(v);\n  }\n  /**\n   * Clones the vector and multiplies it by the provided scalar.\n   *\n   * @public\n   * @chainable\n   * @param  {number}  scalar The scalar to multiply both x and y by\n   * @return {Vec3}\t\t\t\t\tReturns the clone of itself, modified\n   */\n  multiplyScalarNew(scalar: number): Vec3 {\n    return this.clone().multiplyScalar(scalar);\n  }\n\n  /**\n   * Alias of {@link Vector#multiplyScalar__anchor multiplyScalar}\n   */\n  scale(scalar: number): Vec3 {\n    return this.multiplyScalar(scalar);\n  }\n  /**\n   * Alias of {@link Vector#multiplyScalarNew__anchor multiplyScalarNew}\n   */\n  scaleNew(scalar: number): Vec3 {\n    return this.multiplyScalarNew(scalar);\n  }\n\n  rotateX(origin: Vec3, radian: number): Vec3 {\n    const s = Math.sin(radian);\n    const c = Math.cos(radian);\n\n    // Translate to the origin\n    const translated = this.subtractNew(origin);\n\n    // Rotate\n    const rotated = translated.clone();\n    rotated.y = rotated.y * c - rotated.z * s;\n    rotated.z = rotated.y * s + rotated.z * c;\n\n    // Translate back\n    this.y = rotated.y + origin.y;\n    this.z = rotated.z + origin.z;\n\n    return this;\n  }\n\n  rotateXNew(origin: Vec3, radian: number): Vec3 {\n    return this.clone().rotateX(origin, radian);\n  }\n\n  rotateY(origin: Vec3, radian: number): Vec3 {\n    const s = Math.sin(radian);\n    const c = Math.cos(radian);\n\n    // Translate to the origin\n    const translated = this.subtractNew(origin);\n\n    // Rotate\n    const rotated = translated.clone();\n    rotated.x = rotated.z * s + rotated.z * c;\n    rotated.z = rotated.z * c - rotated.x * s;\n\n    // Translate back\n    this.x = rotated.x + origin.x;\n    this.z = rotated.z + origin.z;\n\n    return this;\n  }\n\n  rotateyNew(origin: Vec3, radian: number): Vec3 {\n    return this.clone().rotateY(origin, radian);\n  }\n\n  rotateZ(origin: Vec3, radian: number): Vec3 {\n    const s = Math.sin(radian);\n    const c = Math.cos(radian);\n\n    // Translate to the origin\n    const translated = this.subtractNew(origin);\n\n    // Rotate\n    const rotated = translated.clone();\n    rotated.x = rotated.x * c - rotated.y * s;\n    rotated.y = rotated.x * s + rotated.y * c;\n\n    // Translate back\n    this.x = rotated.x + origin.x;\n    this.y = rotated.y + origin.y;\n\n    return this;\n  }\n\n  rotateZNew(origin: Vec3, radian: number): Vec3 {\n    return this.clone().rotateZ(origin, radian);\n  }\n\n  transformByMat4(m: any): Vec3 {\n    if (m.array) m = m.array; // This just transforms the matrix to an array.\n    if (m instanceof Array && m.length >= 16) {\n      const o = this.clone();\n      const w = m[3] * o.x + m[7] * o.y + m[11] * o.z + m[15] || 1;\n      this.x = (m[0] * o.x + m[4] * o.y + m[8] * o.z + m[12]) / w;\n      this.y = (m[1] * o.x + m[5] * o.y + m[9] * o.z + m[13]) / w;\n      this.z = (m[2] * o.x + m[6] * o.y + m[10] * o.z + m[14]) / w;\n    }\n    return this;\n  }\n\n  transformByMat4New(m: any): Vec3 {\n    return this.clone().transformByMat4(m);\n  }\n\n  transformByMat3(m: any): Vec3 {\n    if (m.array) m = m.array; // This just transforms the matrix to an array.\n    if (m instanceof Array && m.length >= 9) {\n      const o = this.clone();\n      this.x = m[0] * o.x + m[3] * o.y + m[6] * o.z;\n      this.y = m[1] * o.x + m[4] * o.y + m[7] * o.z;\n      this.z = m[2] * o.x + m[5] * o.y + m[8] * o.z;\n    }\n    return this;\n  }\n\n  transformByMat3New(m: any): Vec3 {\n    return this.clone().transformByMat3(m);\n  }\n\n  transformByQuat(q: any): Vec3 {\n    if (q.array) q = q.array; // This just transforms the quaternion to an array.\n    if (q instanceof Array && q.length >= 4) {\n      const o = this.clone();\n      const uv = new Vec3(\n        q[1] * o.z - q[2] * o.y,\n        q[2] * o.x - q[0] * o.z,\n        q[0] * o.y - q[1] * o.x\n      );\n      const uuv = new Vec3(\n        q[1] * uv.z - q[2] * uv.y,\n        q[2] * uv.x - q[0] * uv.z,\n        q[0] * uv.y - q[1] * uv.x\n      );\n      uv.scale(2 * q[3]);\n      uuv.scale(2 * q[3]);\n\n      this.add(uv);\n      this.add(uuv);\n    }\n    return this;\n  }\n\n  transformByQuatNew(q: any): Vec3 {\n    return this.clone().transformByQuat(q);\n  }\n\n  /**\n   * Negates the vector.\n   *\n   * @public\n   * @chainable\n   * @return {Vec3}\t\t\t\t\tReturns itself, modified\n   */\n  negate(): Vec3 {\n    return this.multiplyScalar(-1);\n  }\n\n  /**\n   * Clones the vector and negates it.\n   *\n   * @public\n   * @chainable\n   * @return {Vec3}\t\t\t\t\tReturns itself, modified\n   */\n  negateNew(): Vec3 {\n    return this.multiplyScalarNew(-1);\n  }\n\n  /**\n   * Inverses the vector.\n   *\n   * @public\n   * @chainable\n   * @return {Vec3}\t\t\t\t\tReturns itself, modified\n   */\n  inverse(): Vec3 {\n    this.x = 1 / this.x;\n    this.y = 1 / this.y;\n    this.z = 1 / this.z;\n    return this;\n  }\n\n  /**\n   * Clones the vector and then inverses it.\n   *\n   * @public\n   * @chainable\n   * @return {Vec3}\t\t\t\t\tReturns itself, modified\n   */\n  inverseNew(): Vec3 {\n    const c = this.clone();\n    c.x = 1 / c.x;\n    c.y = 1 / c.y;\n    c.z = 1 / c.z;\n    return c;\n  }\n\n  /**\n   * Normalises the vector down to a length of 1 unit\n   *\n   * @public\n   * @chainable\n   * @return {Vec3}\t\t\t\t\tReturns itself, modified\n   */\n  normalise(): Vec3 {\n    return this.divideScalar(this.length);\n  }\n  /**\n   * Clones the vector and normalises it\n   *\n   * @public\n   * @chainable\n   * @return {Vec3}\t\t\t\t\tReturns a clone of itself, modified\n   */\n  normaliseNew(): Vec3 {\n    return this.divideScalarNew(this.length);\n  }\n\n  /**\n   * Calculates the distance between this and the supplied vector\n   *\n   * @param  {Vec3} vector The vector to calculate the distance from\n   * @return {number}        The distance between this and the supplied vector\n   */\n  distance(vector: Vec3): number {\n    return this.subtractNew(vector).length;\n  }\n\n  /**\n   * Calculates the distance on the X axis between this and the supplied vector\n   *\n   * @param  {Vec3} vector The vector to calculate the distance from\n   * @return {number}        The distance, along the x axis, between this and the supplied vector\n   */\n  distanceX(vector: Vec3): number {\n    return this.x - vector.x;\n  }\n\n  /**\n   * Calculated the distance on the Y axis between this and the supplied vector\n   *\n   * @param  {Vec3} vector The vector to calculate the distance from\n   * @return {number}        The distance, along the y axis, between this and the supplied vector\n   */\n  distanceY(vector: Vec3): number {\n    return this.y - vector.y;\n  }\n\n  /**\n   * Calculated the distance on the Z axis between this and the supplied vector\n   *\n   * @param  {Vec3} vector The vector to calculate the distance from\n   * @return {number}        The distance, along the y axis, between this and the supplied vector\n   */\n  distanceZ(vector: Vec3): number {\n    return this.z - vector.z;\n  }\n\n  /**\n   * Calculates the dot product between this and a supplied vector\n   *\n   * @example\n   * // returns -14\n   * new Vector(2, -3).dot(new Vector(-4, 2))\n   * new Vector(-4, 2).dot(new Vector(2, -3))\n   * new Vector(2, -4).dot(new Vector(-3, 2))\n   *\n   * @param  {Vec3} vector The vector object against which to calculate the dot product\n   * @return {number}        The dot product of the two vectors\n   */\n  dot(vector: Vec3): number {\n    return this.x * vector.x + this.y * vector.y + this.z * vector.z;\n  }\n\n  /**\n   * Calculates the cross product between this and the supplied vector.\n   *\n   * @example\n   * // returns -2\n   * new Vector(2, -3).cross(new Vector(-4, 2))\n   * new Vector(-4, 2).cross(new Vector(2, -3))\n   * // returns 2\n   * new Vector(2, -4).cross(new Vector(-3, 2))\n   *\n   * @param  {Vec3} vector The vector object against which to calculate the cross product\n   * @return {Vec3}        The cross product of the two vectors\n   */\n  cross(vector: Vec3): Vec3 {\n    return new Vec3(\n      this.y * vector.z - this.z * vector.y,\n      this.z * vector.x - this.x * vector.z,\n      this.x * vector.y - this.y * vector.x\n    );\n  }\n\n  crossNew(vector: Vec3): Vec3 {\n    return this.clone().cross(vector);\n  }\n\n  ceil(): Vec3 {\n    this.x = Math.ceil(this.x);\n    this.y = Math.ceil(this.y);\n    this.z = Math.ceil(this.z);\n    return this;\n  }\n\n  ceilNew(): Vec3 {\n    return this.clone().ceil();\n  }\n\n  floor(): Vec3 {\n    this.x = Math.floor(this.x);\n    this.y = Math.floor(this.y);\n    this.z = Math.floor(this.z);\n    return this;\n  }\n\n  floorNew(): Vec3 {\n    return this.clone().floor();\n  }\n\n  round(): Vec3 {\n    this.x = Math.round(this.x);\n    this.y = Math.round(this.y);\n    this.z = Math.round(this.z);\n    return this;\n  }\n\n  roundNew(): Vec3 {\n    return this.clone().round();\n  }\n\n  fract(): Vec3 {\n    this.x -= Math.floor(this.x);\n    this.y -= Math.floor(this.y);\n    this.z -= Math.floor(this.z);\n    return this;\n  }\n\n  fractNew(): Vec3 {\n    return this.clone().fract();\n  }\n\n  /**\n   * Getters and setters\n   */\n\n  /**\n   * (getter/setter) The x value of the vector.\n   *\n   * @type {number}\n   * @default 0\n   */\n  #x: number = 0;\n  set x(x: number) {\n    if (typeof x == \"number\") {\n      this.#x = x;\n    } else {\n      throw new TypeError(\"X should be a number\");\n    }\n  }\n  get x(): number {\n    return this.#x || 0;\n  }\n\n  /**\n   * (getter/setter) The y value of the vector.\n   *\n   * @type {number}\n   * @default 0\n   */\n  #y: number = 0;\n  set y(y: number) {\n    if (typeof y == \"number\") {\n      this.#y = y;\n    } else {\n      throw new TypeError(\"Y should be a number\");\n    }\n  }\n  get y(): number {\n    return this.#y || 0;\n  }\n\n  /**\n   * (getter/setter) The y value of the vector.\n   *\n   * @type {number}\n   * @default 0\n   */\n  #z: number = 0;\n  set z(z: number) {\n    if (typeof z == \"number\") {\n      this.#z = z;\n    } else {\n      throw new TypeError(\"Y should be a number\");\n    }\n  }\n  get z(): number {\n    return this.#z || 0;\n  }\n\n  /**\n   * (getter/setter) The length of the vector presented as a square. If you're using\n   * length for comparison, this is quicker.\n   *\n   * @type {number}\n   * @default 0\n   */\n  set lengthSquared(length: number) {\n    var factor;\n    if (typeof length == \"number\") {\n      factor = length / this.lengthSquared;\n      this.multiplyScalar(factor);\n    } else {\n      throw new TypeError(\"length should be a number\");\n    }\n  }\n  get lengthSquared(): number {\n    return this.x * this.x + this.y * this.y + this.z * this.z;\n  }\n\n  /**\n   * (getter/setter) The length of the vector\n   *\n   * @type {number}\n   * @default 0\n   */\n  set length(length: number) {\n    var factor;\n    if (typeof length == \"number\") {\n      factor = length / this.length;\n      this.multiplyScalar(factor);\n    } else {\n      throw new TypeError(\"length should be a number\");\n    }\n  }\n  get length(): number {\n    return Math.sqrt(this.lengthSquared);\n  }\n\n  /**\n   * (getter/setter) Spherical radius. For using a vec3 as spherical coordinates.\n   * Alias of {@link Vector#x x}\n   *\n   * @type {number}\n   */\n  set radius(s: number) {\n    this.x = s;\n  }\n  get radius(): number {\n    return this.x;\n  }\n\n  /**\n   * (getter/setter) Spherical phi. For using a vec3 as spherical coordinates.\n   * Alias of {@link Vector#y y}\n   *\n   * @type {number}\n   */\n  set phi(p: number) {\n    this.y = p;\n  }\n  get phi(): number {\n    return this.y;\n  }\n\n  /**\n   * (getter/setter) Spherical theta. For using a vec3 as spherical coordinates.\n   * Alias of {@link Vector#z z}\n   *\n   * @type {number}\n   */\n  set theta(t: number) {\n    this.z = t;\n  }\n  get theta(): number {\n    return this.z;\n  }\n\n  /**\n   * (getter/setter) Vector width.\n   * Alias of {@link Vector#x x}\n   *\n   * @type {number}\n   */\n  set width(w: number) {\n    this.x = w;\n  }\n  get width(): number {\n    return this.x;\n  }\n\n  /**\n   * (getter/setter) Vector height.\n   * Alias of {@link Vector#x x}\n   *\n   * @type {number}\n   */\n  set height(h: number) {\n    this.y = h;\n  }\n  get height(): number {\n    return this.y;\n  }\n\n  /**\n   * (getter/setter) Vector height.\n   * Alias of {@link Vector#x x}\n   *\n   * @type {number}\n   */\n  set depth(h: number) {\n    this.z = h;\n  }\n  get depth(): number {\n    return this.z;\n  }\n\n  /**\n   * (getter) Vector area.\n   * @readonly\n   *\n   * @type {number}\n   */\n  get area(): number {\n    return this.x * this.y * this.z;\n  }\n\n  /**\n   * (getter) Returns the basic array representation of this vector.\n   * @readonly\n   *\n   * @type {number}\n   */\n  get array(): number[] {\n    return [this.x, this.y, this.z];\n  }\n\n  /**\n   * (getter/sette) Swizzle XYZ\n   *\n   * @type {Vec3}\n   */\n  get xyz(): any {\n    return new Vec3(this.x, this.y, this.z);\n  }\n  set xyz(v: any) {\n    if (v instanceof Vec3) {\n      this.resetToVector(v);\n    } else if (v instanceof Array && v.length >= 3) {\n      this.reset(v[0], v[1], v[2]);\n    } else {\n      throw new Error(\"input should be of type Vector\");\n    }\n  }\n\n  /**\n   * (getter/sette) Swizzle YZX\n   *\n   * @type {Vec3}\n   */\n  get yzx(): any {\n    return new Vec3(this.y, this.z, this.x);\n  }\n  set yzx(v: any) {\n    this.xyz = Vec3.interpolate(v).yzx;\n  }\n\n  /**\n   * (getter/sette) Swizzle ZXY\n   *\n   * @type {Vec3}\n   */\n  get zxy(): any {\n    return new Vec3(this.z, this.x, this.y);\n  }\n  set zxy(v: any) {\n    this.xyz = Vec3.interpolate(v).zxy;\n  }\n\n  /**\n   * (getter/sette) Swizzle XY\n   *\n   * @type {Vec2}\n   */\n  get xy(): any {\n    return new Vec2(this.x, this.y);\n  }\n  set xy(v: any) {\n    v = Vec2.interpolate(v);\n    this.x = v.x;\n    this.y = v.y;\n  }\n\n  /**\n   * (getter/sette) Swizzle YZ\n   *\n   * @type {Vec2}\n   */\n  get yz(): any {\n    return new Vec2(this.y, this.z);\n  }\n  set yz(v: any) {\n    v = Vec2.interpolate(v);\n    this.y = v.x;\n    this.z = v.y;\n  }\n\n  /**\n   * (getter/sette) Swizzle zx\n   *\n   * @type {Vec2}\n   */\n  get zx(): any {\n    return new Vec2(this.z, this.x);\n  }\n  set zx(v: any) {\n    v = Vec2.interpolate(v);\n    this.z = v.x;\n    this.x = v.y;\n  }\n\n  /**\n   * (getter/sette) Swizzle YX\n   *\n   * @type {number}\n   */\n  get yx(): any {\n    return new Vec2(this.y, this.x);\n  }\n  set yx(v: any) {\n    v = Vec2.interpolate(v);\n    this.x = v.y;\n    this.y = v.x;\n  }\n\n  /**\n   * (getter/sette) Swizzle ZY\n   *\n   * @type {number}\n   */\n  get zy(): any {\n    return new Vec2(this.z, this.y);\n  }\n  set zy(v: any) {\n    v = Vec2.interpolate(v);\n    this.z = v.y;\n    this.y = v.x;\n  }\n\n  /**\n   * (getter/sette) Swizzle XX\n   *\n   * @type {number}\n   */\n  get xx(): any {\n    return new Vec2(this.x, this.x);\n  }\n  set xx(v: any) {\n    v = Vec2.interpolate(v);\n    this.x = v.y;\n  }\n\n  /**\n   * (getter/sette) Swizzle YY\n   *\n   * @type {number}\n   */\n  get yy(): any {\n    return new Vec2(this.y, this.y);\n  }\n  set yy(v: any) {\n    v = Vec2.interpolate(v);\n    this.y = v.y;\n  }\n\n  /**\n   * (getter/sette) Swizzle ZZ\n   *\n   * @type {number}\n   */\n  get zz(): any {\n    return new Vec2(this.z, this.z);\n  }\n  set zz(v: any) {\n    v = Vec2.interpolate(v);\n    this.z = v.y;\n  }\n\n  /**\n   * Static methods\n   */\n  /**\n   * Iterpolates a provided anonymous value into a vew Vec3\n   *\n   * @param {Vec3|array|string|number} v The value to interpolate\n   * @returns {Vec3} out\n   */\n  static interpolate(v: any) {\n    if (v instanceof Vec3) {\n      return new Vec3(v.x, v.y, v.z);\n    } else if (v instanceof Array && v.length >= 3) {\n      return new Vec3(v[0], v[1], v[2]);\n    } else if (!isNaN(v)) {\n      return new Vec3(v, v, v);\n    } else if (typeof v === \"string\") {\n      const nv = v.split(\",\");\n      const x: number = Number(nv[0]);\n      const y: number = Number(nv[1]);\n      const z: number = Number(nv[2]);\n      if (nv.length >= 3 && !isNaN(x) && !isNaN(y) && !isNaN(z)) {\n        return new Vec3(x, y, z);\n      }\n    } else {\n      throw new Error(\"The passed interpolant could not be parsed into a Vec3\");\n    }\n  }\n\n  /**\n   * Performs a linear interpolation between two Vec3's\n   *\n   * @param {Vec3} v1 the first operand\n   * @param {Vec3} v2 the second operand\n   * @param {Number} d interpolation amount in the range of 0 - 1\n   * @returns {Vec3}\n   */\n  static lerp(v1: Vec3, v2: Vec3, d): Vec3 {\n    return new Vec3(\n      v1.x + d * (v2.x - v1.x),\n      v1.y + d * (v2.y - v1.y),\n      v1.z + d * (v2.z - v1.z)\n    );\n  }\n\n  static getAngle(a: Vec3, b: Vec3) {\n    const _a = a.xy,\n      _b = b.xy;\n\n    let len1 = _a.lengthSquared;\n    if (len1 > 0) {\n      //TODO: evaluate use of glm_invsqrt here?\n      len1 = 1 / Math.sqrt(len1);\n    }\n\n    let len2 = _b.lengthSquared;\n    if (len2 > 0) {\n      //TODO: evaluate use of glm_invsqrt here?\n      len2 = 1 / Math.sqrt(len2);\n    }\n\n    let cosine = (_a.x * _b.x + _a.y * _b.y) * len1 * len2;\n\n    if (cosine > 1.0) {\n      return 0;\n    } else if (cosine < -1.0) {\n      return Math.PI;\n    } else {\n      return Math.acos(cosine);\n    }\n  }\n\n  static fromRotationMatrix(m: any, order: String = \"YXZ\"): Vec3 | void {\n    if (m.array) m = m.array; // This just transforms the matrix to an array.\n    if (m instanceof Array && m.length >= 16) {\n      const v = new Vec3();\n      if (order === \"XYZ\") {\n        v.y = Math.asin(Math.min(Math.max(m[8], -1), 1));\n        if (Math.abs(m[8]) < 0.99999) {\n          v.x = Math.atan2(-m[9], m[10]);\n          v.z = Math.atan2(-m[4], m[0]);\n        } else {\n          v.x = Math.atan2(m[6], m[5]);\n          v.z = 0;\n        }\n      } else if (order === \"YXZ\") {\n        v.x = Math.asin(-Math.min(Math.max(m[9], -1), 1));\n        if (Math.abs(m[9]) < 0.99999) {\n          v.y = Math.atan2(m[8], m[10]);\n          v.z = Math.atan2(m[1], m[5]);\n        } else {\n          v.y = Math.atan2(-m[2], m[0]);\n          v.z = 0;\n        }\n      } else if (order === \"ZXY\") {\n        v.x = Math.asin(Math.min(Math.max(m[6], -1), 1));\n        if (Math.abs(m[6]) < 0.99999) {\n          v.y = Math.atan2(-m[2], m[10]);\n          v.z = Math.atan2(-m[4], m[5]);\n        } else {\n          v.y = 0;\n          v.z = Math.atan2(m[1], m[0]);\n        }\n      } else if (order === \"ZYX\") {\n        v.y = Math.asin(-Math.min(Math.max(m[2], -1), 1));\n        if (Math.abs(m[2]) < 0.99999) {\n          v.x = Math.atan2(m[6], m[10]);\n          v.z = Math.atan2(m[1], m[0]);\n        } else {\n          v.x = 0;\n          v.z = Math.atan2(-m[4], m[5]);\n        }\n      } else if (order === \"YZX\") {\n        v.z = Math.asin(Math.min(Math.max(m[1], -1), 1));\n        if (Math.abs(m[1]) < 0.99999) {\n          v.x = Math.atan2(-m[9], m[5]);\n          v.y = Math.atan2(-m[2], m[0]);\n        } else {\n          v.x = 0;\n          v.y = Math.atan2(m[8], m[10]);\n        }\n      } else if (order === \"XZY\") {\n        v.z = Math.asin(-Math.min(Math.max(m[4], -1), 1));\n        if (Math.abs(m[4]) < 0.99999) {\n          v.x = Math.atan2(m[6], m[5]);\n          v.y = Math.atan2(m[8], m[0]);\n        } else {\n          v.x = Math.atan2(-m[9], m[10]);\n          v.y = 0;\n        }\n      }\n      return v;\n    }\n  }\n}\n\nexport { Vec3 };\n","import { Vec2 } from \"./Vec2\";\nimport { Vec3 } from \"./Vec3\";\n\ninterface V4Q {\n  x: number;\n  y: number;\n  z: number;\n  w: number;\n  length: number;\n  lengthSquared: number;\n  width: number;\n  height: number;\n  depth: number;\n  area: number;\n  array: number[];\n  xyzw: any;\n  yzwx: any;\n  zwxy: any;\n  wxyz: any;\n  xyz: any;\n  yzx: any;\n  zxy: any;\n  xx: any;\n  xy: any;\n  xz: any;\n  xw: any;\n  yx: any;\n  yy: any;\n  yz: any;\n  yw: any;\n  zx: any;\n  zy: any;\n  zz: any;\n  zw: any;\n  wx: any;\n  wy: any;\n  wz: any;\n  ww: any;\n  reset(...args: number[]): V4Q;\n  resetToVector(v: V4Q): V4Q;\n  clone(): V4Q;\n  rotateX(origin: V4Q, rad: number): V4Q;\n  rotateXNew(origin: V4Q, rad: number): V4Q;\n  rotateY(origin: V4Q, rad: number): V4Q;\n  rotateYNew(origin: V4Q, rad: number): V4Q;\n  rotateZ(origin: V4Q, rad: number): V4Q;\n  rotateZNew(origin: V4Q, rad: number): V4Q;\n  add(vector: V4Q): V4Q;\n  addNew(vector: V4Q): V4Q;\n  addScalar(scalar: number): V4Q;\n  addScalarNew(scalar: number): V4Q;\n  subtract(vector: V4Q): V4Q;\n  subtractNew(vector: V4Q): V4Q;\n  subtractScalar(scalar: number): V4Q;\n  subtractScalarNew(scalar: number): V4Q;\n  divide(vector: V4Q): V4Q;\n  divideNew(vector: V4Q): V4Q;\n  divideScalar(scalar: number): V4Q;\n  divideScalarNew(scalar: number): V4Q;\n  multiply(q: V4Q): V4Q;\n  multiplyNew(q: V4Q): V4Q;\n  multiplyScalar(scalar: number): V4Q;\n  multiplyScalarNew(scalar: number): V4Q;\n  scale(scalar: number): V4Q;\n  scaleNew(scalar: number): V4Q;\n  transformByMat4(m: any): V4Q;\n  transformByMat4New(m: any): V4Q;\n  transformByQuat(q: any): V4Q;\n  transformByQuatNew(q: any): V4Q;\n  negate(): V4Q;\n  negateNew(): V4Q;\n  inverse(): V4Q;\n  inverseNew(): V4Q;\n  normalise(): V4Q;\n  normaliseNew(): V4Q;\n  distance(vector: V4Q): number;\n  distanceX(vector: V4Q): number;\n  distanceY(vector: V4Q): number;\n  distanceZ(vector: V4Q): number;\n  distanceW(vector: V4Q): number;\n  dot(vector: V4Q): number;\n  cross(v: V4Q, w: V4Q): V4Q;\n  crossNew(v: V4Q, w: V4Q): V4Q;\n  ceil(): V4Q;\n  ceilNew(): V4Q;\n  floor(): V4Q;\n  floorNew(): V4Q;\n  round(): V4Q;\n  roundNew(): V4Q;\n  fract(): V4Q;\n  fractNew(): V4Q;\n}\n\n/**\n * A basic 3D Vector class that provides simple algebraic functionality in the form\n * of 3D Vectors.\n *\n * We use Getters/setters for both principle properties (x & y) as well as virtual\n * properties (rotation, length etc.).\n *\n * @class Vec4\n * @author Liam Egan <liam@wethecollective.com>\n * @version 1.0.0\n * @created Jan 07, 2020\n */\nclass Vec4 implements V4Q {\n  /**\n   * The Vector Class constructor\n   *\n   * @constructor\n   * @param {number} x \t\t\t\tThe x coord\n   * @param {number} y \t\t\t\tThe y coord\n   */\n  constructor(...args: number[]) {\n    this.reset(...args);\n  }\n\n  /**\n   * Resets the vector coordinates\n   *\n   * @public\n   * @chainable\n   * @param {number} x \tThe x coord\n   * @param {number} y \tThe y coord\n   * @param {number} z \tThe z coord\n   * @param {number} w \tThe w coord\n   */\n  reset(...args: number[]): V4Q {\n    let [x, y, z, w] = args;\n    if (isNaN(x)) x = 0;\n    if (isNaN(y)) y = 0;\n    if (isNaN(z)) z = 0;\n    if (isNaN(w)) w = 0;\n    this.x = x;\n    this.y = y;\n    this.z = z;\n    this.w = w;\n    return this;\n  }\n\n  /**\n   * Resets the vector coordinates to another vector object\n   *\n   * @public\n   * @chainable\n   * @param {Vec4} v \t\t\t\tThe vector object to use to reset the coordinates\n   */\n  resetToVector(v: V4Q): V4Q {\n    if (v instanceof Vec4) {\n      this.x = v.x;\n      this.y = v.y;\n      this.z = v.z;\n      this.w = v.w;\n    }\n    return this;\n  }\n\n  /**\n   * Clones the vector\n   *\n   * @public\n   * @return {Vec4}\t\t\t\t\tThe cloned vector\n   */\n  clone(): V4Q {\n    return new Vec4(this.x, this.y, this.z, this.w);\n  }\n\n  /**\n   * Adds one vector to another.\n   *\n   * @public\n   * @chainable\n   * @param  {Vec4}  vector The vector to add to this one\n   * @return {Vec4}\t\t\t\t\tReturns itself, modified\n   */\n  add(vector: V4Q): V4Q {\n    this.x += vector.x;\n    this.y += vector.y;\n    this.z += vector.z;\n    this.w += vector.w;\n    return this;\n  }\n  /**\n   * Clones the vector and adds the vector to it instead\n   *\n   * @public\n   * @chainable\n   * @param  {Vec4}  vector The vector to add to this one\n   * @return {Vec4}\t\t\t\t\tReturns the clone of itself, modified\n   */\n  addNew(vector: V4Q): V4Q {\n    return this.clone().add(vector);\n  }\n\n  /**\n   * Adds a scalar to the vector, modifying both the x and y\n   *\n   * @public\n   * @chainable\n   * @param  {number}  scalar The scalar to add to the vector\n   * @return {Vec4}\t\t\t\t\tReturns itself, modified\n   */\n  addScalar(scalar: number): V4Q {\n    return this.add(new Vec4(scalar, scalar, scalar, scalar));\n  }\n  /**\n   * Clones the vector and adds the scalar to it instead\n   *\n   * @public\n   * @chainable\n   * @param  {number}  scalar The scalar to add to the vector\n   * @return {Vec4}\t\t\t\t\tReturns the clone of itself, modified\n   */\n  addScalarNew(scalar: number): V4Q {\n    return this.clone().addScalar(scalar);\n  }\n\n  /**\n   * Subtracts one vector from another.\n   *\n   * @public\n   * @chainable\n   * @param  {Vec4}  vector The vector to subtract from this one\n   * @return {Vec4}\t\t\t\t\tReturns itself, modified\n   */\n  subtract(vector: V4Q): V4Q {\n    this.x -= vector.x;\n    this.y -= vector.y;\n    this.z -= vector.z;\n    this.w -= vector.w;\n    return this;\n  }\n  /**\n   * Clones the vector and subtracts the vector from it instead\n   *\n   * @public\n   * @chainable\n   * @param  {Vec4}  vector The vector to subtract from this one\n   * @return {Vec4}\t\t\t\t\tReturns the clone of itself, modified\n   */\n  subtractNew(vector: V4Q): V4Q {\n    return this.clone().subtract(vector);\n  }\n\n  /**\n   * Subtracts a scalar from the vector, modifying both the x and y\n   *\n   * @public\n   * @chainable\n   * @param  {number}  scalar The scalar to subtract from the vector\n   * @return {Vec4}\t\t\t\t\tReturns itself, modified\n   */\n  subtractScalar(scalar: number): V4Q {\n    return this.subtract(new Vec4(scalar, scalar, scalar, scalar));\n  }\n  /**\n   * Clones the vector and subtracts the scalar from it instead\n   *\n   * @public\n   * @chainable\n   * @param  {number}  scalar The scalar to add to the vector\n   * @return {Vec4}\t\t\t\t\tReturns the clone of itself, modified\n   */\n  subtractScalarNew(scalar: number): V4Q {\n    return this.clone().subtractScalar(scalar);\n  }\n\n  /**\n   * Divides one vector by another.\n   *\n   * @public\n   * @chainable\n   * @param  {Vec4}  vector The vector to divide this by\n   * @return {Vec4}\t\t\t\t\tReturns itself, modified\n   */\n  divide(vector: V4Q): V4Q {\n    if (vector.x !== 0) {\n      this.x /= vector.x;\n    } else {\n      this.x = 0;\n    }\n    if (vector.y !== 0) {\n      this.y /= vector.y;\n    } else {\n      this.y = 0;\n    }\n    if (vector.z !== 0) {\n      this.z /= vector.z;\n    } else {\n      this.z = 0;\n    }\n    if (vector.w !== 0) {\n      this.w /= vector.w;\n    } else {\n      this.w = 0;\n    }\n    return this;\n  }\n  /**\n   * Clones the vector and divides it by the vector instead\n   *\n   * @public\n   * @chainable\n   * @param  {Vec4}  vector The vector to divide the clone by\n   * @return {Vec4}\t\t\t\t\tReturns the clone of itself, modified\n   */\n  divideNew(vector: V4Q): V4Q {\n    return this.clone().divide(vector);\n  }\n\n  /**\n   * Divides the vector by a scalar.\n   *\n   * @public\n   * @chainable\n   * @param  {number}  scalar The scalar to divide both x and y by\n   * @return {Vec4}\t\t\t\t\tReturns itself, modified\n   */\n  divideScalar(scalar: number): V4Q {\n    var v = new Vec4(scalar, scalar, scalar, scalar);\n    return this.divide(v);\n  }\n  /**\n   * Clones the vector and divides it by the provided scalar.\n   *\n   * @public\n   * @chainable\n   * @param  {number}  scalar The scalar to divide both x and y by\n   * @return {Vec4}\t\t\t\t\tReturns the clone of itself, modified\n   */\n  divideScalarNew(scalar: number): V4Q {\n    return this.clone().divideScalar(scalar);\n  }\n\n  /**\n   * Multiplies one vector by another.\n   *\n   * @public\n   * @chainable\n   * @param  {Vec4}  vector The vector to multiply this by\n   * @return {Vec4}\t\t\t\t\tReturns itself, modified\n   */\n  multiply(vector: V4Q): V4Q {\n    this.x *= vector.x;\n    this.y *= vector.y;\n    this.z *= vector.z;\n    this.w *= vector.w;\n    return this;\n  }\n  /**\n   * Clones the vector and multiplies it by the vector instead\n   *\n   * @public\n   * @chainable\n   * @param  {Vec4}  vector The vector to multiply the clone by\n   * @return {Vec4}\t\t\t\t\tReturns the clone of itself, modified\n   */\n  multiplyNew(q: V4Q): V4Q {\n    return this.clone().multiply(q);\n  }\n\n  /**\n   * Multiplies the vector by a scalar.\n   *\n   * @public\n   * @chainable\n   * @param  {number}  scalar The scalar to multiply both x and y by\n   * @return {Vec4}\t\t\t\t\tReturns itself, modified\n   */\n  multiplyScalar(scalar: number): V4Q {\n    var v: Vec4 = new Vec4(scalar, scalar, scalar, scalar);\n    return this.multiply(v);\n  }\n  /**\n   * Clones the vector and multiplies it by the provided scalar.\n   *\n   * @public\n   * @chainable\n   * @param  {number}  scalar The scalar to multiply both x and y by\n   * @return {Vec4}\t\t\t\t\tReturns the clone of itself, modified\n   */\n  multiplyScalarNew(scalar: number): V4Q {\n    return this.clone().multiplyScalar(scalar);\n  }\n\n  /**\n   * Alias of {@link Vector#multiplyScalar__anchor multiplyScalar}\n   */\n  scale(scalar: number): V4Q {\n    return this.multiplyScalar(scalar);\n  }\n  /**\n   * Alias of {@link Vector#multiplyScalarNew__anchor multiplyScalarNew}\n   */\n  scaleNew(scalar: number): V4Q {\n    return this.multiplyScalarNew(scalar);\n  }\n\n  rotateX(origin: V4Q, radian: number): V4Q {\n    const s = Math.sin(radian);\n    const c = Math.cos(radian);\n\n    // Translate to the origin\n    const translated = this.subtractNew(origin);\n\n    // Rotate\n    const rotated = translated.clone();\n    rotated.y = rotated.y * c - rotated.z * s;\n    rotated.z = rotated.y * s + rotated.z * c;\n\n    // Translate back\n    this.y = rotated.y + origin.y;\n    this.z = rotated.z + origin.z;\n\n    return this;\n  }\n\n  rotateXNew(origin: V4Q, radian: number): V4Q {\n    return this.clone().rotateX(origin, radian);\n  }\n\n  rotateY(origin: V4Q, radian: number): V4Q {\n    const s = Math.sin(radian);\n    const c = Math.cos(radian);\n\n    // Translate to the origin\n    const translated = this.subtractNew(origin);\n\n    // Rotate\n    const rotated = translated.clone();\n    rotated.x = rotated.z * s + rotated.z * c;\n    rotated.z = rotated.z * c - rotated.x * s;\n\n    // Translate back\n    this.x = rotated.x + origin.x;\n    this.z = rotated.z + origin.z;\n\n    return this;\n  }\n\n  rotateYNew(origin: V4Q, radian: number): V4Q {\n    return this.clone().rotateY(origin, radian);\n  }\n\n  rotateZ(origin: V4Q, radian: number): V4Q {\n    const s = Math.sin(radian);\n    const c = Math.cos(radian);\n\n    // Translate to the origin\n    const translated = this.subtractNew(origin);\n\n    // Rotate\n    const rotated = translated.clone();\n    rotated.x = rotated.x * c - rotated.y * s;\n    rotated.y = rotated.x * s + rotated.y * c;\n\n    // Translate back\n    this.x = rotated.x + origin.x;\n    this.y = rotated.y + origin.y;\n\n    return this;\n  }\n\n  rotateZNew(origin: V4Q, radian: number): V4Q {\n    return this.clone().rotateZ(origin, radian);\n  }\n\n  transformByMat4(m: any): V4Q {\n    if (m.array) m = m.array; // This just transforms the matrix to an array.\n    if (m instanceof Array && m.length >= 16) {\n      const o = this.clone();\n      this.x = (m[0] * o.x + m[4] * o.y + m[8] * o.z + m[12]) / this.w;\n      this.y = (m[1] * o.x + m[5] * o.y + m[9] * o.z + m[13]) / this.w;\n      this.z = (m[2] * o.x + m[6] * o.y + m[10] * o.z + m[14]) / this.w;\n      this.w = (m[3] * o.x + m[7] * o.y + m[11] * o.z + m[15]) / this.w;\n    }\n    return this;\n  }\n\n  transformByMat4New(m: any): V4Q {\n    return this.clone().transformByMat4(m);\n  }\n\n  transformByQuat(q: any): V4Q {\n    if (q.array) q = q.array; // This just transforms the quaternion to an array.\n    if (q instanceof Array && q.length >= 4) {\n      const uv = new Vec4(\n        q[3] * this.x + q[1] * this.z - q[2] * this.y,\n        q[3] * this.y + q[2] * this.x - q[0] * this.z,\n        q[3] * this.z + q[0] * this.y - q[1] * this.x,\n        -q[0] * this.x - q[1] * this.y - q[2] * this.z\n      );\n\n      this.x = uv.x * q[3] + uv.w * -q[0] + uv.y * -q[2] - uv.z * -q[1];\n      this.y = uv.y * q[3] + uv.w * -q[1] + uv.z * -q[0] - uv.x * -q[2];\n      this.z = uv.z * q[3] + uv.w * -q[2] + uv.x * -q[1] - uv.y * -q[0];\n    }\n    return this;\n  }\n\n  transformByQuatNew(q: any): V4Q {\n    return this.clone().transformByQuat(q);\n  }\n\n  /**\n   * Negates the vector.\n   *\n   * @public\n   * @chainable\n   * @return {Vec4}\t\t\t\t\tReturns itself, modified\n   */\n  negate(): V4Q {\n    return this.multiplyScalar(-1);\n  }\n\n  /**\n   * Clones the vector and negates it.\n   *\n   * @public\n   * @chainable\n   * @return {Vec4}\t\t\t\t\tReturns itself, modified\n   */\n  negateNew(): V4Q {\n    return this.multiplyScalarNew(-1);\n  }\n\n  /**\n   * Inverses the vector.\n   *\n   * @public\n   * @chainable\n   * @return {Vec4}\t\t\t\t\tReturns itself, modified\n   */\n  inverse(): V4Q {\n    this.x = 1 / this.x;\n    this.y = 1 / this.y;\n    this.z = 1 / this.z;\n    this.w = 1 / this.w;\n    return this;\n  }\n\n  /**\n   * Clones the vector and then inverses it.\n   *\n   * @public\n   * @chainable\n   * @return {Vec4}\t\t\t\t\tReturns itself, modified\n   */\n  inverseNew(): V4Q {\n    const c: V4Q = this.clone();\n    c.x = 1 / c.x;\n    c.y = 1 / c.y;\n    c.z = 1 / c.z;\n    c.w = 1 / c.w;\n    return c;\n  }\n\n  /**\n   * Normalises the vector down to a length of 1 unit\n   *\n   * @public\n   * @chainable\n   * @return {Vec4}\t\t\t\t\tReturns itself, modified\n   */\n  normalise(): V4Q {\n    const l: number = this.length;\n    if (l === 0) {\n      this.x = 0;\n      this.y = 0;\n      this.z = 0;\n      this.w = 1;\n    } else {\n      this.divideScalar(l);\n    }\n    return this;\n  }\n  /**\n   * Clones the vector and normalises it\n   *\n   * @public\n   * @chainable\n   * @return {Vec4}\t\t\t\t\tReturns a clone of itself, modified\n   */\n  normaliseNew(): V4Q {\n    return this.clone().normalise();\n  }\n\n  /**\n   * Calculates the distance between this and the supplied vector\n   *\n   * @param  {Vec4} vector The vector to calculate the distance from\n   * @return {number}        The distance between this and the supplied vector\n   */\n  distance(vector: V4Q): number {\n    return this.subtractNew(vector).length;\n  }\n\n  /**\n   * Calculates the distance on the X axis between this and the supplied vector\n   *\n   * @param  {Vec4} vector The vector to calculate the distance from\n   * @return {number}        The distance, along the x axis, between this and the supplied vector\n   */\n  distanceX(vector: V4Q): number {\n    return this.x - vector.x;\n  }\n\n  /**\n   * Calculated the distance on the Y axis between this and the supplied vector\n   *\n   * @param  {Vec4} vector The vector to calculate the distance from\n   * @return {number}        The distance, along the y axis, between this and the supplied vector\n   */\n  distanceY(vector: V4Q): number {\n    return this.y - vector.y;\n  }\n\n  /**\n   * Calculated the distance on the Z axis between this and the supplied vector\n   *\n   * @param  {Vec4} vector The vector to calculate the distance from\n   * @return {number}        The distance, along the y axis, between this and the supplied vector\n   */\n  distanceZ(vector: V4Q): number {\n    return this.z - vector.z;\n  }\n\n  /**\n   * Calculated the distance on the W axis between this and the supplied vector\n   *\n   * @param  {Vec4} vector The vector to calculate the distance from\n   * @return {number}        The distance, along the y axis, between this and the supplied vector\n   */\n  distanceW(vector: V4Q): number {\n    return this.w - vector.w;\n  }\n\n  /**\n   * Calculates the dot product between this and a supplied vector\n   *\n   * @example\n   * // returns -14\n   * new Vector(2, -3).dot(new Vector(-4, 2))\n   * new Vector(-4, 2).dot(new Vector(2, -3))\n   * new Vector(2, -4).dot(new Vector(-3, 2))\n   *\n   * @param  {Vec4} vector The vector object against which to calculate the dot product\n   * @return {number}        The dot product of the two vectors\n   */\n  dot(vector: V4Q): number {\n    return (\n      this.x * vector.x +\n      this.y * vector.y +\n      this.z * vector.z +\n      this.w * vector.w\n    );\n  }\n\n  /**\n   * Calculates the cross product between this and two other supplied vectors\n   *\n   * @example\n   * // returns -2\n   * new Vector(2, -3).cross(new Vector(-4, 2))\n   * new Vector(-4, 2).cross(new Vector(2, -3))\n   * // returns 2\n   * new Vector(2, -4).cross(new Vector(-3, 2))\n   *\n   * @param  {Vec4} vector The vector object against which to calculate the cross product\n   * @return {Vec4}        The cross product of the two vectors\n   */\n  cross(v: V4Q, w: V4Q): V4Q {\n    const u = this.clone();\n\n    const A = v[0] * w[1] - v[1] * w[0],\n      B = v[0] * w[2] - v[2] * w[0],\n      C = v[0] * w[3] - v[3] * w[0],\n      D = v[1] * w[2] - v[2] * w[1],\n      E = v[1] * w[3] - v[3] * w[1],\n      F = v[2] * w[3] - v[3] * w[2],\n      G = u[0],\n      H = u[1],\n      I = u[2],\n      J = u[3];\n\n    return new Vec4(\n      H * F - I * E + J * D,\n      -(G * F) + I * C - J * B,\n      G * E - H * C + J * A,\n      -(G * D) + H * B - I * A\n    );\n  }\n\n  crossNew(v: V4Q, w: V4Q): V4Q {\n    return this.clone().cross(v, w);\n  }\n\n  ceil(): V4Q {\n    this.x = Math.ceil(this.x);\n    this.y = Math.ceil(this.y);\n    this.z = Math.ceil(this.z);\n    this.w = Math.ceil(this.w);\n    return this;\n  }\n\n  ceilNew(): V4Q {\n    return this.clone().ceil();\n  }\n\n  floor(): V4Q {\n    this.x = Math.floor(this.x);\n    this.y = Math.floor(this.y);\n    this.z = Math.floor(this.z);\n    this.w = Math.floor(this.w);\n    return this;\n  }\n\n  floorNew(): V4Q {\n    return this.clone().floor();\n  }\n\n  round(): V4Q {\n    this.x = Math.round(this.x);\n    this.y = Math.round(this.y);\n    this.z = Math.round(this.z);\n    this.w = Math.round(this.w);\n    return this;\n  }\n\n  roundNew(): V4Q {\n    return this.clone().round();\n  }\n\n  fract(): V4Q {\n    this.x -= Math.floor(this.x);\n    this.y -= Math.floor(this.y);\n    this.z -= Math.floor(this.z);\n    this.w -= Math.floor(this.w);\n    return this;\n  }\n\n  fractNew(): V4Q {\n    return this.clone().fract();\n  }\n\n  /**\n   * Getters and setters\n   */\n\n  /**\n   * (getter/setter) The x value of the vector.\n   *\n   * @type {number}\n   * @default 0\n   */\n  private _x: number = 0;\n  set x(x) {\n    if (typeof x == \"number\") {\n      this._x = x;\n    } else {\n      throw new TypeError(\"X should be a number\");\n    }\n  }\n  get x() {\n    return this._x || 0;\n  }\n\n  /**\n   * (getter/setter) The y value of the vector.\n   *\n   * @type {number}\n   * @default 0\n   */\n  private _y: number = 0;\n  set y(y) {\n    if (typeof y == \"number\") {\n      this._y = y;\n    } else {\n      throw new TypeError(\"Y should be a number\");\n    }\n  }\n  get y() {\n    return this._y || 0;\n  }\n\n  /**\n   * (getter/setter) The y value of the vector.\n   *\n   * @type {number}\n   * @default 0\n   */\n  private _z: number = 0;\n  set z(z) {\n    if (typeof z == \"number\") {\n      this._z = z;\n    } else {\n      throw new TypeError(\"Y should be a number\");\n    }\n  }\n  get z() {\n    return this._z || 0;\n  }\n\n  /**\n   * (getter/setter) The y value of the vector.\n   *\n   * @type {number}\n   * @default 0\n   */\n  private _w: number = 0;\n  set w(w) {\n    if (typeof w == \"number\") {\n      this._w = w;\n    } else {\n      throw new TypeError(\"W should be a number\");\n    }\n  }\n  get w() {\n    return this._w || 0;\n  }\n\n  /**\n   * (getter/setter) The length of the vector presented as a square. If you're using\n   * length for comparison, this is quicker.\n   *\n   * @type {number}\n   * @default 0\n   */\n  set lengthSquared(length: number) {\n    var factor;\n    if (typeof length == \"number\") {\n      factor = length / this.lengthSquared;\n      this.multiplyScalar(factor);\n    } else {\n      throw new TypeError(\"length should be a number\");\n    }\n  }\n  get lengthSquared(): number {\n    return (\n      this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w\n    );\n  }\n\n  /**\n   * (getter/setter) The length of the vector\n   *\n   * @type {number}\n   * @default 0\n   */\n  set length(length: number) {\n    var factor;\n    if (typeof length == \"number\") {\n      factor = length / this.length;\n      this.multiplyScalar(factor);\n    } else {\n      throw new TypeError(\"length should be a number\");\n    }\n  }\n  get length(): number {\n    return Math.sqrt(this.lengthSquared);\n  }\n\n  /**\n   * (getter/setter) Vector width.\n   * Alias of {@link Vector#x x}\n   *\n   * @type {number}\n   */\n  set width(w: number) {\n    this.x = w;\n  }\n  get width(): number {\n    return this.x;\n  }\n\n  /**\n   * (getter/setter) Vector height.\n   * Alias of {@link Vector#x x}\n   *\n   * @type {number}\n   */\n  set height(h: number) {\n    this.y = h;\n  }\n  get height(): number {\n    return this.y;\n  }\n\n  /**\n   * (getter/setter) Vector height.\n   * Alias of {@link Vector#x x}\n   *\n   * @type {number}\n   */\n  set depth(h: number) {\n    this.z = h;\n  }\n  get depth(): number {\n    return this.z;\n  }\n\n  /**\n   * (getter) Vector area.\n   * @readonly\n   *\n   * @type {number}\n   */\n  get area(): number {\n    return this.x * this.y * this.z * this.w;\n  }\n\n  /**\n   * (getter) Returns the basic array representation of this vector.\n   * @readonly\n   *\n   * @type {number}\n   */\n  get array(): number[] {\n    return [this.x, this.y, this.z, this.w];\n  }\n\n  /**\n   * (getter/sette) Swizzle XYZW\n   *\n   * @type {Vec4}\n   */\n  get xyzw(): any {\n    return new Vec4(this.x, this.y, this.z, this.w);\n  }\n  set xyzw(v: any) {\n    if (v instanceof Vec4) {\n      this.resetToVector(v);\n    } else if (v instanceof Array && v.length >= 4) {\n      this.reset(v[0], v[1], v[2], v[3]);\n    } else {\n      throw new Error(\"input should be of type Vector\");\n    }\n  }\n\n  /**\n   * (getter/sette) Swizzle XYZW\n   *\n   * @type {Vec4}\n   */\n  get yzwx(): any {\n    return new Vec4(this.y, this.z, this.w, this.x);\n  }\n  set yzwx(v: any) {\n    this.xyzw = Vec4.interpolate(v).yzwx;\n  }\n\n  /**\n   * (getter/sette) Swizzle XYZW\n   *\n   * @type {Vec4}\n   */\n  get zwxy(): any {\n    return new Vec4(this.z, this.w, this.x, this.y);\n  }\n  set zwxy(v: any) {\n    this.xyzw = Vec4.interpolate(v).zwxy;\n  }\n\n  /**\n   * (getter/sette) Swizzle XYZW\n   *\n   * @type {Vec4}\n   */\n  get wxyz(): any {\n    return new Vec4(this.w, this.x, this.y, this.z);\n  }\n  set wxyz(v: any) {\n    this.xyzw = Vec4.interpolate(v).wxyz;\n  }\n\n  // I'm skipping all the silly combinations of 4 here because they're largely useless\n\n  /**\n   * (getter/sette) Swizzle YZX\n   *\n   * @type {Vec3}\n   */\n  get xyz(): any {\n    return new Vec3(this.x, this.y, this.z);\n  }\n  set xyz(v: any) {\n    v = Vec3.interpolate(v);\n    this.x = v.x;\n    this.y = v.y;\n    this.z = v.z;\n  }\n\n  /**\n   * (getter/sette) Swizzle YZX\n   *\n   * @type {Vec3}\n   */\n  get yzx(): any {\n    return new Vec3(this.y, this.z, this.x);\n  }\n  set yzx(v: any) {\n    v = Vec3.interpolate(v);\n    this.x = v.y;\n    this.y = v.z;\n    this.z = v.x;\n  }\n\n  /**\n   * (getter/sette) Swizzle ZXY\n   *\n   * @type {Vec3}\n   */\n  get zxy(): any {\n    return new Vec3(this.z, this.x, this.y);\n  }\n  set zxy(v: any) {\n    v = Vec3.interpolate(v);\n    this.x = v.z;\n    this.y = v.x;\n    this.z = v.y;\n  }\n\n  /**\n   * (getter/sette) Swizzle XX\n   *\n   * @type {number}\n   */\n  get xx(): any {\n    return new Vec2(this.x, this.x);\n  }\n  set xx(v: any) {\n    v = Vec2.interpolate(v);\n    this.x = v.y;\n  }\n\n  /**\n   * (getter/sette) Swizzle XY\n   *\n   * @type {Vec2}\n   */\n  get xy(): any {\n    return new Vec2(this.x, this.y);\n  }\n  set xy(v: any) {\n    v = Vec2.interpolate(v);\n    this.x = v.x;\n    this.y = v.y;\n  }\n\n  /**\n   * (getter/sette) Swizzle XY\n   *\n   * @type {Vec2}\n   */\n  get xz(): any {\n    return new Vec2(this.x, this.z);\n  }\n  set xz(v: any) {\n    v = Vec2.interpolate(v);\n    this.x = v.x;\n    this.z = v.y;\n  }\n\n  /**\n   * (getter/sette) Swizzle XY\n   *\n   * @type {Vec2}\n   */\n  get xw(): any {\n    return new Vec2(this.x, this.w);\n  }\n  set xw(v: any) {\n    v = Vec2.interpolate(v);\n    this.x = v.x;\n    this.z = v.y;\n  }\n\n  /**\n   * (getter/sette) Swizzle YX\n   *\n   * @type {number}\n   */\n  get yx(): any {\n    return new Vec2(this.y, this.x);\n  }\n  set yx(v: any) {\n    v = Vec2.interpolate(v);\n    this.x = v.y;\n    this.y = v.x;\n  }\n\n  /**\n   * (getter/sette) Swizzle YY\n   *\n   * @type {number}\n   */\n  get yy(): any {\n    return new Vec2(this.y, this.y);\n  }\n  set yy(v: any) {\n    v = Vec2.interpolate(v);\n    this.y = v.y;\n  }\n\n  /**\n   * (getter/sette) Swizzle YZ\n   *\n   * @type {Vec2}\n   */\n  get yz(): any {\n    return new Vec2(this.y, this.z);\n  }\n  set yz(v: any) {\n    v = Vec2.interpolate(v);\n    this.y = v.x;\n    this.z = v.y;\n  }\n\n  /**\n   * (getter/sette) Swizzle YZ\n   *\n   * @type {Vec2}\n   */\n  get yw(): any {\n    return new Vec2(this.y, this.w);\n  }\n  set yw(v: any) {\n    v = Vec2.interpolate(v);\n    this.y = v.x;\n    this.w = v.y;\n  }\n\n  /**\n   * (getter/sette) Swizzle zx\n   *\n   * @type {Vec2}\n   */\n  get zx(): any {\n    return new Vec2(this.z, this.x);\n  }\n  set zx(v: any) {\n    v = Vec2.interpolate(v);\n    this.z = v.x;\n    this.x = v.y;\n  }\n\n  /**\n   * (getter/sette) Swizzle ZY\n   *\n   * @type {number}\n   */\n  get zy(): any {\n    return new Vec2(this.z, this.y);\n  }\n  set zy(v: any) {\n    v = Vec2.interpolate(v);\n    this.z = v.y;\n    this.y = v.x;\n  }\n\n  /**\n   * (getter/sette) Swizzle ZZ\n   *\n   * @type {number}\n   */\n  get zz(): any {\n    return new Vec2(this.z, this.z);\n  }\n  set zz(v: any) {\n    v = Vec2.interpolate(v);\n    this.z = v.y;\n  }\n\n  /**\n   * (getter/sette) Swizzle XY\n   *\n   * @type {Vec2}\n   */\n  get zw(): any {\n    return new Vec2(this.z, this.w);\n  }\n  set zw(v: any) {\n    v = Vec2.interpolate(v);\n    this.z = v.x;\n    this.w = v.y;\n  }\n\n  /**\n   * (getter/sette) Swizzle wx\n   *\n   * @type {Vec2}\n   */\n  get wx(): any {\n    return new Vec2(this.w, this.x);\n  }\n  set wx(v: any) {\n    v = Vec2.interpolate(v);\n    this.w = v.x;\n    this.x = v.y;\n  }\n\n  /**\n   * (getter/sette) Swizzle WY\n   *\n   * @type {number}\n   */\n  get wy(): any {\n    return new Vec2(this.w, this.y);\n  }\n  set wy(v: any) {\n    v = Vec2.interpolate(v);\n    this.w = v.x;\n    this.y = v.y;\n  }\n\n  /**\n   * (getter/sette) Swizzle WZ\n   *\n   * @type {number}\n   */\n  get wz(): any {\n    return new Vec2(this.w, this.z);\n  }\n  set wz(v: any) {\n    v = Vec2.interpolate(v);\n    this.w = v.x;\n    this.z = v.y;\n  }\n\n  /**\n   * (getter/sette) Swizzle WW\n   *\n   * @type {Vec2}\n   */\n  get ww(): any {\n    return new Vec2(this.w, this.w);\n  }\n  set ww(v: any) {\n    v = Vec2.interpolate(v);\n    this.w = v.y;\n  }\n\n  /**\n   * Static methods\n   */\n\n  /**\n   * Iterpolates a provided anonymous value into a vew Vec4\n   *\n   * @param {Vec4|array|string|number} v The value to interpolate\n   * @returns {Vec4} out\n   */\n  static interpolate(v) {\n    if (v instanceof Vec4) {\n      return new Vec4(v.x, v.y, v.z, v.w);\n    } else if (v instanceof Array && v.length >= 4) {\n      return new Vec4(v[0], v[1], v[2], v[3]);\n    } else if (!isNaN(v)) {\n      return new Vec4(v, v, v, v);\n    } else if (typeof v === \"string\") {\n      const nv = v.split(\",\");\n      const x: number = Number(nv[0]);\n      const y: number = Number(nv[1]);\n      const z: number = Number(nv[2]);\n      const w: number = Number(nv[3]);\n      if (nv.length >= 3 && !isNaN(x) && !isNaN(y) && !isNaN(z) && !isNaN(w)) {\n        return new Vec4(x, y, z, w);\n      }\n    } else {\n      throw new Error(\"The passed interpolant could not be parsed into a Vec4\");\n    }\n  }\n\n  /**\n   * Performs a linear interpolation between two Vec4's\n   *\n   * @param {Vec4} v1 the first operand\n   * @param {Vec4} v2 the second operand\n   * @param {Number} d interpolation amount in the range of 0 - 1\n   * @returns {Vec4}\n   */\n  static lerp(v1, v2, d) {\n    return new Vec4(\n      v1.x + d * (v2.x - v1.x),\n      v1.y + d * (v2.y - v1.y),\n      v1.z + d * (v2.z - v1.z),\n      v1.w + d * (v2.w - v1.w)\n    );\n  }\n\n  static getAngle(a, b) {\n    let dotproduct = a.dot(b);\n\n    return Math.acos(2 * dotproduct * dotproduct - 1);\n  }\n}\n\nexport { Vec4, V4Q };\n","const identity = [1, 0, 0, 1];\n\nconst identToIndex = function (v: string): number {\n  return [\"a11\", \"a12\", \"a21\", \"a22\"].indexOf(v);\n};\n\nconst orDefault = function (v: any, ident: string): number {\n  return isNaN(v) ? identity[identToIndex(ident)] : Number(v);\n};\n\nclass Mat2 {\n  constructor(...args: number[]) {\n    const [a11, a12, a21, a22] = args;\n    this.reset(a11, a12, a21, a22);\n  }\n\n  reset(a11: number, a12: number, a21: number, a22: number): Mat2 {\n    this.a11 = orDefault(a11, \"a11\");\n    this.a12 = orDefault(a12, \"a12\");\n    this.a21 = orDefault(a21, \"a21\");\n    this.a22 = orDefault(a22, \"a22\");\n    return this;\n  }\n\n  resetToMat2(m: Mat2): Mat2 {\n    this.a11 = m.a11;\n    this.a12 = m.a12;\n    this.a21 = m.a21;\n    this.a22 = m.a22;\n    return this;\n  }\n\n  clone(): Mat2 {\n    return new Mat2(this.a11, this.a12, this.a21, this.a22);\n  }\n\n  transpose(): Mat2 {\n    const a12 = this.a12;\n    this.a12 = this.a21;\n    this.a21 = a12;\n    return this;\n  }\n\n  transposeNew(): Mat2 {\n    return this.clone().transpose();\n  }\n\n  add(m: Mat2): Mat2 {\n    this.a11 += m.a11;\n    this.a12 += m.a12;\n    this.a21 += m.a21;\n    this.a22 += m.a22;\n    return this;\n  }\n\n  addNew(m: Mat2): Mat2 {\n    return this.clone().add(m);\n  }\n\n  // @TODO: We might want to generalise this and allow any sort of matrix on these operations\n\n  subtract(m: Mat2): Mat2 {\n    this.a11 -= m.a11;\n    this.a12 -= m.a12;\n    this.a21 -= m.a21;\n    this.a22 -= m.a22;\n    return this;\n  }\n\n  subtractNew(m: Mat2): Mat2 {\n    return this.clone().subtract(m);\n  }\n\n  multiply(m: Mat2): Mat2 {\n    const o = this.clone();\n    this.a11 = o.a11 * m.a11 + o.a21 * m.a12;\n    this.a12 = o.a12 * m.a11 + o.a22 * m.a12;\n    this.a21 = o.a11 * m.a21 + o.a21 * m.a22;\n    this.a22 = o.a12 * m.a21 + o.a22 * m.a22;\n    return this;\n  }\n\n  multiplyNew(m: Mat2): Mat2 {\n    return this.clone().multiply(m);\n  }\n\n  multiplyScalar(s: number): Mat2 {\n    this.a11 *= s;\n    this.a12 *= s;\n    this.a21 *= s;\n    this.a22 *= s;\n    return this;\n  }\n\n  multiplyScalarNew(s: number): Mat2 {\n    return this.clone().multiplyScalar(s);\n  }\n\n  scale(s: number): Mat2 {\n    return this.multiplyScalar(s);\n  }\n\n  scaleNew(s: number): Mat2 {\n    return this.multiplyScalarNew(s);\n  }\n\n  scaleByVec2(v: any): Mat2 {\n    if (v.array) v = v.array; // This just transforms a provided vector into to an array.\n\n    if (v instanceof Array) {\n      this.a11 *= v[0];\n      this.a12 *= v[0];\n      this.a21 *= v[1];\n      this.a22 *= v[1];\n    }\n\n    return this;\n  }\n\n  scaleByVec2New(v: any): Mat2 {\n    return this.clone().scaleByVec2(v);\n  }\n\n  rotate(r: number): Mat2 {\n    const o = this.clone();\n    const s = Math.sin(r);\n    const c = Math.cos(r);\n    this.a11 = o.a11 * c + o.a21 * s;\n    this.a12 = o.a12 * c + o.a22 * s;\n    this.a21 = o.a11 * -s + o.a21 * c;\n    this.a22 = o.a12 * -s + o.a22 * c;\n    return this;\n  }\n\n  rotateNew(r: number): Mat2 {\n    return this.clone().rotate(r);\n  }\n\n  invert(): Mat2 {\n    const c = this.clone();\n\n    let det = this.determinant;\n\n    // If we don't have a determinant this function should fail silently and just return the unmodified array\n    if (det) {\n      det = 1 / det;\n\n      this.a11 = c.a22 * det;\n      this.a12 = -c.a12 * det;\n      this.a21 = -c.a21 * det;\n      this.a22 = c.a11 * det;\n    }\n\n    return this;\n  }\n\n  invertNew(): Mat2 {\n    return this.clone().invert();\n  }\n\n  /**\n   * Calculates the adjugate of a mat2\n   *\n   * @returns {mat2} out\n   */\n  adjoint(): Mat2 {\n    const a11 = this.a11;\n    this.a11 = this.a22;\n    this.a12 = -this.a12;\n    this.a21 = -this.a21;\n    this.a22 = a11;\n\n    return this;\n  }\n\n  adjointNew(): Mat2 {\n    return this.clone().adjoint();\n  }\n\n  toString(): string {\n    return `\n      ${this.a11}, ${this.a12},\n      ${this.a21}, ${this.a22}\n    `;\n  }\n\n  /**\n   * Getters and setters\n   */\n\n  /**\n   * (getter/setter) The a11 value of the matrix.\n   *\n   * @type {number}\n   * @default 0\n   */\n  #a11: number = 0;\n  set a11(v) {\n    if (typeof v == \"number\") {\n      this.#a11 = v;\n    } else {\n      throw new TypeError(\"a11 should be a number\");\n    }\n  }\n  get a11() {\n    return this.#a11 || 0;\n  }\n\n  /**\n   * (getter/setter) The a12 value of the matrix.\n   *\n   * @type {number}\n   * @default 0\n   */\n  #a12: number = 0;\n  set a12(v) {\n    if (typeof v == \"number\") {\n      this.#a12 = v;\n    } else {\n      throw new TypeError(\"a12 should be a number\");\n    }\n  }\n  get a12() {\n    return this.#a12 || 0;\n  }\n\n  /**\n   * (getter/setter) The a21 value of the matrix.\n   *\n   * @type {number}\n   * @default 0\n   */\n  #a21: number = 0;\n  set a21(v) {\n    if (typeof v == \"number\") {\n      this.#a21 = v;\n    } else {\n      throw new TypeError(\"a21 should be a number\");\n    }\n  }\n  get a21() {\n    return this.#a21 || 0;\n  }\n\n  /**\n   * (getter/setter) The a22 value of the matrix.\n   *\n   * @type {number}\n   * @default 0\n   */\n  #a22: number = 0;\n  set a22(v) {\n    if (typeof v == \"number\") {\n      this.#a22 = v;\n    } else {\n      throw new TypeError(\"a22 should be a number\");\n    }\n  }\n  get a22() {\n    return this.#a22 || 0;\n  }\n\n  get determinant(): number {\n    return this.a11 * this.a21 - this.a21 * this.a12;\n  }\n\n  /**\n   * (getter) Returns the basic array representation of this matrix.\n   * @readonly\n   *\n   * @type {array}\n   */\n  get array(): number[] {\n    return [this.a11, this.a12, this.a21, this.a22];\n  }\n\n  /**\n   * (getter) Returns the basic array representation of this matrix.\n   * this returns the array in column-major form.\n   * @readonly\n   *\n   * @type {array}\n   */\n  get columnArray(): number[] {\n    return [this.a11, this.a21, this.a12, this.a22];\n  }\n\n  static fromAngle(r: number): Mat2 {\n    let s = Math.sin(r);\n    let c = Math.cos(r);\n\n    return new Mat2(c, -s, s, c);\n  }\n\n  static fromScalingVec2(v: any): Mat2 {\n    if (v.array) v = v.array; // This just transforms a provided vector into to an array.\n\n    if (v instanceof Array) {\n      return new Mat2(v[0], 0, 0, v[1]);\n    }\n    return Mat2.identity();\n  }\n\n  static identity(): Mat2 {\n    return new Mat2(...identity);\n  }\n}\n\nexport { Mat2 };\n","const identity = [1, 0, 0, 0, 1, 0, 0, 0, 1];\n\n/** TO DO\n * Move these functions to a types file\n */\ntype Mat3DeterminantFunction = {\n  f: {\n    b01: number;\n    b11: number;\n    b21: number;\n  };\n  determinant: number;\n};\ntype Mat4DeterminantFunction = {\n  f: {\n    b00: number;\n    b01: number;\n    b02: number;\n    b03: number;\n    b04: number;\n    b05: number;\n    b06: number;\n    b07: number;\n    b08: number;\n    b09: number;\n    b10: number;\n    b11: number;\n  };\n  determinant: number;\n};\ninterface Mat4 {\n  a11: number;\n  a12: number;\n  a13: number;\n  a14: number;\n\n  a21: number;\n  a22: number;\n  a23: number;\n  a24: number;\n\n  a31: number;\n  a32: number;\n  a33: number;\n  a34: number;\n\n  a41: number;\n  a42: number;\n  a43: number;\n  a44: number;\n\n  determinantFunction: Mat4DeterminantFunction;\n}\n\nconst identToIndex = function (v: string): number {\n  return [\n    \"a11\",\n    \"a12\",\n    \"a13\",\n    \"a21\",\n    \"a22\",\n    \"a23\",\n    \"a31\",\n    \"a32\",\n    \"a33\",\n  ].indexOf(v);\n};\n\nconst orDefault = function (v: any, ident: string): number {\n  return isNaN(v) ? identity[identToIndex(ident)] : Number(v);\n};\n\nclass Mat3 {\n  constructor(...args: number[]) {\n    this.reset(...args);\n  }\n\n  reset(...args: number[]): Mat3 {\n    const [a11, a12, a13, a21, a22, a23, a31, a32, a33] = args;\n    this.a11 = orDefault(a11, \"a11\");\n    this.a12 = orDefault(a12, \"a12\");\n    this.a13 = orDefault(a13, \"a13\");\n\n    this.a21 = orDefault(a21, \"a21\");\n    this.a22 = orDefault(a22, \"a22\");\n    this.a23 = orDefault(a23, \"a23\");\n\n    this.a31 = orDefault(a31, \"a31\");\n    this.a32 = orDefault(a32, \"a32\");\n    this.a33 = orDefault(a33, \"a33\");\n    return this;\n  }\n\n  resetToMat3(m: Mat3): Mat3 {\n    this.a11 = m.a11;\n    this.a12 = m.a12;\n    this.a13 = m.a13;\n    this.a21 = m.a21;\n    this.a22 = m.a22;\n    this.a23 = m.a23;\n    this.a31 = m.a31;\n    this.a32 = m.a32;\n    this.a33 = m.a33;\n    return this;\n  }\n\n  clone(): Mat3 {\n    return new Mat3(\n      this.a11,\n      this.a12,\n      this.a13,\n      this.a21,\n      this.a22,\n      this.a23,\n      this.a31,\n      this.a32,\n      this.a33\n    );\n  }\n\n  transpose(): Mat3 {\n    const a12 = this.a12,\n      a13 = this.a13,\n      a23 = this.a23;\n\n    this.a12 = this.a21;\n    this.a13 = this.a31;\n    this.a21 = a12;\n    this.a23 = this.a32;\n    this.a31 = a13;\n    this.a32 = a23;\n\n    return this;\n  }\n\n  transposeNew(): Mat3 {\n    return this.clone().transpose();\n  }\n\n  adjoint(): Mat3 {\n    const o = this.clone();\n\n    this.a11 = o.a22 * o.a33 - o.a23 * o.a32;\n    this.a12 = o.a13 * o.a32 - o.a12 * o.a33;\n    this.a13 = o.a12 * o.a23 - o.a13 * o.a22;\n\n    this.a21 = o.a23 * o.a31 - o.a21 * o.a33;\n    this.a22 = o.a11 * o.a33 - o.a13 * o.a31;\n    this.a23 = o.a13 * o.a21 - o.a11 * o.a23;\n\n    this.a31 = o.a21 * o.a32 - o.a22 * o.a31;\n    this.a32 = o.a12 * o.a31 - o.a11 * o.a32;\n    this.a33 = o.a11 * o.a22 - o.a12 * o.a21;\n\n    return this;\n  }\n\n  adjointNew(): Mat3 {\n    return this.clone().adjoint();\n  }\n\n  add(m: Mat3): Mat3 {\n    this.a11 += m.a11;\n    this.a12 += m.a12;\n    this.a13 += m.a13;\n    this.a21 += m.a21;\n    this.a22 += m.a22;\n    this.a23 += m.a23;\n    this.a31 += m.a31;\n    this.a32 += m.a32;\n    this.a33 += m.a33;\n    return this;\n  }\n\n  addNew(m: Mat3): Mat3 {\n    return this.clone().add(m);\n  }\n\n  // @TODO: We might want to generalise this and allow any sort of matrix on these operations\n\n  subtract(m: Mat3): Mat3 {\n    this.a11 -= m.a11;\n    this.a12 -= m.a12;\n    this.a13 -= m.a13;\n    this.a21 -= m.a21;\n    this.a22 -= m.a22;\n    this.a23 -= m.a23;\n    this.a31 -= m.a31;\n    this.a32 -= m.a32;\n    this.a33 -= m.a33;\n    return this;\n  }\n\n  subtractNew(m: Mat3): Mat3 {\n    return this.clone().subtract(m);\n  }\n\n  multiply(m: Mat3): Mat3 {\n    const o = this.clone();\n    this.a11 = m.a11 * o.a11 + m.a12 * o.a21 + m.a13 * o.a31;\n    this.a12 = m.a11 * o.a12 + m.a12 * o.a22 + m.a13 * o.a32;\n    this.a13 = m.a11 * o.a13 + m.a12 * o.a23 + m.a13 * o.a33;\n\n    this.a21 = m.a21 * o.a11 + m.a22 * o.a21 + m.a23 * o.a31;\n    this.a22 = m.a21 * o.a12 + m.a22 * o.a22 + m.a23 * o.a32;\n    this.a23 = m.a21 * o.a13 + m.a22 * o.a23 + m.a23 * o.a33;\n\n    this.a31 = m.a31 * o.a11 + m.a32 * o.a21 + m.a33 * o.a31;\n    this.a32 = m.a31 * o.a12 + m.a32 * o.a22 + m.a33 * o.a32;\n    this.a33 = m.a31 * o.a13 + m.a32 * o.a23 + m.a33 * o.a33;\n    return this;\n  }\n\n  multiplyNew(m: Mat3): Mat3 {\n    return this.clone().multiply(m);\n  }\n\n  multiplyScalar(s: number): Mat3 {\n    this.a11 *= s;\n    this.a12 *= s;\n    this.a13 *= s;\n    this.a21 *= s;\n    this.a22 *= s;\n    this.a23 *= s;\n    this.a31 *= s;\n    this.a32 *= s;\n    this.a33 *= s;\n    return this;\n  }\n\n  multiplyScalarNew(s: number): Mat3 {\n    return this.clone().multiplyScalar(s);\n  }\n\n  scale(s: number): Mat3 {\n    return this.multiplyScalar(s);\n  }\n\n  scaleNew(s: number): Mat3 {\n    return this.multiplyScalarNew(s);\n  }\n\n  scaleByVec2(v: any): Mat3 {\n    if (v.array) v = v.array;\n\n    this.a11 *= v[0];\n    this.a12 *= v[0];\n    this.a13 *= v[0];\n\n    this.a21 *= v[1];\n    this.a22 *= v[1];\n    this.a23 *= v[1];\n\n    return this;\n  }\n\n  scaleByVec2New(v: any): Mat3 {\n    return this.clone().scaleByVec2(v);\n  }\n\n  rotate(r: number): Mat3 {\n    const o = this.clone();\n    const s = Math.sin(r);\n    const c = Math.cos(r);\n\n    this.a11 = o.a11 * c + o.a21 * s;\n    this.a12 = o.a12 * c + o.a22 * s;\n    this.a13 = o.a13 * c + o.a23 * s;\n\n    this.a21 = o.a21 * c - o.a11 * s;\n    this.a22 = o.a22 * c - o.a12 * s;\n    this.a23 = o.a23 * c - o.a13 * s;\n\n    return this;\n  }\n\n  rotateNew(r: number): Mat3 {\n    return this.clone().rotate(r);\n  }\n\n  invert(): Mat3 {\n    const o = this.clone();\n\n    const {\n      f: { b01, b11, b21 },\n      determinant,\n    } = this.determinantFunction;\n\n    // If we don't have a determinant this function should fail silently and just return the unmodified array\n    if (determinant) {\n      const det = 1 / determinant;\n\n      this.a11 = b01 * det;\n      this.a12 = (-o.a33 * o.a12 + o.a13 * o.a32) * det;\n      this.a13 = (o.a23 * o.a12 - o.a13 * o.a22) * det;\n\n      this.a21 = b11 * det;\n      this.a22 = (o.a33 * o.a11 - o.a13 * o.a31) * det;\n      this.a23 = (-o.a23 * o.a11 + o.a13 * o.a21) * det;\n\n      this.a31 = b21 * det;\n      this.a32 = (-o.a32 * o.a11 + o.a12 * o.a31) * det;\n      this.a33 = (o.a22 * o.a11 - o.a12 * o.a21) * det;\n    }\n\n    return this;\n  }\n\n  invertNew(): Mat3 {\n    return this.clone().invert();\n  }\n\n  toString(): string {\n    return `\n      ${this.a11}, ${this.a12}, ${this.a13},\n      ${this.a21}, ${this.a22}, ${this.a23},\n      ${this.a31}, ${this.a32}, ${this.a33}\n    `;\n  }\n\n  /**\n   * Getters and setters\n   */\n\n  /**\n   * (getter/setter) The a11 value of the matrix.\n   *\n   * @type {number}\n   * @default 0\n   */\n  #a11: number = 0;\n  set a11(v) {\n    if (typeof v == \"number\") {\n      this.#a11 = v;\n    } else {\n      throw new TypeError(\"a11 should be a number\");\n    }\n  }\n  get a11() {\n    return this.#a11 || 0;\n  }\n\n  /**\n   * (getter/setter) The a12 value of the matrix.\n   *\n   * @type {number}\n   * @default 0\n   */\n  #a12: number = 0;\n  set a12(v) {\n    if (typeof v == \"number\") {\n      this.#a12 = v;\n    } else {\n      throw new TypeError(\"a12 should be a number\");\n    }\n  }\n  get a12() {\n    return this.#a12 || 0;\n  }\n\n  /**\n   * (getter/setter) The a13 value of the matrix.\n   *\n   * @type {number}\n   * @default 0\n   */\n  #a13: number = 0;\n  set a13(v) {\n    if (typeof v == \"number\") {\n      this.#a13 = v;\n    } else {\n      throw new TypeError(\"a13 should be a number\");\n    }\n  }\n  get a13() {\n    return this.#a13 || 0;\n  }\n\n  /**\n   * (getter/setter) The a21 value of the matrix.\n   *\n   * @type {number}\n   * @default 0\n   */\n  #a21: number = 0;\n  set a21(v) {\n    if (typeof v == \"number\") {\n      this.#a21 = v;\n    } else {\n      throw new TypeError(\"a21 should be a number\");\n    }\n  }\n  get a21() {\n    return this.#a21 || 0;\n  }\n\n  /**\n   * (getter/setter) The a22 value of the matrix.\n   *\n   * @type {number}\n   * @default 0\n   */\n  #a22: number = 0;\n  set a22(v) {\n    if (typeof v == \"number\") {\n      this.#a22 = v;\n    } else {\n      throw new TypeError(\"a22 should be a number\");\n    }\n  }\n  get a22() {\n    return this.#a22 || 0;\n  }\n\n  /**\n   * (getter/setter) The a23 value of the matrix.\n   *\n   * @type {number}\n   * @default 0\n   */\n  #a23: number = 0;\n  set a23(v) {\n    if (typeof v == \"number\") {\n      this.#a23 = v;\n    } else {\n      throw new TypeError(\"a23 should be a number\");\n    }\n  }\n  get a23() {\n    return this.#a23 || 0;\n  }\n\n  /**\n   * (getter/setter) The a31 value of the matrix.\n   *\n   * @type {number}\n   * @default 0\n   */\n  #a31: number = 0;\n  set a31(v) {\n    if (typeof v == \"number\") {\n      this.#a31 = v;\n    } else {\n      throw new TypeError(\"a31 should be a number\");\n    }\n  }\n  get a31() {\n    return this.#a31 || 0;\n  }\n\n  /**\n   * (getter/setter) The a32 value of the matrix.\n   *\n   * @type {number}\n   * @default 0\n   */\n  #a32: number = 0;\n  set a32(v) {\n    if (typeof v == \"number\") {\n      this.#a32 = v;\n    } else {\n      throw new TypeError(\"a32 should be a number\");\n    }\n  }\n  get a32() {\n    return this.#a32 || 0;\n  }\n\n  /**\n   * (getter/setter) The a33 value of the matrix.\n   *\n   * @type {number}\n   * @default 0\n   */\n  #a33: number = 0;\n  set a33(v) {\n    if (typeof v == \"number\") {\n      this.#a33 = v;\n    } else {\n      throw new TypeError(\"a33 should be a number\");\n    }\n  }\n  get a33() {\n    return this.#a33 || 0;\n  }\n\n  get frobeniusnorm(): number {\n    return Math.hypot(...this.array);\n  }\n\n  /**\n   * (getter) Returns the basic array representation of this matrix.\n   * @readonly\n   *\n   * @type {array}\n   */\n  get array(): number[] {\n    return [\n      this.a11,\n      this.a12,\n      this.a13,\n      this.a21,\n      this.a22,\n      this.a23,\n      this.a31,\n      this.a32,\n      this.a33,\n    ];\n  }\n\n  /**\n   * (getter) Returns the basic array representation of this matrix.\n   * this returns the array in column-major form.\n   * @readonly\n   *\n   * @type {array}\n   */\n  get columnArray(): number[] {\n    return [\n      this.a11,\n      this.a21,\n      this.a31,\n      this.a12,\n      this.a22,\n      this.a32,\n      this.a13,\n      this.a23,\n      this.a33,\n    ];\n  }\n\n  get determinantFunction(): Mat3DeterminantFunction {\n    let b01 = this.a33 * this.a22 - this.a23 * this.a32;\n    let b11 = -this.a33 * this.a21 + this.a23 * this.a31;\n    let b21 = this.a32 * this.a21 - this.a22 * this.a31;\n    // Calculate the determinant\n    return {\n      f: { b01, b11, b21 },\n      determinant: this.a11 * b01 + this.a12 * b11 + this.a13 * b21,\n    };\n  }\n\n  /**\n   * Calculates the determinant of the mat3\n   *\n   * @returns {Number} determinant of a\n   */\n  get determinant(): number {\n    return this.determinantFunction.determinant;\n  }\n\n  static fromAngle(r: number): Mat3 {\n    let s = Math.sin(r);\n    let c = Math.cos(r);\n\n    return new Mat3(c, -s, 0, s, c, 0, 0, 0, 0);\n  }\n\n  static fromScalingVec2(v: any): Mat3 {\n    if (v.array) v = v.array; // This just transforms a provided vector into to an array.\n\n    if (v instanceof Array) {\n      return new Mat3(v[0], 0, 0, 0, v[1], 0, 0, 0, 1);\n    }\n    return Mat3.identity();\n  }\n\n  static fromQuat(q: any): Mat3 {\n    if (q.array) q = q.array; // This just transforms a provided vector into to an array.\n\n    if (q instanceof Array && q.length >= 4) {\n      const [x, y, z, w] = q;\n      const [x2, y2, z2] = q.map((x) => x * 2);\n\n      const xx = x * x2,\n        yx = y * x2,\n        yy = y * y2,\n        zx = z * x2,\n        zy = z * y2,\n        zz = z * z2,\n        wx = w * x2,\n        wy = w * y2,\n        wz = w * z2;\n\n      return new Mat3(\n        1 - yy - zz,\n        yx - wz,\n        zx + wy,\n        yx + wz,\n        1 - xx - zz,\n        zy - wx,\n        zx - wy,\n        zy + wx,\n        1 - xx - yy\n      );\n    }\n  }\n\n  /**\n   * Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix\n   *\n   * @param {mat4} a Mat4 to derive the normal matrix from\n   *\n   * @returns {mat3}\n   */\n  static fromMat4(a: Mat4): Mat3 {\n    const {\n      f: { b00, b01, b02, b03, b04, b05, b06, b07, b08, b09, b10, b11 },\n      determinant,\n    } = a.determinantFunction;\n\n    if (!determinant) {\n      return null;\n    }\n    const det = 1.0 / determinant;\n\n    return new Mat3(\n      (a.a22 * b11 - a.a23 * b10 + a.a24 * b09) * det,\n      (a.a23 * b08 - a.a21 * b11 - a.a24 * b07) * det,\n      (a.a21 * b10 - a.a22 * b08 + a.a24 * b06) * det,\n      (a.a13 * b10 - a.a12 * b11 - a.a14 * b09) * det,\n      (a.a11 * b11 - a.a13 * b08 + a.a14 * b07) * det,\n      (a.a12 * b08 - a.a11 * b10 - a.a14 * b06) * det,\n      (a.a42 * b05 - a.a43 * b04 + a.a44 * b03) * det,\n      (a.a43 * b02 - a.a41 * b05 - a.a44 * b01) * det,\n      (a.a41 * b04 - a.a42 * b02 + a.a44 * b00) * det\n    );\n  }\n\n  /**\n   * Generates a 2D projection matrix with the given bounds\n   *\n   * @param {number} width Width of your gl context\n   * @param {number} height Height of gl context\n   * @returns {mat3} out\n   */\n  static fromProjection(width: number, height: number): Mat3 {\n    return new Mat3(2 / width, 0, 0, 0, -2 / height, 0, -1, 1, 1);\n  }\n\n  static identity(): Mat3 {\n    return new Mat3(...identity);\n  }\n}\n\nexport { Mat3 };\n","import { Mat3 } from \"./Mat3\";\nimport { Vec3 } from \"./Vec3\";\nimport { Vec4, V4Q } from \"./Vec4\";\n\nconst identity: number[] = [0, 0, 0, 1];\n\nconst identToIndex = function (v: string): number {\n  return [\"x\", \"y\", \"z\", \"w\"].indexOf(v);\n};\n\nconst orDefault = function (v: any, ident: string): number {\n  return isNaN(v) ? identity[identToIndex(ident)] : Number(v);\n};\n\nclass Quat extends Vec4 implements V4Q {\n  constructor(...args: number[]) {\n    super(...args);\n    this.reset(...args);\n  }\n\n  reset(...args: number[]): V4Q {\n    let [x, y, z, w] = args;\n    this.x = orDefault(x, \"x\");\n    this.y = orDefault(y, \"y\");\n    this.z = orDefault(z, \"z\");\n    this.w = orDefault(w, \"w\");\n\n    return this;\n  }\n\n  resetToQuat(q): Quat {\n    this.x = q.x;\n    this.y = q.y;\n    this.z = q.z;\n    this.w = q.w;\n\n    return this;\n  }\n\n  clone(): V4Q {\n    return new Quat(this.x, this.y, this.z, this.w);\n  }\n\n  toString() {\n    return `${this.x}, ${this.y}, ${this.z}, ${this.w}`;\n  }\n\n  multiply(q: V4Q): V4Q {\n    const a = this.clone();\n\n    this.x = a.x * q.w + a.w * q.x + a.y * q.z - a.z * q.y;\n    this.y = a.y * q.w + a.w * q.y + a.z * q.x - a.x * q.z;\n    this.z = a.z * q.w + a.w * q.z + a.x * q.y - a.y * q.x;\n    this.w = a.w * q.w - a.x * q.x - a.y * q.y - a.z * q.z;\n\n    return this;\n  }\n\n  multiplyNew(q: V4Q): V4Q {\n    return this.clone().multiply(q);\n  }\n\n  rotateX(origin: V4Q, rad: number): V4Q {\n    rad *= 0.5;\n\n    const a = this.clone();\n    const s = Math.sin(rad),\n      c = Math.cos(rad);\n\n    this.x = a.x * c + a.w * s;\n    this.y = a.y * c + a.z * s;\n    this.z = a.z * c - a.y * s;\n    this.w = a.w * c - a.x * s;\n\n    return this;\n  }\n\n  rotateY(origin: V4Q, rad: number): V4Q {\n    rad *= 0.5;\n\n    const a = this.clone();\n    const s = Math.sin(rad),\n      c = Math.cos(rad);\n\n    this.x = a.x * c - a.z * s;\n    this.y = a.y * c + a.w * s;\n    this.z = a.z * c + a.x * s;\n    this.w = a.w * c - a.y * s;\n\n    return this;\n  }\n\n  rotateZ(origin: V4Q, rad: number): V4Q {\n    rad *= 0.5;\n\n    const a = this.clone();\n    const s = Math.sin(rad),\n      c = Math.cos(rad);\n\n    this.x = a.x * c + a.y * s;\n    this.y = a.y * c - a.x * s;\n    this.z = a.z * c + a.w * s;\n    this.w = a.w * c - a.z * s;\n\n    return this;\n  }\n\n  /**\n   * Getters and setters\n   */\n\n  // Gets the calculated W component of this quaternion.\n  get normalW(): number {\n    return Math.sqrt(\n      Math.abs(1.0 - this.x * this.x - this.y * this.y - this.z * this.z)\n    );\n  }\n\n  /**\n   * Static methods\n   */\n\n  /**\n   * Creates a quaternion from a given axis and rotation\n   *\n   * @static\n   * @param {Vec3|Array} axis the axis around which to rotate\n   * @param {Number} rad the angle in radians\n   * @returns {Quat}\n   **/\n  static fromAxisAngle(axis: Vec3, rad: number): Quat {\n    axis = Vec3.interpolate(axis);\n    rad *= 0.5;\n    const s = Math.sin(rad);\n    return new Quat(s * axis.x, s * axis.y, s * axis.z, Math.cos(rad));\n  }\n\n  static fromEuler(euler: any, order: string = \"YXZ\"): Quat | void {\n    if (euler.array) euler = euler.array; // This just transforms the matrix to an array.\n    if (euler instanceof Array && euler.length >= 3) {\n      const out = new Quat();\n\n      let sx = Math.sin(euler[0] * 0.5);\n      let cx = Math.cos(euler[0] * 0.5);\n      let sy = Math.sin(euler[1] * 0.5);\n      let cy = Math.cos(euler[1] * 0.5);\n      let sz = Math.sin(euler[2] * 0.5);\n      let cz = Math.cos(euler[2] * 0.5);\n\n      if (order === \"XYZ\") {\n        out.x = sx * cy * cz + cx * sy * sz;\n        out.y = cx * sy * cz - sx * cy * sz;\n        out.z = cx * cy * sz + sx * sy * cz;\n        out.w = cx * cy * cz - sx * sy * sz;\n      } else if (order === \"YXZ\") {\n        out.x = sx * cy * cz + cx * sy * sz;\n        out.y = cx * sy * cz - sx * cy * sz;\n        out.z = cx * cy * sz - sx * sy * cz;\n        out.w = cx * cy * cz + sx * sy * sz;\n      } else if (order === \"ZXY\") {\n        out.x = sx * cy * cz - cx * sy * sz;\n        out.y = cx * sy * cz + sx * cy * sz;\n        out.z = cx * cy * sz + sx * sy * cz;\n        out.w = cx * cy * cz - sx * sy * sz;\n      } else if (order === \"ZYX\") {\n        out.x = sx * cy * cz - cx * sy * sz;\n        out.y = cx * sy * cz + sx * cy * sz;\n        out.z = cx * cy * sz - sx * sy * cz;\n        out.w = cx * cy * cz + sx * sy * sz;\n      } else if (order === \"YZX\") {\n        out.x = sx * cy * cz + cx * sy * sz;\n        out.y = cx * sy * cz + sx * cy * sz;\n        out.z = cx * cy * sz - sx * sy * cz;\n        out.w = cx * cy * cz - sx * sy * sz;\n      } else if (order === \"XZY\") {\n        out.x = sx * cy * cz - cx * sy * sz;\n        out.y = cx * sy * cz - sx * cy * sz;\n        out.z = cx * cy * sz + sx * sy * cz;\n        out.w = cx * cy * cz + sx * sy * sz;\n      }\n\n      return out;\n    }\n  }\n}\n\nexport { Quat };\n","import { Vec3 } from \"./Vec3\";\nimport { Quat } from \"./Quat\";\n\ntype Mat4DeterminantFunction = {\n  f: {\n    b00: number;\n    b01: number;\n    b02: number;\n    b03: number;\n    b04: number;\n    b05: number;\n    b06: number;\n    b07: number;\n    b08: number;\n    b09: number;\n    b10: number;\n    b11: number;\n  };\n  determinant: number;\n};\n\nconst EPSILON: number = 0.0001;\n\nconst identity = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n\nconst identToIndex = function (v: string): number {\n  return [\n    \"a11\",\n    \"a12\",\n    \"a13\",\n    \"a14\",\n    \"a21\",\n    \"a22\",\n    \"a23\",\n    \"a24\",\n    \"a31\",\n    \"a32\",\n    \"a33\",\n    \"a34\",\n    \"a41\",\n    \"a42\",\n    \"a43\",\n    \"a44\",\n  ].indexOf(v);\n};\n\nconst orDefault = function (v: any, ident: string): number {\n  return isNaN(v) ? identity[identToIndex(ident)] : Number(v);\n};\n\nclass Mat4 {\n  constructor(...args: number[]) {\n    this.reset(...args);\n  }\n\n  reset(...args: number[]): Mat4 {\n    const [\n      a11,\n      a12,\n      a13,\n      a14,\n      a21,\n      a22,\n      a23,\n      a24,\n      a31,\n      a32,\n      a33,\n      a34,\n      a41,\n      a42,\n      a43,\n      a44,\n    ] = args;\n    this.a11 = orDefault(a11, \"a11\");\n    this.a12 = orDefault(a12, \"a12\");\n    this.a13 = orDefault(a13, \"a13\");\n    this.a14 = orDefault(a14, \"a14\");\n\n    this.a21 = orDefault(a21, \"a21\");\n    this.a22 = orDefault(a22, \"a22\");\n    this.a23 = orDefault(a23, \"a23\");\n    this.a24 = orDefault(a24, \"a24\");\n\n    this.a31 = orDefault(a31, \"a31\");\n    this.a32 = orDefault(a32, \"a32\");\n    this.a33 = orDefault(a33, \"a33\");\n    this.a34 = orDefault(a34, \"a34\");\n\n    this.a41 = orDefault(a41, \"a41\");\n    this.a42 = orDefault(a42, \"a42\");\n    this.a43 = orDefault(a43, \"a43\");\n    this.a44 = orDefault(a44, \"a44\");\n    return this;\n  }\n\n  resetToMat4(m: Mat4): Mat4 {\n    this.a11 = m.a11;\n    this.a12 = m.a12;\n    this.a13 = m.a13;\n    this.a14 = m.a14;\n\n    this.a21 = m.a21;\n    this.a22 = m.a22;\n    this.a23 = m.a23;\n    this.a24 = m.a24;\n\n    this.a31 = m.a31;\n    this.a32 = m.a32;\n    this.a33 = m.a33;\n    this.a34 = m.a34;\n\n    this.a41 = m.a41;\n    this.a42 = m.a42;\n    this.a43 = m.a43;\n    this.a44 = m.a44;\n\n    return this;\n  }\n\n  clone(): Mat4 {\n    return new Mat4(\n      this.a11,\n      this.a12,\n      this.a13,\n      this.a14,\n      this.a21,\n      this.a22,\n      this.a23,\n      this.a24,\n      this.a31,\n      this.a32,\n      this.a33,\n      this.a34,\n      this.a41,\n      this.a42,\n      this.a43,\n      this.a44\n    );\n  }\n\n  transpose(): Mat4 {\n    const a12 = this.a12,\n      a13 = this.a13,\n      a14 = this.a14,\n      a23 = this.a23,\n      a24 = this.a24,\n      a34 = this.a34;\n\n    this.a12 = this.a21;\n    this.a13 = this.a31;\n    this.a14 = this.a41;\n\n    this.a21 = a12;\n    this.a23 = this.a32;\n    this.a24 = this.a42;\n\n    this.a31 = a13;\n    this.a32 = a23;\n    this.a34 = this.a43;\n\n    this.a41 = a14;\n    this.a42 = a24;\n    this.a43 = a34;\n\n    return this;\n  }\n\n  transposeNew(): Mat4 {\n    return this.clone().transpose();\n  }\n\n  add(m: Mat4): Mat4 {\n    this.a11 += m.a11;\n    this.a12 += m.a12;\n    this.a13 += m.a13;\n    this.a14 += m.a14;\n\n    this.a21 += m.a21;\n    this.a22 += m.a22;\n    this.a23 += m.a23;\n    this.a24 += m.a24;\n\n    this.a31 += m.a31;\n    this.a32 += m.a32;\n    this.a33 += m.a33;\n    this.a34 += m.a34;\n\n    this.a41 += m.a41;\n    this.a42 += m.a42;\n    this.a43 += m.a43;\n    this.a44 += m.a44;\n    return this;\n  }\n\n  addNew(m: Mat4): Mat4 {\n    return this.clone().add(m);\n  }\n\n  // @TODO: We might want to generalise this and allow any sort of matrix on these operations\n\n  subtract(m: Mat4): Mat4 {\n    this.a11 -= m.a11;\n    this.a12 -= m.a12;\n    this.a13 -= m.a13;\n    this.a14 -= m.a14;\n\n    this.a21 -= m.a21;\n    this.a22 -= m.a22;\n    this.a23 -= m.a23;\n    this.a24 -= m.a24;\n\n    this.a31 -= m.a31;\n    this.a32 -= m.a32;\n    this.a33 -= m.a33;\n    this.a34 -= m.a34;\n\n    this.a41 -= m.a41;\n    this.a42 -= m.a42;\n    this.a43 -= m.a43;\n    this.a44 -= m.a44;\n    return this;\n  }\n\n  subtractNew(m: Mat4): Mat4 {\n    return this.clone().subtract(m);\n  }\n\n  multiply(m: Mat4): Mat4 {\n    const o = this.clone();\n\n    this.a11 = m.a11 * o.a11 + m.a12 * o.a21 + m.a13 * o.a31 + m.a14 * o.a41;\n    this.a12 = m.a11 * o.a12 + m.a12 * o.a22 + m.a13 * o.a32 + m.a14 * o.a42;\n    this.a13 = m.a11 * o.a13 + m.a12 * o.a23 + m.a13 * o.a33 + m.a14 * o.a43;\n    this.a14 = m.a11 * o.a14 + m.a12 * o.a24 + m.a13 * o.a34 + m.a14 * o.a44;\n\n    this.a21 = m.a21 * o.a11 + m.a22 * o.a21 + m.a23 * o.a31 + m.a24 * o.a41;\n    this.a22 = m.a21 * o.a12 + m.a22 * o.a22 + m.a23 * o.a32 + m.a24 * o.a42;\n    this.a23 = m.a21 * o.a13 + m.a22 * o.a23 + m.a23 * o.a33 + m.a24 * o.a43;\n    this.a24 = m.a21 * o.a14 + m.a22 * o.a24 + m.a23 * o.a34 + m.a24 * o.a44;\n\n    this.a31 = m.a31 * o.a11 + m.a32 * o.a21 + m.a33 * o.a31 + m.a34 * o.a41;\n    this.a32 = m.a31 * o.a12 + m.a32 * o.a22 + m.a33 * o.a32 + m.a34 * o.a42;\n    this.a33 = m.a31 * o.a13 + m.a32 * o.a23 + m.a33 * o.a33 + m.a34 * o.a43;\n    this.a34 = m.a31 * o.a14 + m.a32 * o.a24 + m.a33 * o.a34 + m.a34 * o.a44;\n\n    this.a41 = m.a41 * o.a11 + m.a42 * o.a21 + m.a43 * o.a31 + m.a44 * o.a41;\n    this.a42 = m.a41 * o.a12 + m.a42 * o.a22 + m.a43 * o.a32 + m.a44 * o.a42;\n    this.a43 = m.a41 * o.a13 + m.a42 * o.a23 + m.a43 * o.a33 + m.a44 * o.a43;\n    this.a44 = m.a41 * o.a14 + m.a42 * o.a24 + m.a43 * o.a34 + m.a44 * o.a44;\n    return this;\n  }\n\n  multiplyNew(m: Mat4): Mat4 {\n    return this.clone().multiply(m);\n  }\n\n  multiplyScalar(s: number): Mat4 {\n    this.a11 *= s;\n    this.a12 *= s;\n    this.a13 *= s;\n    this.a14 *= s;\n\n    this.a21 *= s;\n    this.a22 *= s;\n    this.a23 *= s;\n    this.a24 *= s;\n\n    this.a31 *= s;\n    this.a32 *= s;\n    this.a33 *= s;\n    this.a34 *= s;\n\n    this.a41 *= s;\n    this.a42 *= s;\n    this.a43 *= s;\n    this.a44 *= s;\n\n    return this;\n  }\n\n  multiplyScalarNew(s: number): Mat4 {\n    return this.clone().multiplyScalar(s);\n  }\n\n  scale(s: number): Mat4 {\n    return this.multiplyScalar(s);\n  }\n\n  scaleNew(s: number): Mat4 {\n    return this.multiplyScalarNew(s);\n  }\n\n  scaleByVec3(v: any): Mat4 {\n    if (v.array) v = v.array;\n    v = v.concat([1, 1, 1]);\n    const [x, y, z] = v;\n\n    this.a11 *= x;\n    this.a12 *= x;\n    this.a13 *= x;\n    this.a14 *= x;\n\n    this.a21 *= y;\n    this.a22 *= y;\n    this.a23 *= y;\n    this.a24 *= y;\n\n    this.a31 *= z;\n    this.a32 *= z;\n    this.a33 *= z;\n    this.a34 *= z;\n\n    return this;\n  }\n\n  scaleByVec3New(v: any): Mat4 {\n    return this.clone().scaleByVec3(v);\n  }\n\n  /**\n   * Transforms the mat4 by a given amount\n   *\n   * @param {Vec3} v The amount to add to the matrixes transformation properties\n   * @returns {mat4} output\n   */\n  transform(v: any): Mat4 {\n    if (v.array) v = v.array;\n    v = v.concat([0, 0, 0]);\n    const [x, y, z] = v;\n\n    this.a14 += x;\n    this.a24 += y;\n    this.a34 += z;\n\n    return this;\n  }\n\n  transformNew(v: any): Mat4 {\n    return this.clone().transform(v);\n  }\n\n  /**\n   * Transforms the mat4 to a given position\n   *\n   * @param {Vec3} v The amount to add to the matrixes transformation properties\n   * @returns {mat4} output\n   */\n  transformTo(v: any): Mat4 {\n    if (v.array) v = v.array;\n    v = v.concat([0, 0, 0]);\n    const [x, y, z] = v;\n\n    this.a14 = x;\n    this.a24 = y;\n    this.a34 = z;\n\n    return this;\n  }\n\n  transformToNew(v: any): Mat4 {\n    return this.clone().transform(v);\n  }\n\n  /**\n   * Rotates a mat4 by the given angle around the given axis\n   *\n   * @param {Number} r the angle to rotate the matrix by\n   * @param {vec3} axis the axis to rotate around\n   * @returns {mat4} output\n   */\n  rotate(r: number, axis: any): Mat4 {\n    if (axis.array) axis = axis.array;\n    if (!axis.length || axis.length < 3) return this;\n    let l = Math.hypot(axis[0], axis[1], axis[2]);\n    if (l < EPSILON) return this;\n\n    l = 1 / l;\n    const x = axis[0] / l,\n      y = axis[1] / l,\n      z = axis[2] / l,\n      s = Math.sin(r),\n      c = Math.cos(r),\n      t = 1 - c,\n      o = this.clone(),\n      b = new Mat4();\n\n    // Construct the rotation matrix 3x3 matrix, but we can use a mat4 to store (w/e)\n    b.a11 = x * x * t + c;\n    b.a12 = y * x * t + z * s;\n    b.a13 = z * x * t - y * s;\n\n    b.a21 = x * y * t - z * s;\n    b.a22 = y * y * t + c;\n    b.a23 = z * y * t + x * s;\n\n    b.a31 = x * z * t + y * s;\n    b.a32 = y * z * t - x * s;\n    b.a33 = z * z * t + c;\n\n    // Perform rotation-specific matrix multiplication\n    this.a11 = o.a11 * b.a11 + o.a21 * b.a12 + o.a31 * b.a13;\n    this.a12 = o.a12 * b.a11 + o.a22 * b.a12 + o.a32 * b.a13;\n    this.a13 = o.a13 * b.a11 + o.a23 * b.a12 + o.a33 * b.a13;\n    this.a14 = o.a14 * b.a11 + o.a24 * b.a12 + o.a34 * b.a13;\n\n    this.a21 = o.a11 * b.a21 + o.a21 * b.a22 + o.a31 * b.a23;\n    this.a22 = o.a12 * b.a21 + o.a22 * b.a22 + o.a32 * b.a23;\n    this.a23 = o.a13 * b.a21 + o.a23 * b.a22 + o.a33 * b.a23;\n    this.a24 = o.a14 * b.a21 + o.a24 * b.a22 + o.a34 * b.a23;\n\n    this.a31 = o.a11 * b.a31 + o.a21 * b.a32 + o.a31 * b.a33;\n    this.a32 = o.a12 * b.a31 + o.a22 * b.a32 + o.a32 * b.a33;\n    this.a33 = o.a13 * b.a31 + o.a23 * b.a32 + o.a33 * b.a33;\n    this.a34 = o.a14 * b.a31 + o.a24 * b.a32 + o.a34 * b.a33;\n\n    return this;\n  }\n\n  rotateNew(r: number, axis: any): Mat4 {\n    return this.clone().rotate(r, axis);\n  }\n\n  invert(): Mat4 {\n    const c = this.clone();\n\n    const {\n      f: { b00, b01, b02, b03, b04, b05, b06, b07, b08, b09, b10, b11 },\n      determinant,\n    } = this.determinantFunction;\n\n    // If we don't have a determinant this function should fail silently and just return the unmodified array\n    if (determinant) {\n      const det = 1.0 / determinant;\n\n      this.a11 = (c.a22 * b11 - c.a23 * b10 + c.a24 * b09) * det;\n      this.a12 = (c.a13 * b10 - c.a12 * b11 - c.a14 * b09) * det;\n      this.a13 = (c.a42 * b05 - c.a43 * b04 + c.a44 * b03) * det;\n      this.a14 = (c.a33 * b04 - c.a32 * b05 - c.a34 * b03) * det;\n      this.a21 = (c.a23 * b08 - c.a21 * b11 - c.a24 * b07) * det;\n      this.a22 = (c.a11 * b11 - c.a13 * b08 + c.a14 * b07) * det;\n      this.a23 = (c.a43 * b02 - c.a41 * b05 - c.a44 * b01) * det;\n      this.a24 = (c.a31 * b05 - c.a33 * b02 + c.a34 * b01) * det;\n      this.a31 = (c.a21 * b10 - c.a22 * b08 + c.a24 * b06) * det;\n      this.a32 = (c.a12 * b08 - c.a11 * b10 - c.a14 * b06) * det;\n      this.a33 = (c.a41 * b04 - c.a42 * b02 + c.a44 * b00) * det;\n      this.a34 = (c.a32 * b02 - c.a31 * b04 - c.a34 * b00) * det;\n      this.a41 = (c.a22 * b07 - c.a21 * b09 - c.a23 * b06) * det;\n      this.a42 = (c.a11 * b09 - c.a12 * b07 + c.a13 * b06) * det;\n      this.a43 = (c.a42 * b01 - c.a41 * b03 - c.a43 * b00) * det;\n      this.a44 = (c.a31 * b03 - c.a32 * b01 + c.a33 * b00) * det;\n    }\n\n    return this;\n  }\n\n  invertNew(): Mat4 {\n    return this.clone().invert();\n  }\n\n  toString(): string {\n    return `\n      ${this.a11}, ${this.a12}, ${this.a13}, ${this.a14},\n      ${this.a21}, ${this.a22}, ${this.a23}, ${this.a24},\n      ${this.a31}, ${this.a32}, ${this.a33}, ${this.a34},\n      ${this.a41}, ${this.a42}, ${this.a43}, ${this.a44}\n    `;\n  }\n\n  /**\n   * Getters and setters\n   */\n\n  /**\n   * (getter/setter) The a11 value of the matrix.\n   *\n   * @type {number}\n   * @default 0\n   */\n  #a11: number = 0;\n  set a11(v) {\n    if (typeof v == \"number\") {\n      this.#a11 = v;\n    } else {\n      throw new TypeError(\"a11 should be a number\");\n    }\n  }\n  get a11() {\n    return this.#a11 || 0;\n  }\n\n  /**\n   * (getter/setter) The a12 value of the matrix.\n   *\n   * @type {number}\n   * @default 0\n   */\n  #a12: number = 0;\n  set a12(v) {\n    if (typeof v == \"number\") {\n      this.#a12 = v;\n    } else {\n      throw new TypeError(\"a12 should be a number\");\n    }\n  }\n  get a12() {\n    return this.#a12 || 0;\n  }\n\n  /**\n   * (getter/setter) The a13 value of the matrix.\n   *\n   * @type {number}\n   * @default 0\n   */\n  #a13: number = 0;\n  set a13(v) {\n    if (typeof v == \"number\") {\n      this.#a13 = v;\n    } else {\n      throw new TypeError(\"a13 should be a number\");\n    }\n  }\n  get a13() {\n    return this.#a13 || 0;\n  }\n\n  /**\n   * (getter/setter) The a14 value of the matrix.\n   *\n   * @type {number}\n   * @default 0\n   */\n  #a14: number = 0;\n  set a14(v) {\n    if (typeof v == \"number\") {\n      this.#a14 = v;\n    } else {\n      throw new TypeError(\"a14 should be a number\");\n    }\n  }\n  get a14() {\n    return this.#a14 || 0;\n  }\n\n  /**\n   * (getter/setter) The a21 value of the matrix.\n   *\n   * @type {number}\n   * @default 0\n   */\n  #a21: number = 0;\n  set a21(v) {\n    if (typeof v == \"number\") {\n      this.#a21 = v;\n    } else {\n      throw new TypeError(\"a21 should be a number\");\n    }\n  }\n  get a21() {\n    return this.#a21 || 0;\n  }\n\n  /**\n   * (getter/setter) The a22 value of the matrix.\n   *\n   * @type {number}\n   * @default 0\n   */\n  #a22: number = 0;\n  set a22(v) {\n    if (typeof v == \"number\") {\n      this.#a22 = v;\n    } else {\n      throw new TypeError(\"a22 should be a number\");\n    }\n  }\n  get a22() {\n    return this.#a22 || 0;\n  }\n\n  /**\n   * (getter/setter) The a23 value of the matrix.\n   *\n   * @type {number}\n   * @default 0\n   */\n  #a23: number = 0;\n  set a23(v) {\n    if (typeof v == \"number\") {\n      this.#a23 = v;\n    } else {\n      throw new TypeError(\"a23 should be a number\");\n    }\n  }\n  get a23() {\n    return this.#a23 || 0;\n  }\n\n  /**\n   * (getter/setter) The a24 value of the matrix.\n   *\n   * @type {number}\n   * @default 0\n   */\n  #a24: number = 0;\n  set a24(v) {\n    if (typeof v == \"number\") {\n      this.#a24 = v;\n    } else {\n      throw new TypeError(\"a24 should be a number\");\n    }\n  }\n  get a24() {\n    return this.#a24 || 0;\n  }\n\n  /**\n   * (getter/setter) The a31 value of the matrix.\n   *\n   * @type {number}\n   * @default 0\n   */\n  #a31: number = 0;\n  set a31(v) {\n    if (typeof v == \"number\") {\n      this.#a31 = v;\n    } else {\n      throw new TypeError(\"a31 should be a number\");\n    }\n  }\n  get a31() {\n    return this.#a31 || 0;\n  }\n\n  /**\n   * (getter/setter) The a32 value of the matrix.\n   *\n   * @type {number}\n   * @default 0\n   */\n  #a32: number = 0;\n  set a32(v) {\n    if (typeof v == \"number\") {\n      this.#a32 = v;\n    } else {\n      throw new TypeError(\"a32 should be a number\");\n    }\n  }\n  get a32() {\n    return this.#a32 || 0;\n  }\n\n  /**\n   * (getter/setter) The a33 value of the matrix.\n   *\n   * @type {number}\n   * @default 0\n   */\n  #a33: number = 0;\n  set a33(v) {\n    if (typeof v == \"number\") {\n      this.#a33 = v;\n    } else {\n      throw new TypeError(\"a33 should be a number\");\n    }\n  }\n  get a33() {\n    return this.#a33 || 0;\n  }\n\n  /**\n   * (getter/setter) The a34 value of the matrix.\n   *\n   * @type {number}\n   * @default 0\n   */\n  #a34: number = 0;\n  set a34(v) {\n    if (typeof v == \"number\") {\n      this.#a34 = v;\n    } else {\n      throw new TypeError(\"a34 should be a number\");\n    }\n  }\n  get a34() {\n    return this.#a34 || 0;\n  }\n\n  /**\n   * (getter/setter) The a41 value of the matrix.\n   *\n   * @type {number}\n   * @default 0\n   */\n  #a41: number = 0;\n  set a41(v) {\n    if (typeof v == \"number\") {\n      this.#a41 = v;\n    } else {\n      throw new TypeError(\"a41 should be a number\");\n    }\n  }\n  get a41() {\n    return this.#a41 || 0;\n  }\n\n  /**\n   * (getter/setter) The a42 value of the matrix.\n   *\n   * @type {number}\n   * @default 0\n   */\n  #a42: number = 0;\n  set a42(v) {\n    if (typeof v == \"number\") {\n      this.#a42 = v;\n    } else {\n      throw new TypeError(\"a42 should be a number\");\n    }\n  }\n  get a42() {\n    return this.#a42 || 0;\n  }\n\n  /**\n   * (getter/setter) The a43 value of the matrix.\n   *\n   * @type {number}\n   * @default 0\n   */\n  #a43: number = 0;\n  set a43(v) {\n    if (typeof v == \"number\") {\n      this.#a43 = v;\n    } else {\n      throw new TypeError(\"a43 should be a number\");\n    }\n  }\n  get a43() {\n    return this.#a43 || 0;\n  }\n\n  /**\n   * (getter/setter) The a44 value of the matrix.\n   *\n   * @type {number}\n   * @default 0\n   */\n  #a44: number = 0;\n  set a44(v) {\n    if (typeof v == \"number\") {\n      this.#a44 = v;\n    } else {\n      throw new TypeError(\"a44 should be a number\");\n    }\n  }\n  get a44() {\n    return this.#a44 || 0;\n  }\n\n  get frobeniusnorm(): number {\n    return Math.hypot(...this.array);\n  }\n\n  get translation(): Vec3 {\n    return new Vec3(this.a41, this.a42, this.a43);\n  }\n\n  get scaling(): Vec3 {\n    return new Vec3(\n      Math.hypot(this.a11, this.a12, this.a13),\n      Math.hypot(this.a21, this.a22, this.a23),\n      Math.hypot(this.a31, this.a32, this.a33)\n    );\n  }\n\n  get rotation(): Quat {\n    const scale = this.scaling.inverse();\n\n    let sm11 = this.a11 * scale.x;\n    let sm12 = this.a12 * scale.y;\n    let sm13 = this.a13 * scale.z;\n\n    let sm21 = this.a21 * scale.x;\n    let sm22 = this.a22 * scale.y;\n    let sm23 = this.a23 * scale.z;\n\n    let sm31 = this.a31 * scale.x;\n    let sm32 = this.a32 * scale.y;\n    let sm33 = this.a33 * scale.z;\n\n    const trace = sm11 + sm22 + sm33;\n    let S = 0;\n\n    if (trace > 0) {\n      S = Math.sqrt(trace + 1.0) * 2;\n      return new Quat(\n        (sm23 - sm32) / S,\n        (sm31 - sm13) / S,\n        (sm12 - sm21) / S,\n        0.25 * S\n      );\n    } else if (sm11 > sm22 && sm11 > sm33) {\n      S = Math.sqrt(1.0 + sm11 - sm22 - sm33) * 2;\n      return new Quat(\n        0.25 * S,\n        (sm12 + sm21) / S,\n        (sm31 + sm13) / S,\n        (sm23 - sm32) / S\n      );\n    } else if (sm22 > sm33) {\n      S = Math.sqrt(1.0 + sm22 - sm11 - sm33) * 2;\n      return new Quat(\n        (sm12 + sm21) / S,\n        0.25 * S,\n        (sm23 + sm32) / S,\n        (sm31 - sm13) / S\n      );\n    } else {\n      S = Math.sqrt(1.0 + sm33 - sm11 - sm22) * 2;\n      return new Quat(\n        (sm31 + sm13) / S,\n        (sm23 + sm32) / S,\n        0.25 * S,\n        (sm12 - sm21) / S\n      );\n    }\n  }\n\n  /**\n   * Calculates the determinant function the mat4\n   *\n   * @returns {Number} determinant of a\n   */\n  get determinantFunction(): Mat4DeterminantFunction {\n    let b00 = this.a11 * this.a22 - this.a12 * this.a21;\n    let b01 = this.a11 * this.a23 - this.a13 * this.a21;\n    let b02 = this.a11 * this.a24 - this.a14 * this.a21;\n    let b03 = this.a12 * this.a23 - this.a13 * this.a22;\n    let b04 = this.a12 * this.a24 - this.a14 * this.a22;\n    let b05 = this.a13 * this.a24 - this.a14 * this.a23;\n    let b06 = this.a31 * this.a42 - this.a32 * this.a41;\n    let b07 = this.a31 * this.a43 - this.a33 * this.a41;\n    let b08 = this.a31 * this.a44 - this.a34 * this.a41;\n    let b09 = this.a32 * this.a43 - this.a33 * this.a42;\n    let b10 = this.a32 * this.a44 - this.a34 * this.a42;\n    let b11 = this.a33 * this.a44 - this.a34 * this.a43;\n    // Calculate the determinant\n    return {\n      f: { b00, b01, b02, b03, b04, b05, b06, b07, b08, b09, b10, b11 },\n      determinant:\n        b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06,\n    };\n  }\n\n  /**\n   * Calculates the determinant of the mat4\n   *\n   * @returns {Number} determinant of a\n   */\n  get determinant(): number {\n    return this.determinantFunction.determinant;\n  }\n\n  /**\n   * (getter) Returns the basic array representation of this matrix.\n   * @readonly\n   *\n   * @type {array}\n   */\n  get array(): number[] {\n    return [\n      this.a11,\n      this.a12,\n      this.a13,\n      this.a14,\n      this.a21,\n      this.a22,\n      this.a23,\n      this.a24,\n      this.a31,\n      this.a32,\n      this.a33,\n      this.a34,\n      this.a41,\n      this.a42,\n      this.a43,\n      this.a44,\n    ];\n  }\n\n  static fromRotation(r, axis) {\n    return new Mat4().rotate(r, axis);\n  }\n\n  static fromXRotation(r) {\n    const s = Math.sin(r),\n      c = Math.cos(r);\n\n    return new Mat4(1, 0, 0, 0, 0, c, s, 0, 0, -s, c, 0, 0, 0, 0, 1);\n  }\n\n  static fromYRotation(r) {\n    const s = Math.sin(r),\n      c = Math.cos(r);\n\n    return new Mat4(c, 0, -s, 0, 0, 1, 0, 0, s, 0, c, 0, 0, 0, 0, 1);\n  }\n\n  static fromZRotation(r) {\n    const s = Math.sin(r),\n      c = Math.cos(r);\n\n    return new Mat4(c, s, 0, 0, -s, c, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n  }\n\n  static fromScalingVec3(v) {\n    if (v.array) v = v.array; // This just transforms a provided vector into to an array.\n\n    if (v instanceof Array) {\n      return new Mat4(v[0], 0, 0, 0, 0, v[1], 0, 0, 0, 0, v[2], 0, 0, 0, 0, 1);\n    }\n  }\n\n  static fromTranslatingVec3(v) {\n    if (v.array) v = v.array; // This just transforms a provided vector into to an array.\n\n    if (v instanceof Array) {\n      return new Mat4(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, v[0], v[1], v[2], 1);\n    }\n  }\n\n  /**\n   * Calculates a 4x4 matrix from the given quaternion\n   *\n   * @param {quat} q Quaternion to create matrix from\n   *\n   * @returns {mat4} out\n   */\n  static fromQuat(q) {\n    if (q.array) q = q.array; // This just transforms a provided vector into to an array.\n\n    if (q instanceof Array && q.length >= 4) {\n      const [x, y, z, w] = q;\n      const [x2, y2, z2] = q.map((x) => x * 2);\n\n      const xx = x * x2,\n        yx = y * x2,\n        yy = y * y2,\n        zx = z * x2,\n        zy = z * y2,\n        zz = z * z2,\n        wx = w * x2,\n        wy = w * y2,\n        wz = w * z2;\n\n      return new Mat4(\n        1 - yy - zz,\n        yx + wz,\n        zx - wy,\n        0,\n        yx - wz,\n        1 - xx - zz,\n        zy + wx,\n        0,\n        zx + wy,\n        zy - wx,\n        1 - xx - yy,\n        0,\n        0,\n        0,\n        0,\n        1\n      );\n    }\n  }\n\n  /**\n   * Creates a matrix from a quaternion rotation, vector translation and vector scale\n   * This is equivalent to (but much faster than):\n   *\n   *     mat4.identity(dest);\n   *     mat4.translate(dest, vec);\n   *     let quatMat = mat4.create();\n   *     quat4.toMat4(quat, quatMat);\n   *     mat4.multiply(dest, quatMat);\n   *     mat4.scale(dest, scale)\n   *\n   * @param {quat4} q Rotation quaternion\n   * @param {vec3} v Translation vector\n   * @param {vec3} s Scaling vector\n   * @returns {mat4} out\n   */\n  static fromRotationTranslationScale(q, v, s) {\n    if (q.array) q = q.array;\n    if (v.array) v = v.array;\n    if (s.array) s = s.array;\n\n    if (\n      q.length &&\n      q.length >= 4 &&\n      v.length &&\n      v.length >= 3 &&\n      s.length &&\n      s.length >= 3\n    ) {\n      const x2 = q[0] + q[0],\n        y2 = q[1] + q[1],\n        z2 = q[2] + q[2];\n\n      const xx = q[0] * x2,\n        xy = q[0] * y2,\n        xz = q[0] * z2,\n        yy = q[1] * y2,\n        yz = q[1] * z2,\n        zz = q[2] * z2,\n        wx = q[3] * x2,\n        wy = q[3] * y2,\n        wz = q[3] * z2,\n        sx = s[0],\n        sy = s[1],\n        sz = s[2];\n\n      return new Mat4(\n        (1 - (yy + zz)) * sx,\n        (xy + wz) * sx,\n        (xz - wy) * sx,\n        0,\n        (xy - wz) * sy,\n        (1 - (xx + zz)) * sy,\n        (yz + wx) * sy,\n        0,\n        (xz + wy) * sz,\n        (yz - wx) * sz,\n        (1 - (xx + yy)) * sz,\n        0,\n        v[0],\n        v[1],\n        v[2],\n        1\n      );\n    }\n  }\n\n  /**\n   * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin\n   * This is equivalent to (but much faster than):\n   *\n   *     mat4.identity(dest);\n   *     mat4.translate(dest, vec);\n   *     mat4.translate(dest, origin);\n   *     let quatMat = mat4.create();\n   *     quat4.toMat4(quat, quatMat);\n   *     mat4.multiply(dest, quatMat);\n   *     mat4.scale(dest, scale)\n   *     mat4.translate(dest, negativeOrigin);\n   *\n   * @param {quat4} q Rotation quaternion\n   * @param {vec3} v Translation vector\n   * @param {vec3} s Scaling vector\n   * @param {vec3} o The origin vector around which to scale and rotate\n   * @returns {mat4} out\n   */\n  static fromRotationTranslationScaleOrigin(q, v, s, o) {\n    if (q.array) q = q.array;\n    if (v.array) v = v.array;\n    if (s.array) s = s.array;\n    if (o.array) o = o.array;\n\n    if (\n      q.length &&\n      q.length >= 4 &&\n      v.length &&\n      v.length >= 3 &&\n      s.length &&\n      s.length >= 3 &&\n      o.length &&\n      o.length >= 3\n    ) {\n      const x2 = q[0] + q[0],\n        y2 = q[1] + q[1],\n        z2 = q[2] + q[2];\n\n      const xx = q[0] * x2,\n        xy = q[0] * y2,\n        xz = q[0] * z2,\n        yy = q[1] * y2,\n        yz = q[1] * z2,\n        zz = q[2] * z2,\n        wx = q[3] * x2,\n        wy = q[3] * y2,\n        wz = q[3] * z2,\n        sx = s[0],\n        sy = s[1],\n        sz = s[2],\n        ox = o[0],\n        oy = o[1],\n        oz = o[2];\n\n      const out0 = (1 - (yy + zz)) * sx,\n        out1 = (xy + wz) * sx,\n        out2 = (xz - wy) * sx,\n        out4 = (xy - wz) * sy,\n        out5 = (1 - (xx + zz)) * sy,\n        out6 = (yz + wx) * sy,\n        out8 = (xz + wy) * sz,\n        out9 = (yz - wx) * sz,\n        out10 = (1 - (xx + yy)) * sz;\n\n      return new Mat4(\n        out0,\n        out1,\n        out2,\n        0,\n        out4,\n        out5,\n        out6,\n        0,\n        out8,\n        out9,\n        out10,\n        0,\n        v[0] + ox - (out0 * ox + out4 * oy + out8 * oz),\n        v[1] + oy - (out1 * ox + out5 * oy + out9 * oz),\n        v[2] + oz - (out2 * ox + out6 * oy + out10 * oz),\n        1\n      );\n    }\n  }\n\n  /**\n   * Generates a frustum matrix with the given bounds\n   *\n   * @param {Number} left Left bound of the frustum\n   * @param {Number} right Right bound of the frustum\n   * @param {Number} bottom Bottom bound of the frustum\n   * @param {Number} top Top bound of the frustum\n   * @param {Number} near Near bound of the frustum\n   * @param {Number} far Far bound of the frustum\n   * @returns {mat4} out\n   */\n  static frustum(left, right, bottom, top, near, far) {\n    const rl = 1 / (right - left),\n      tb = 1 / (top - bottom),\n      nf = 1 / (near - far);\n\n    return new Mat4(\n      near * 2 * rl,\n      0,\n      0,\n      0,\n\n      0,\n      near * 2 * tb,\n      0,\n      0,\n\n      (right + left) * rl,\n      (top + bottom) * tb,\n      (far + near) * nf,\n      -1,\n\n      0,\n      0,\n      far * near * 2 * nf,\n      0\n    );\n  }\n\n  /**\n   * Generates a perspective projection matrix with the given bounds.\n   * Passing null/undefined/no value for far will generate infinite projection matrix.\n   *\n   * @param {number} fovy Vertical field of view in radians\n   * @param {number} aspect Aspect ratio. typically viewport width/height\n   * @param {number} near Near bound of the frustum\n   * @param {number} far Far bound of the frustum, can be null or Infinity\n   * @returns {mat4} out\n   */\n  static perspective(fovy, aspect, near, far) {\n    const f = 1.0 / Math.tan(fovy / 2);\n    let nf, a33, a43;\n\n    if (far != null && far !== Infinity) {\n      nf = 1 / (near - far);\n      a33 = (far + near) * nf;\n      // a43 = (2 * far * near) * nf;\n      a43 = 2 * far * near * nf;\n    } else {\n      a33 = -1;\n      a43 = -2 * near;\n    }\n\n    const out = new Mat4(\n      f / aspect,\n      0,\n      0,\n      0,\n\n      0,\n      f,\n      0,\n      0,\n\n      0,\n      0,\n      a33,\n      -1,\n\n      0,\n      0,\n      a43,\n      0\n    );\n\n    return out;\n  }\n\n  /**\n   * Generates a orthogonal projection matrix with the given bounds\n   *\n   * @param {number} left Left bound of the frustum\n   * @param {number} right Right bound of the frustum\n   * @param {number} bottom Bottom bound of the frustum\n   * @param {number} top Top bound of the frustum\n   * @param {number} near Near bound of the frustum\n   * @param {number} far Far bound of the frustum\n   * @returns {mat4} out\n   */\n  static ortho(left, right, bottom, top, near, far) {\n    const lr = 1 / (left - right),\n      bt = 1 / (bottom - top),\n      nf = 1 / (near - far);\n\n    return new Mat4(\n      -2 * lr,\n      0,\n      0,\n      0,\n\n      0,\n      -2 * bt,\n      0,\n      0,\n\n      0,\n      0,\n      2 * nf,\n      0,\n\n      (left + right) * lr,\n      (top + bottom) * bt,\n      (far + near) * nf,\n      1\n    );\n  }\n\n  /**\n   * Generates a look-at matrix with the given eye position, focal point, and up axis.\n   * If you want a matrix that actually makes an object look at another object, you should use targetTo instead.\n   *\n   * @param {mat4} out mat4 frustum matrix will be written into\n   * @param {vec3} eye Position of the viewer\n   * @param {vec3} center Point the viewer is looking at\n   * @param {vec3} up vec3 pointing up\n   * @returns {mat4} out\n   */\n  static lookAt(eye, center, up) {\n    if (eye.array) eye = eye.array;\n    if (center.array) center = center.array;\n    if (up.array) up = up.array;\n\n    if (\n      eye.length &&\n      eye.length >= 3 &&\n      center.length &&\n      center.length >= 3 &&\n      up.length &&\n      up.length >= 3\n    ) {\n      const e = new Vec3(...eye),\n        c = new Vec3(...center),\n        u = new Vec3(...up);\n\n      if (\n        Math.abs(e.x - c.x) < EPSILON &&\n        Math.abs(e.y - c.y) < EPSILON &&\n        Math.abs(e.z - c.z) < EPSILON\n      ) {\n        return new Mat4();\n      }\n\n      const off = e.subtractNew(c);\n      let l = 1 / Math.hypot(off.x, off.y, off.z);\n      off.x *= l;\n      off.y *= l;\n      off.z *= l;\n\n      const or = new Vec3(\n        u.y * off.z - u.z * off.y,\n        u.z * off.x - u.x * off.z,\n        u.x * off.y - u.y * off.x\n      );\n      l = Math.hypot(or.x, or.y, or.z);\n      if (!l) {\n        or.reset(0, 0, 0);\n      } else {\n        l = 1 / l;\n        or.x *= l;\n        or.y *= l;\n        or.z *= l;\n      }\n\n      const tn = new Vec3(\n        off.y * or.z - off.z * or.y,\n        off.z * or.x - off.x * or.z,\n        off.x * or.y - off.y * or.x\n      );\n      l = Math.hypot(tn.x, tn.y, tn.z);\n      if (!l) {\n        tn.reset(0, 0, 0);\n      } else {\n        l = 1 / l;\n        tn.x *= l;\n        tn.y *= l;\n        tn.z *= l;\n      }\n\n      return new Mat4(\n        or.x,\n        tn.x,\n        off.x,\n        0,\n\n        or.y,\n        tn.y,\n        off.y,\n        0,\n\n        or.z,\n        tn.z,\n        off.z,\n        0,\n\n        -(or.x * e.x + or.y * e.y + or.z * e.z),\n        -(tn.x * e.x + tn.y * e.y + tn.z * e.z),\n        -(off.x * e.x + off.y * e.y + off.z * e.z),\n        1\n      );\n    }\n  }\n\n  /**\n   * Generates a matrix that makes something look at something else.\n   *\n   * @param {vec3} eye Position of the viewer\n   * @param {vec3} center Point the viewer is looking at\n   * @param {vec3} up vec3 pointing up\n   * @returns {mat4} out\n   */\n  static targetTo(eye, target, up) {\n    if (eye.array) eye = eye.array;\n    if (target.array) target = target.array;\n    if (up.array) up = up.array;\n\n    if (\n      eye.length &&\n      eye.length >= 3 &&\n      target.length &&\n      target.length >= 3 &&\n      up.length &&\n      up.length >= 3\n    ) {\n      const e = new Vec3(...eye),\n        c = new Vec3(...target),\n        u = new Vec3(...up);\n\n      const off = e.subtractNew(c);\n      let l = off.lengthSquared;\n      if (l > 0) {\n        l = 1 / Math.sqrt(l);\n        off.x *= l;\n        off.y *= l;\n        off.z *= l;\n      } else {\n        off.z = 1;\n      }\n\n      const or = new Vec3(\n        u.y * off.z - u.z * off.y,\n        u.z * off.x - u.x * off.z,\n        u.x * off.y - u.y * off.x\n      );\n      l = or.lengthSquared;\n      if (l === 0) {\n        if(u.z) u.x += 1e-6;\n        else if(u.y) u.z += 1e-6;\n        else u.y += 1e-6;\n        or.reset(\n          u.y * off.z - u.z * off.y,\n          u.z * off.x - u.x * off.z,\n          u.x * off.y - u.y * off.x\n        );\n        l = or.lengthSquared;\n      }\n      \n      l = 1 / Math.sqrt(l);\n      or.x *= l;\n      or.y *= l;\n      or.z *= l;\n\n      return new Mat4(\n        or.x,\n        or.y,\n        or.z,\n        0,\n\n        off.y * or.z - off.z * or.y,\n        off.z * or.x - off.x * or.z,\n        off.x * or.y - off.y * or.x,\n        0,\n\n        off.x,\n        off.y,\n        off.z,\n        0,\n\n        e.x,\n        e.y,\n        e.z,\n        1\n      );\n    }\n  }\n}\n\nexport { Mat4 };\n"],"names":["conversionFactor","Math","PI","degreesToRadian","degrees","Vec2","constructor","args","_classPrivateFieldLooseBase","this","reset","x","y","isNaN","resetToVector","v","clone","add","vector","addNew","addScalar","scalar","addScalarNew","subtract","subtractNew","subtractScalar","subtractScalarNew","divide","divideNew","divideScalar","divideScalarNew","multiply","multiplyNew","multiplyScalar","multiplyScalarNew","scale","scaleNew","rotate","radian","cos","sin","rotateNew","rotateDeg","rotateDegNew","rotateBy","rotateByNew","rotateDegBy","rotateDegByNew","rotateTo","angle","rotateToNew","rotateToDeg","rotateToDegNew","negate","negateNew","inverse","inverseNew","c","normalise","length","normaliseNew","distance","distanceX","distanceY","dot","det","slopeBetween","cross","ceil","ceilNew","floor","floorNew","round","roundNew","mod","modNew","fract","fractNew","transformByMat2","m","array","Array","transformByMat2New","transformByMat3","transformByMat3New","TypeError","lengthSquared","sqrt","atan2","angleInDegrees","width","w","height","h","area","slope","value","atan","xy","Error","yx","interpolate","xx","yy","[object Object]","nv","split","Number","v1","v2","d","a","b","cosine","acos","Vec3","z","rotateX","origin","s","rotated","rotateXNew","rotateY","rotateyNew","rotateZ","rotateZNew","transformByMat4","o","transformByMat4New","transformByQuat","q","uv","uuv","transformByQuatNew","distanceZ","crossNew","radius","phi","p","theta","t","depth","xyz","yzx","zxy","yz","zx","zy","zz","_a","_b","len1","len2","order","asin","min","max","abs","Vec4","rotateYNew","l","distanceW","u","A","B","C","D","E","F","G","H","I","J","_x","_y","_z","_w","xyzw","yzwx","zwxy","wxyz","xz","xw","yw","zw","wx","wy","wz","ww","dotproduct","identity","orDefault","ident","indexOf","identToIndex","Mat2","a11","a12","a21","a22","resetToMat2","transpose","transposeNew","scaleByVec2","scaleByVec2New","r","invert","determinant","invertNew","adjoint","adjointNew","toString","columnArray","Mat3","a13","a23","a31","a32","a33","resetToMat3","f","b01","b11","b21","determinantFunction","frobeniusnorm","hypot","x2","y2","z2","map","b00","b02","b03","b04","b05","b06","b07","b08","b09","b10","a24","a14","a42","a43","a44","a41","Quat","super","resetToQuat","rad","normalW","axis","euler","out","sx","cx","sy","cy","sz","cz","Mat4","a34","resetToMat4","scaleByVec3","concat","scaleByVec3New","transform","transformNew","transformTo","transformToNew","translation","scaling","rotation","sm11","sm12","sm13","sm21","sm22","sm23","sm31","sm32","sm33","trace","S","ox","oy","oz","out0","out1","out2","out4","out5","out6","out8","out9","out10","left","right","bottom","top","near","far","rl","tb","nf","fovy","aspect","tan","Infinity","lr","bt","eye","center","up","e","off","or","tn","target"],"mappings":"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"}