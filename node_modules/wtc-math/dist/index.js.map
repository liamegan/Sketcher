{"version":3,"file":"index.js","sources":["../src/common.ts","../src/Vec2.ts","../src/Vec3.ts","../src/Vec4.ts","../src/Mat2.ts","../src/Mat3.ts","../src/Quat.ts","../src/Mat4.ts"],"sourcesContent":["const conversionFactor = 180 / Math.PI;\n\nconst radianToDegrees = function(radian:number):number {\n\treturn radian * conversionFactor;\n}\n\nconst degreesToRadian = function(degrees:number):number {\n\treturn degrees / conversionFactor;\n}\n\nexport { radianToDegrees, degreesToRadian };","import { radianToDegrees, degreesToRadian } from \"./common\";\n\n/**\n * A basic 2D Vector class that provides simple algebraic functionality in the form\n * of 2D Vectors.\n *\n * We use Getters/setters for both principle properties (x & y) as well as virtual\n * properties (rotation, length etc.).\n *\n * @class Vec2\n * @author Liam Egan <liam@wethecollective.com>\n * @version 1.0.0\n * @created Jan 07, 2020\n */\nclass Vec2 {\n  /**\n   * The Vector Class constructor\n   *\n   * @constructor\n   * @chainable\n   * @param {number} x \t\t\t\tThe x coord\n   * @param {number} y \t\t\t\tThe y coord\n   */\n  constructor(...args: number[]) {\n    this.reset(...args);\n  }\n\n  /**\n   * Resets the vector coordinates\n   *\n   * @public\n   * @chainable\n   * @param {number|Array} x \tThe x coord, OR the array to reset to\n   * @param {number} y \t\t\t\tThe y coord\n   */\n  reset(...args: number[]): Vec2 {\n    let [x, y] = args;\n    if (isNaN(x)) x = 0;\n    if (isNaN(y)) y = 0;\n    this.x = x;\n    this.y = y;\n    return this;\n  }\n\n  /**\n   * Resets the vector coordinates to another vector object\n   *\n   * @public\n   * @chainable\n   * @param {Vector} v \t\t\t\tThe vector object to use to reset the coordinates\n   */\n  resetToVector(v: Vec2): Vec2 {\n    this.x = v.x;\n    this.y = v.y;\n    return this;\n  }\n\n  /**\n   * Clones the vector\n   *\n   * @public\n   * @chainable\n   * @return {Vector}\t\t\t\t\tThe cloned vector\n   */\n  clone(): Vec2 {\n    return new Vec2(this.x, this.y);\n  }\n\n  /**\n   * Adds one vector to another.\n   *\n   * @public\n   * @chainable\n   * @param  {Vec2}  vector The vector to add to this one\n   * @return {Vec2}\t\t\t\t\tReturns itself, modified\n   */\n  add(vector: Vec2): Vec2 {\n    this.x += vector.x;\n    this.y += vector.y;\n    return this;\n  }\n  /**\n   * Clones the vector and adds the vector to it instead\n   *\n   * @public\n   * @chainable\n   * @param  {Vec2}  vector The vector to add to this one\n   * @return {Vec2}\t\t\t\t\tReturns the clone of itself, modified\n   */\n  addNew(vector: Vec2): Vec2 {\n    return this.clone().add(vector);\n  }\n\n  /**\n   * Adds a scalar to the vector, modifying both the x and y\n   *\n   * @public\n   * @chainable\n   * @param  {number}  scalar The scalar to add to the vector\n   * @return {Vec2}\t\t\t\t\tReturns itself, modified\n   */\n  addScalar(scalar: number): Vec2 {\n    return this.add(new Vec2(scalar, scalar));\n  }\n  /**\n   * Clones the vector and adds the scalar to it instead\n   *\n   * @public\n   * @chainable\n   * @param  {number}  scalar The scalar to add to the vector\n   * @return {Vec2}\t\t\t\t\tReturns the clone of itself, modified\n   */\n  addScalarNew(scalar: number): Vec2 {\n    return this.clone().addScalar(scalar);\n  }\n\n  /**\n   * Subtracts one vector from another.\n   *\n   * @public\n   * @chainable\n   * @param  {Vec2}  vector The vector to subtract from this one\n   * @return {Vec2}\t\t\t\t\tReturns itself, modified\n   */\n  subtract(vector: Vec2): Vec2 {\n    this.x -= vector.x;\n    this.y -= vector.y;\n    return this;\n  }\n  /**\n   * Clones the vector and subtracts the vector from it instead\n   *\n   * @public\n   * @chainable\n   * @param  {Vec2}  vector The vector to subtract from this one\n   * @return {Vec2}\t\t\t\t\tReturns the clone of itself, modified\n   */\n  subtractNew(vector: Vec2): Vec2 {\n    return this.clone().subtract(vector);\n  }\n\n  /**\n   * Subtracts a scalar from the vector, modifying both the x and y\n   *\n   * @public\n   * @chainable\n   * @param  {number}  scalar The scalar to subtract from the vector\n   * @return {Vec2}\t\t\t\t\tReturns itself, modified\n   */\n  subtractScalar(scalar: number): Vec2 {\n    return this.subtract(new Vec2(scalar, scalar));\n  }\n  /**\n   * Clones the vector and subtracts the scalar from it instead\n   *\n   * @public\n   * @chainable\n   * @param  {number}  scalar The scalar to add to the vector\n   * @return {Vec2}\t\t\t\t\tReturns the clone of itself, modified\n   */\n  subtractScalarNew(scalar: number): Vec2 {\n    return this.clone().subtractScalar(scalar);\n  }\n\n  /**\n   * Divides one vector by another.\n   *\n   * @public\n   * @chainable\n   * @param  {Vec2}  vector The vector to divide this by\n   * @return {Vec2}\t\t\t\t\tReturns itself, modified\n   */\n  divide(vector: Vec2): Vec2 {\n    if (vector.x !== 0) {\n      this.x /= vector.x;\n    } else {\n      this.x = 0;\n    }\n    if (vector.y !== 0) {\n      this.y /= vector.y;\n    } else {\n      this.y = 0;\n    }\n    return this;\n  }\n  /**\n   * Clones the vector and divides it by the vector instead\n   *\n   * @public\n   * @chainable\n   * @param  {Vec2}  vector The vector to divide the clone by\n   * @return {Vec2}\t\t\t\t\tReturns the clone of itself, modified\n   */\n  divideNew(vector: Vec2): Vec2 {\n    return this.clone().divide(vector);\n  }\n\n  /**\n   * Divides the vector by a scalar.\n   *\n   * @public\n   * @chainable\n   * @param  {number}  scalar The scalar to divide both x and y by\n   * @return {Vec2}\t\t\t\t\tReturns itself, modified\n   */\n  divideScalar(scalar: number): Vec2 {\n    var v = new Vec2(scalar, scalar);\n    return this.divide(v);\n  }\n  /**\n   * Clones the vector and divides it by the provided scalar.\n   *\n   * @public\n   * @chainable\n   * @param  {number}  scalar The scalar to divide both x and y by\n   * @return {Vec2}\t\t\t\t\tReturns the clone of itself, modified\n   */\n  divideScalarNew(scalar: number): Vec2 {\n    return this.clone().divideScalar(scalar);\n  }\n\n  /**\n   * Multiplies one vector by another.\n   *\n   * @public\n   * @chainable\n   * @param  {Vec2}  vector The vector to multiply this by\n   * @return {Vec2}\t\t\t\t\tReturns itself, modified\n   */\n  multiply(vector: Vec2): Vec2 {\n    this.x *= vector.x;\n    this.y *= vector.y;\n    return this;\n  }\n  /**\n   * Clones the vector and multiplies it by the vector instead\n   *\n   * @public\n   * @chainable\n   * @param  {Vec2}  vector The vector to multiply the clone by\n   * @return {Vec2}\t\t\t\t\tReturns the clone of itself, modified\n   */\n  multiplyNew(vector: Vec2): Vec2 {\n    return this.clone().multiply(vector);\n  }\n\n  /**\n   * Multiplies the vector by a scalar.\n   *\n   * @public\n   * @chainable\n   * @param  {number}  scalar The scalar to multiply both x and y by\n   * @return {Vec2}\t\t\t\t\tReturns itself, modified\n   */\n  multiplyScalar(scalar: number): Vec2 {\n    var v = new Vec2(scalar, scalar);\n    return this.multiply(v);\n  }\n  /**\n   * Clones the vector and multiplies it by the provided scalar.\n   *\n   * @public\n   * @chainable\n   * @param  {number}  scalar The scalar to multiply both x and y by\n   * @return {Vec2}\t\t\t\t\tReturns the clone of itself, modified\n   */\n  multiplyScalarNew(scalar: number): Vec2 {\n    return this.clone().multiplyScalar(scalar);\n  }\n\n  /**\n   * Alias of {@link Vector#multiplyScalar__anchor multiplyScalar}\n   */\n  scale(scalar: number): Vec2 {\n    return this.multiplyScalar(scalar);\n  }\n  /**\n   * Alias of {@link Vector#multiplyScalarNew__anchor multiplyScalarNew}\n   */\n  scaleNew(scalar: number): Vec2 {\n    return this.multiplyScalarNew(scalar);\n  }\n\n  /**\n   * Rotates a vecor by a given amount, provided in radians.\n   *\n   * @public\n   * @chainable\n   * @param  {number}  radian The angle, in radians, to rotate the vector by\n   * @return {Vec2}\t\t\t\t\tReturns itself, modified\n   */\n  rotate(radian: number): Vec2 {\n    var x = this.x * Math.cos(radian) - this.y * Math.sin(radian);\n    var y = this.x * Math.sin(radian) + this.y * Math.cos(radian);\n\n    this.x = x;\n    this.y = y;\n\n    return this;\n  }\n  /**\n   * Clones the vector and rotates it by the supplied radian value\n   *\n   * @public\n   * @chainable\n   * @param  {number}  radian The angle, in radians, to rotate the vector by\n   * @return {Vec2}\t\t\t\t\tReturns the clone of itself, modified\n   */\n  rotateNew(radian: number): Vec2 {\n    return this.clone().rotate(radian);\n  }\n\n  /**\n   * Rotates a vecor by a given amount, provided in degrees. Converts the degree\n   * value to radians and runs the rotaet method.\n   *\n   * @public\n   * @chainable\n   * @param  {number}  degrees The angle, in degrees, to rotate the vector by\n   * @return {Vec2}\t\t\t\t\t\tReturns itself, modified\n   */\n  rotateDeg(degrees: number): Vec2 {\n    return this.rotate(degreesToRadian(degrees));\n  }\n  /**\n   * Clones the vector and rotates it by the supplied degree value\n   *\n   * @public\n   * @chainable\n   * @param  {number}  degrees The angle, in degrees, to rotate the vector by\n   * @return {Vec2}\t\t\t\t\t Returns the clone of itself, modified\n   */\n  rotateDegNew(degrees: number): Vec2 {\n    return this.rotateNew(degreesToRadian(degrees));\n  }\n\n  /**\n   * Alias of {@link Vector#rotate__anchor rotate}\n   */\n  rotateBy(radian: number): Vec2 {\n    return this.rotate(radian);\n  }\n  /**\n   * Alias of {@link Vector#rotateNew__anchor rotateNew}\n   */\n  rotateByNew(radian: number): Vec2 {\n    return this.rotateNew(radian);\n  }\n\n  /**\n   * Alias of {@link Vector#rotateDeg__anchor rotateDeg}\n   */\n  rotateDegBy(degrees: number): Vec2 {\n    return this.rotateDeg(degrees);\n  }\n  /**\n   * Alias of {@link Vector#rotateDegNew__anchor rotateDegNew}\n   */\n  rotateDegByNew(radian: number): Vec2 {\n    return this.rotateDegNew(radian);\n  }\n\n  /**\n   * Rotates a vector to a specific angle\n   *\n   * @public\n   * @chainable\n   * @param  {number}  radian The angle, in radians, to rotate the vector to\n   * @return {Vec2}\t\t\t\t\tReturns itself, modified\n   */\n  rotateTo(radian: number): Vec2 {\n    return this.rotate(radian - this.angle);\n  }\n  /**\n   * Clones the vector and rotates it to the supplied radian value\n   *\n   * @public\n   * @chainable\n   * @param  {number}  radian The angle, in radians, to rotate the vector to\n   * @return {Vec2}\t\t\t\t\tReturns the clone of itself, modified\n   */\n  rotateToNew(radian: number): Vec2 {\n    return this.clone().rotateTo(radian);\n  }\n\n  /**\n   * Rotates a vecor to a given amount, provided in degrees. Converts the degree\n   * value to radians and runs the rotateTo method.\n   *\n   * @public\n   * @chainable\n   * @param  {number}  degrees The angle, in degrees, to rotate the vector to\n   * @return {Vec2}\t\t\t\t\t\tReturns itself, modified\n   */\n  rotateToDeg(degrees: number): Vec2 {\n    return this.rotateTo(degreesToRadian(degrees));\n  }\n  /**\n   * Clones the vector and rotates it to the supplied degree value\n   *\n   * @public\n   * @chainable\n   * @param  {number}  degrees The angle, in degrees, to rotate the vector to\n   * @return {Vec2}\t\t\t\t\t Returns the clone of itself, modified\n   */\n  rotateToDegNew(degrees: number): Vec2 {\n    return this.rotateToNew(degreesToRadian(degrees));\n  }\n\n  /**\n   * Negates the vector.\n   *\n   * @public\n   * @chainable\n   * @return {Vec2}\t\t\t\t\tReturns itself, modified\n   */\n  negate(): Vec2 {\n    return this.multiplyScalar(-1);\n  }\n\n  /**\n   * Clones the vector and negates it.\n   *\n   * @public\n   * @chainable\n   * @return {Vec2}\t\t\t\t\tReturns itself, modified\n   */\n  negateNew(): Vec2 {\n    return this.multiplyScalarNew(-1);\n  }\n\n  /**\n   * Inverses the vector.\n   *\n   * @public\n   * @chainable\n   * @return {Vec2}\t\t\t\t\tReturns itself, modified\n   */\n  inverse(): Vec2 {\n    this.x = 1 / this.x;\n    this.y = 1 / this.y;\n    return this;\n  }\n\n  /**\n   * Clones the vector and then inverses it.\n   *\n   * @public\n   * @chainable\n   * @return {Vec2}\t\t\t\t\tReturns itself, modified\n   */\n  inverseNew(): Vec2 {\n    const c = this.clone();\n    c.x = 1 / c.x;\n    c.y = 1 / c.y;\n    return c;\n  }\n\n  /**\n   * Normalises the vector down to a length of 1 unit\n   *\n   * @public\n   * @chainable\n   * @return {Vec2}\t\t\t\t\tReturns itself, modified\n   */\n  normalise(): Vec2 {\n    return this.divideScalar(this.length);\n  }\n  /**\n   * Clones the vector and normalises it\n   *\n   * @public\n   * @chainable\n   * @return {Vec2}\t\t\t\t\tReturns a clone of itself, modified\n   */\n  normaliseNew(): Vec2 {\n    return this.divideScalarNew(this.length);\n  }\n\n  /**\n   * Calculates the distance between this and the supplied vector\n   *\n   * @param  {Vec2} vector The vector to calculate the distance from\n   * @return {number}        The distance between this and the supplied vector\n   */\n  distance(vector: Vec2): number {\n    return this.subtractNew(vector).length;\n  }\n\n  /**\n   * Calculates the distance on the X axis between this and the supplied vector\n   *\n   * @param  {Vec2} vector The vector to calculate the distance from\n   * @return {number}        The distance, along the x axis, between this and the supplied vector\n   */\n  distanceX(vector: Vec2): number {\n    return this.x - vector.x;\n  }\n\n  /**\n   * Calculated the distance on the Y axis between this and the supplied vector\n   *\n   * @param  {Vec2} vector The vector to calculate the distance from\n   * @return {number}        The distance, along the y axis, between this and the supplied vector\n   */\n  distanceY(vector: Vec2): number {\n    return this.y - vector.y;\n  }\n\n  /**\n   * Calculates the dot product between this and a supplied vectorT\n   *\n   * @example\n   * // returns -14\n   * new Vector(2, -3).dot(new Vector(-4, 2))\n   * new Vector(-4, 2).dot(new Vector(2, -3))\n   * new Vector(2, -4).dot(new Vector(-3, 2))\n   *\n   * @param  {Vec2} vector The vector object against which to calculate the dot product\n   * @return {number}        The dot product of the two vectors\n   */\n  dot(vector: Vec2): number {\n    return this.x * vector.x + this.y * vector.y;\n  }\n\n  det(vector: Vec2): number {\n    return this.x * vector.y + this.y * vector.x;\n  }\n\n  slopeBetween(vector: Vec2): number {\n    return (vector.y - this.y) / (vector.x - this.x);\n  }\n\n  /**\n   * Calculates the cross product between this and the supplied vector.\n   *\n   * @example\n   * // returns -2\n   * new Vector(2, -3).cross(new Vector(-4, 2))\n   * new Vector(-4, 2).cross(new Vector(2, -3))\n   * // returns 2\n   * new Vector(2, -4).cross(new Vector(-3, 2))\n   *\n   * @param  {Vec2} vector The vector object against which to calculate the cross product\n   * @return {number}        The cross product of the two vectors\n   */\n  cross(vector: Vec2): number {\n    return this.x * vector.x - this.y * vector.y;\n  }\n\n  ceil(): Vec2 {\n    this.x = Math.ceil(this.x);\n    this.y = Math.ceil(this.y);\n    return this;\n  }\n\n  ceilNew(): Vec2 {\n    return this.clone().ceil();\n  }\n\n  floor(): Vec2 {\n    this.x = Math.floor(this.x);\n    this.y = Math.floor(this.y);\n    return this;\n  }\n\n  floorNew(): Vec2 {\n    return this.clone().floor();\n  }\n\n  round(): Vec2 {\n    this.x = Math.round(this.x);\n    this.y = Math.round(this.y);\n    return this;\n  }\n\n  roundNew(): Vec2 {\n    return this.clone().round();\n  }\n\n  mod(vector: Vec2): Vec2 {\n    this.x = this.x % vector.x;\n    this.y = this.y % vector.y;\n    return this;\n  }\n\n  modNew(vector: Vec2): Vec2 {\n    return this.clone().mod(vector);\n  }\n\n  fract(): Vec2 {\n    this.x -= Math.floor(this.x);\n    this.y -= Math.floor(this.y);\n    return this;\n  }\n\n  fractNew(): Vec2 {\n    return this.clone().fract();\n  }\n\n  transformByMat2(m): Vec2 {\n    if (m.array) m = m.array; // This just transforms the matrix to an array.\n    if (m instanceof Array && m.length >= 4) {\n      const c = this.clone();\n      this.x = m[0] * c.x + m[2] * c.y;\n      this.y = m[1] * c.x + m[3] * c.y;\n    }\n    return this;\n  }\n\n  transformByMat2New(m): Vec2 {\n    return this.clone().transformByMat2(m);\n  }\n\n  transformByMat3(m): Vec2 {\n    if (m.array) m = m.array; // This just transforms the matrix to an array.\n    if (m instanceof Array && m.length >= 9) {\n      const c = this.clone();\n      this.x = m[0] * c.x + m[3] * c.y + m[6];\n      this.y = m[1] * c.x + m[4] * c.y + m[7];\n    }\n    return this;\n  }\n\n  transformByMat3New(m): Vec2 {\n    return this.clone().transformByMat3(m);\n  }\n\n  /**\n   * Getters and setters\n   */\n\n  /**\n   * (getter/setter) The x value of the vector.\n   *\n   * @type {number}\n   * @default 0\n   */\n  #x: number = 0;\n  set x(x: number) {\n    if (typeof x == \"number\") {\n      this.#x = x;\n    } else {\n      throw new TypeError(\"X should be a number\");\n    }\n  }\n  get x(): number {\n    return this.#x || 0;\n  }\n\n  /**\n   * (getter/setter) The y value of the vector.\n   *\n   * @type {number}\n   * @default 0\n   */\n  #y: number = 0;\n  set y(y: number) {\n    if (typeof y == \"number\") {\n      this.#y = y;\n    } else {\n      throw new TypeError(\"Y should be a number\");\n    }\n  }\n  get y(): number {\n    return this.#y || 0;\n  }\n\n  /**\n   * (getter/setter) The length of the vector presented as a square. If you're using\n   * length for comparison, this is quicker.\n   *\n   * @type {number}\n   * @default 0\n   */\n  set lengthSquared(length: number) {\n    var factor;\n    if (typeof length == \"number\") {\n      factor = length / this.lengthSquared;\n      this.multiplyScalar(factor);\n    } else {\n      throw new TypeError(\"length should be a number\");\n    }\n  }\n  get lengthSquared(): number {\n    return this.x * this.x + this.y * this.y;\n  }\n\n  /**\n   * (getter/setter) The length of the vector\n   *\n   * @type {number}\n   * @default 0\n   */\n  set length(length: number) {\n    var factor;\n    if (typeof length == \"number\") {\n      factor = length / this.length;\n      this.multiplyScalar(factor);\n    } else {\n      throw new TypeError(\"length should be a number\");\n    }\n  }\n  get length(): number {\n    return Math.sqrt(this.lengthSquared);\n  }\n\n  /**\n   * (getter/setter) The angle of the vector, in radians\n   *\n   * @type {number}\n   * @default 0\n   */\n  set angle(radian: number) {\n    if (typeof radian == \"number\") {\n      this.rotateTo(radian);\n    } else {\n      throw new TypeError(\"angle should be a number\");\n    }\n  }\n  get angle(): number {\n    return Math.atan2(this.y, this.x);\n  }\n\n  /**\n   * (getter/setter) The angle of the vector, in radians\n   *\n   * @type {number}\n   * @default 0\n   */\n  set angleInDegrees(degrees: number) {\n    if (typeof degrees == \"number\") {\n      this.rotateToDeg(degrees);\n    } else {\n      throw new TypeError(\"angle should be a number\");\n    }\n  }\n  get angleInDegrees(): number {\n    return radianToDegrees(Math.atan2(this.y, this.x));\n  }\n\n  /**\n   * (getter/setter) Vector width.\n   * Alias of {@link Vector#x x}\n   *\n   * @type {number}\n   */\n  set width(w: number) {\n    this.x = w;\n  }\n  get width(): number {\n    return this.x;\n  }\n\n  /**\n   * (getter/setter) Vector height.\n   * Alias of {@link Vector#x x}\n   *\n   * @type {number}\n   */\n  set height(h: number) {\n    this.y = h;\n  }\n  get height(): number {\n    return this.y;\n  }\n\n  /**\n   * (getter) Vector area.\n   * @readonly\n   *\n   * @type {number}\n   */\n  get area(): number {\n    return this.x * this.y;\n  }\n\n  /**\n   * (getter/setter) Vector slope.\n   *\n   * @type {number}\n   */\n  set slope(value: number) {\n    if (!isNaN(value)) {\n      let angle = Math.atan(value);\n      this.angle = angle;\n    }\n  }\n  get slope(): number {\n    return this.y / this.x;\n  }\n\n  /**\n   * (getter) Returns the basic array representation of this vector.\n   * @readonly\n   *\n   * @type {number}\n   */\n  get array(): number[] {\n    return [this.x, this.y];\n  }\n\n  /**\n   * (getter/sette) Swizzle XY\n   *\n   * @type {number}\n   */\n  get xy(): Vec2 | number[] {\n    return new Vec2(this.x, this.y);\n  }\n  set xy(v: Vec2 | number[]) {\n    if (v instanceof Vec2) {\n      this.resetToVector(v);\n    } else if (v instanceof Array && v.length >= 2) {\n      this.reset(v[0], v[1]);\n    } else {\n      throw new Error(\"input should be of type Vector\");\n    }\n  }\n\n  /**\n   * (getter/sette) Swizzle YX\n   *\n   * @type {number}\n   */\n  get yx(): any {\n    return new Vec2(this.y, this.x);\n  }\n  set yx(v: any) {\n    this.xy = Vec2.interpolate(v).yx;\n  }\n\n  /**\n   * (getter/sette) Swizzle XX\n   *\n   * @type {number}\n   */\n  get xx(): any {\n    return new Vec2(this.x, this.x);\n  }\n  set xx(v: any) {\n    v = Vec2.interpolate(v);\n    this.x = v.y;\n  }\n\n  /**\n   * (getter/sette) Swizzle YY\n   *\n   * @type {number}\n   */\n  get yy(): any {\n    return new Vec2(this.y, this.y);\n  }\n  set yy(v: any) {\n    v = Vec2.interpolate(v);\n    this.y = v.y;\n  }\n\n  /**\n   * Static methods\n   */\n  /**\n   * Iterpolates a provided anonymous value into a vew Vec2\n   *\n   * @param {Vec2|array|string|number} v The value to interpolate\n   * @returns {Vec2} out\n   */\n  static interpolate(v: any) {\n    if (v instanceof Vec2) {\n      return new Vec2(v.x, v.y);\n    } else if (v instanceof Array && v.length >= 2) {\n      return new Vec2(v[0], v[1]);\n    } else if (!isNaN(v)) {\n      return new Vec2(v, v);\n    } else if (typeof v === \"string\") {\n      const nv = v.split(\",\");\n      const x: number = Number(nv[0]);\n      const y: number = Number(nv[1]);\n      if (nv.length >= 2 && !isNaN(x) && !isNaN(y)) {\n        return new Vec2(x, y);\n      }\n    } else {\n      throw new Error(\"The passed interpolant could not be parsed into a vec2\");\n    }\n  }\n\n  /**\n   * Performs a linear interpolation between two vec2's\n   *\n   * @param {vec2} v1 the first operand\n   * @param {vec2} v2 the second operand\n   * @param {Number} d interpolation amount in the range of 0 - 1\n   * @returns {Vec2}\n   */\n  static lerp(v1: Vec2, v2: Vec2, d: number): Vec2 {\n    return new Vec2(v1.x + d * (v2.x - v1.x), v1.y + d * (v2.y - v1.y));\n  }\n\n  /**\n   * Finds the angle between 2 vectors.\n   *\n   * @param {vec2} a the first operand\n   * @param {vec2} b the second operand\n   * @returns {number}\n   */\n  static getAngle(a: Vec2, b: Vec2): number {\n    a = a.clone();\n    b = b.clone();\n\n    a.normalise();\n    b.normalise();\n\n    const cosine = a.dot(b);\n\n    if (cosine > 1.0) {\n      return 0;\n    } else if (cosine < -1.0) {\n      return Math.PI;\n    } else {\n      return Math.acos(cosine);\n    }\n  }\n}\n\nexport { Vec2 };\n","import { Vec2 } from \"./Vec2\";\nimport { Mat4 } from \"./Mat4\";\n\n/**\n * A basic 3D Vector class that provides simple algebraic functionality in the form\n * of 3D Vectors.\n *\n * We use Getters/setters for both principle properties (x & y) as well as virtual\n * properties (rotation, length etc.).\n *\n * @class Vec3\n * @author Liam Egan <liam@wethecollective.com>\n * @version 1.0.0\n * @created Jan 07, 2020\n */\nclass Vec3 {\n  /**\n   * The Vector Class constructor\n   *\n   * @constructor\n   * @param {number} x \t\t\t\tThe x coord\n   * @param {number} y \t\t\t\tThe y coord\n   * @param {number} z \t\t\t\tThe z coord\n   */\n  constructor(...args: number[]) {\n    this.reset(...args);\n  }\n\n  /**\n   * Resets the vector coordinates\n   *\n   * @public\n   * @chainable\n   * @param {number} x \t\t\t\tThe x coord\n   * @param {number} y \t\t\t\tThe y coord\n   * @param {number} z \t\t\t\tThe z coord\n   */\n  reset(...args: number[]): Vec3 {\n    let [x, y, z, w] = args;\n    if (isNaN(x)) x = 0;\n    if (isNaN(y)) y = 0;\n    if (isNaN(z)) z = 0;\n    this.x = x;\n    this.y = y;\n    this.z = z;\n    return this;\n  }\n\n  /**\n   * Resets the vector coordinates to another vector object\n   *\n   * @public\n   * @chainable\n   * @param {Vec3} v \t\t\t\tThe vector object to use to reset the coordinates\n   */\n  resetToVector(v: Vec3): Vec3 {\n    if (v instanceof Vec3) {\n      this.x = v.x;\n      this.y = v.y;\n      this.z = v.z;\n    }\n    return this;\n  }\n\n  /**\n   * Clones the vector\n   *\n   * @public\n   * @return {Vec3}\t\t\t\t\tThe cloned vector\n   */\n  clone(): Vec3 {\n    return new Vec3(this.x, this.y, this.z);\n  }\n\n  /**\n   * Adds one vector to another.\n   *\n   * @public\n   * @chainable\n   * @param  {Vec3}  vector The vector to add to this one\n   * @return {Vec3}\t\t\t\t\tReturns itself, modified\n   */\n  add(vector: Vec3): Vec3 {\n    this.x += vector.x;\n    this.y += vector.y;\n    this.z += vector.z;\n    return this;\n  }\n  /**\n   * Clones the vector and adds the vector to it instead\n   *\n   * @public\n   * @chainable\n   * @param  {Vec3}  vector The vector to add to this one\n   * @return {Vec3}\t\t\t\t\tReturns the clone of itself, modified\n   */\n  addNew(vector: Vec3): Vec3 {\n    return this.clone().add(vector);\n  }\n\n  /**\n   * Adds a scalar to the vector, modifying both the x and y\n   *\n   * @public\n   * @chainable\n   * @param  {number}  scalar The scalar to add to the vector\n   * @return {Vec3}\t\t\t\t\tReturns itself, modified\n   */\n  addScalar(scalar: number): Vec3 {\n    return this.add(new Vec3(scalar, scalar, scalar));\n  }\n  /**\n   * Clones the vector and adds the scalar to it instead\n   *\n   * @public\n   * @chainable\n   * @param  {number}  scalar The scalar to add to the vector\n   * @return {Vec3}\t\t\t\t\tReturns the clone of itself, modified\n   */\n  addScalarNew(scalar: number): Vec3 {\n    return this.clone().addScalar(scalar);\n  }\n\n  /**\n   * Subtracts one vector from another.\n   *\n   * @public\n   * @chainable\n   * @param  {Vec3}  vector The vector to subtract from this one\n   * @return {Vec3}\t\t\t\t\tReturns itself, modified\n   */\n  subtract(vector: Vec3): Vec3 {\n    this.x -= vector.x;\n    this.y -= vector.y;\n    this.z -= vector.z;\n    return this;\n  }\n  /**\n   * Clones the vector and subtracts the vector from it instead\n   *\n   * @public\n   * @chainable\n   * @param  {Vec3}  vector The vector to subtract from this one\n   * @return {Vec3}\t\t\t\t\tReturns the clone of itself, modified\n   */\n  subtractNew(vector: Vec3): Vec3 {\n    return this.clone().subtract(vector);\n  }\n\n  /**\n   * Subtracts a scalar from the vector, modifying both the x and y\n   *\n   * @public\n   * @chainable\n   * @param  {number}  scalar The scalar to subtract from the vector\n   * @return {Vec3}\t\t\t\t\tReturns itself, modified\n   */\n  subtractScalar(scalar: number): Vec3 {\n    return this.subtract(new Vec3(scalar, scalar, scalar));\n  }\n  /**\n   * Clones the vector and subtracts the scalar from it instead\n   *\n   * @public\n   * @chainable\n   * @param  {number}  scalar The scalar to add to the vector\n   * @return {Vec3}\t\t\t\t\tReturns the clone of itself, modified\n   */\n  subtractScalarNew(scalar: number): Vec3 {\n    return this.clone().subtractScalar(scalar);\n  }\n\n  /**\n   * Divides one vector by another.\n   *\n   * @public\n   * @chainable\n   * @param  {Vec3}  vector The vector to divide this by\n   * @return {Vec3}\t\t\t\t\tReturns itself, modified\n   */\n  divide(vector: Vec3): Vec3 {\n    if (vector.x !== 0) {\n      this.x /= vector.x;\n    } else {\n      this.x = 0;\n    }\n    if (vector.y !== 0) {\n      this.y /= vector.y;\n    } else {\n      this.y = 0;\n    }\n    if (vector.z !== 0) {\n      this.z /= vector.z;\n    } else {\n      this.z = 0;\n    }\n    return this;\n  }\n  /**\n   * Clones the vector and divides it by the vector instead\n   *\n   * @public\n   * @chainable\n   * @param  {Vec3}  vector The vector to divide the clone by\n   * @return {Vec3}\t\t\t\t\tReturns the clone of itself, modified\n   */\n  divideNew(vector: Vec3): Vec3 {\n    return this.clone().divide(vector);\n  }\n\n  /**\n   * Divides the vector by a scalar.\n   *\n   * @public\n   * @chainable\n   * @param  {number}  scalar The scalar to divide both x and y by\n   * @return {Vec3}\t\t\t\t\tReturns itself, modified\n   */\n  divideScalar(scalar: number): Vec3 {\n    var v = new Vec3(scalar, scalar, scalar);\n    return this.divide(v);\n  }\n  /**\n   * Clones the vector and divides it by the provided scalar.\n   *\n   * @public\n   * @chainable\n   * @param  {number}  scalar The scalar to divide both x and y by\n   * @return {Vec3}\t\t\t\t\tReturns the clone of itself, modified\n   */\n  divideScalarNew(scalar: number): Vec3 {\n    return this.clone().divideScalar(scalar);\n  }\n\n  /**\n   * Multiplies one vector by another.\n   *\n   * @public\n   * @chainable\n   * @param  {Vec3}  vector The vector to multiply this by\n   * @return {Vec3}\t\t\t\t\tReturns itself, modified\n   */\n  multiply(vector: Vec3): Vec3 {\n    this.x *= vector.x;\n    this.y *= vector.y;\n    this.z *= vector.z;\n    return this;\n  }\n  /**\n   * Clones the vector and multiplies it by the vector instead\n   *\n   * @public\n   * @chainable\n   * @param  {Vec3}  vector The vector to multiply the clone by\n   * @return {Vec3}\t\t\t\t\tReturns the clone of itself, modified\n   */\n  multiplyNew(vector: Vec3): Vec3 {\n    return this.clone().multiply(vector);\n  }\n\n  /**\n   * Multiplies the vector by a scalar.\n   *\n   * @public\n   * @chainable\n   * @param  {number}  scalar The scalar to multiply both x and y by\n   * @return {Vec3}\t\t\t\t\tReturns itself, modified\n   */\n  multiplyScalar(scalar: number): Vec3 {\n    var v = new Vec3(scalar, scalar, scalar);\n    return this.multiply(v);\n  }\n  /**\n   * Clones the vector and multiplies it by the provided scalar.\n   *\n   * @public\n   * @chainable\n   * @param  {number}  scalar The scalar to multiply both x and y by\n   * @return {Vec3}\t\t\t\t\tReturns the clone of itself, modified\n   */\n  multiplyScalarNew(scalar: number): Vec3 {\n    return this.clone().multiplyScalar(scalar);\n  }\n\n  /**\n   * Alias of {@link Vector#multiplyScalar__anchor multiplyScalar}\n   */\n  scale(scalar: number): Vec3 {\n    return this.multiplyScalar(scalar);\n  }\n  /**\n   * Alias of {@link Vector#multiplyScalarNew__anchor multiplyScalarNew}\n   */\n  scaleNew(scalar: number): Vec3 {\n    return this.multiplyScalarNew(scalar);\n  }\n\n  rotateX(origin: Vec3, radian: number): Vec3 {\n    const s = Math.sin(radian);\n    const c = Math.cos(radian);\n\n    // Translate to the origin\n    const translated = this.subtractNew(origin);\n\n    // Rotate\n    const rotated = translated.clone();\n    rotated.y = rotated.y * c - rotated.z * s;\n    rotated.z = rotated.y * s + rotated.z * c;\n\n    // Translate back\n    this.y = rotated.y + origin.y;\n    this.z = rotated.z + origin.z;\n\n    return this;\n  }\n\n  rotateXNew(origin: Vec3, radian: number): Vec3 {\n    return this.clone().rotateX(origin, radian);\n  }\n\n  rotateY(origin: Vec3, radian: number): Vec3 {\n    const s = Math.sin(radian);\n    const c = Math.cos(radian);\n\n    // Translate to the origin\n    const translated = this.subtractNew(origin);\n\n    // Rotate\n    const rotated = translated.clone();\n    rotated.x = rotated.z * s + rotated.z * c;\n    rotated.z = rotated.z * c - rotated.x * s;\n\n    // Translate back\n    this.x = rotated.x + origin.x;\n    this.z = rotated.z + origin.z;\n\n    return this;\n  }\n\n  rotateyNew(origin: Vec3, radian: number): Vec3 {\n    return this.clone().rotateY(origin, radian);\n  }\n\n  rotateZ(origin: Vec3, radian: number): Vec3 {\n    const s = Math.sin(radian);\n    const c = Math.cos(radian);\n\n    // Translate to the origin\n    const translated = this.subtractNew(origin);\n\n    // Rotate\n    const rotated = translated.clone();\n    rotated.x = rotated.x * c - rotated.y * s;\n    rotated.y = rotated.x * s + rotated.y * c;\n\n    // Translate back\n    this.x = rotated.x + origin.x;\n    this.y = rotated.y + origin.y;\n\n    return this;\n  }\n\n  rotateZNew(origin: Vec3, radian: number): Vec3 {\n    return this.clone().rotateZ(origin, radian);\n  }\n\n  transformByMat4(m: any): Vec3 {\n    if (m.array) m = m.array; // This just transforms the matrix to an array.\n    if (m instanceof Array && m.length >= 16) {\n      const o = this.clone();\n      const w = m[3] * o.x + m[7] * o.y + m[11] * o.z + m[15] || 1;\n      this.x = (m[0] * o.x + m[4] * o.y + m[8] * o.z + m[12]) / w;\n      this.y = (m[1] * o.x + m[5] * o.y + m[9] * o.z + m[13]) / w;\n      this.z = (m[2] * o.x + m[6] * o.y + m[10] * o.z + m[14]) / w;\n    }\n    return this;\n  }\n\n  transformByMat4New(m: any): Vec3 {\n    return this.clone().transformByMat4(m);\n  }\n\n  transformByMat3(m: any): Vec3 {\n    if (m.array) m = m.array; // This just transforms the matrix to an array.\n    if (m instanceof Array && m.length >= 9) {\n      const o = this.clone();\n      this.x = m[0] * o.x + m[3] * o.y + m[6] * o.z;\n      this.y = m[1] * o.x + m[4] * o.y + m[7] * o.z;\n      this.z = m[2] * o.x + m[5] * o.y + m[8] * o.z;\n    }\n    return this;\n  }\n\n  transformByMat3New(m: any): Vec3 {\n    return this.clone().transformByMat3(m);\n  }\n\n  transformByQuat(q: any): Vec3 {\n    if (q.array) q = q.array; // This just transforms the quaternion to an array.\n    if (q instanceof Array && q.length >= 4) {\n      const o = this.clone();\n      const uv = new Vec3(\n        q[1] * o.z - q[2] * o.y,\n        q[2] * o.x - q[0] * o.z,\n        q[0] * o.y - q[1] * o.x\n      );\n      const uuv = new Vec3(\n        q[1] * uv.z - q[2] * uv.y,\n        q[2] * uv.x - q[0] * uv.z,\n        q[0] * uv.y - q[1] * uv.x\n      );\n      uv.scale(2 * q[3]);\n      uuv.scale(2 * q[3]);\n\n      this.add(uv);\n      this.add(uuv);\n    }\n    return this;\n  }\n\n  transformByQuatNew(q: any): Vec3 {\n    return this.clone().transformByQuat(q);\n  }\n\n  /**\n   * Negates the vector.\n   *\n   * @public\n   * @chainable\n   * @return {Vec3}\t\t\t\t\tReturns itself, modified\n   */\n  negate(): Vec3 {\n    return this.multiplyScalar(-1);\n  }\n\n  /**\n   * Clones the vector and negates it.\n   *\n   * @public\n   * @chainable\n   * @return {Vec3}\t\t\t\t\tReturns itself, modified\n   */\n  negateNew(): Vec3 {\n    return this.multiplyScalarNew(-1);\n  }\n\n  /**\n   * Inverses the vector.\n   *\n   * @public\n   * @chainable\n   * @return {Vec3}\t\t\t\t\tReturns itself, modified\n   */\n  inverse(): Vec3 {\n    this.x = 1 / this.x;\n    this.y = 1 / this.y;\n    this.z = 1 / this.z;\n    return this;\n  }\n\n  /**\n   * Clones the vector and then inverses it.\n   *\n   * @public\n   * @chainable\n   * @return {Vec3}\t\t\t\t\tReturns itself, modified\n   */\n  inverseNew(): Vec3 {\n    const c = this.clone();\n    c.x = 1 / c.x;\n    c.y = 1 / c.y;\n    c.z = 1 / c.z;\n    return c;\n  }\n\n  /**\n   * Normalises the vector down to a length of 1 unit\n   *\n   * @public\n   * @chainable\n   * @return {Vec3}\t\t\t\t\tReturns itself, modified\n   */\n  normalise(): Vec3 {\n    return this.divideScalar(this.length);\n  }\n  /**\n   * Clones the vector and normalises it\n   *\n   * @public\n   * @chainable\n   * @return {Vec3}\t\t\t\t\tReturns a clone of itself, modified\n   */\n  normaliseNew(): Vec3 {\n    return this.divideScalarNew(this.length);\n  }\n\n  /**\n   * Calculates the distance between this and the supplied vector\n   *\n   * @param  {Vec3} vector The vector to calculate the distance from\n   * @return {number}        The distance between this and the supplied vector\n   */\n  distance(vector: Vec3): number {\n    return this.subtractNew(vector).length;\n  }\n\n  /**\n   * Calculates the distance on the X axis between this and the supplied vector\n   *\n   * @param  {Vec3} vector The vector to calculate the distance from\n   * @return {number}        The distance, along the x axis, between this and the supplied vector\n   */\n  distanceX(vector: Vec3): number {\n    return this.x - vector.x;\n  }\n\n  /**\n   * Calculated the distance on the Y axis between this and the supplied vector\n   *\n   * @param  {Vec3} vector The vector to calculate the distance from\n   * @return {number}        The distance, along the y axis, between this and the supplied vector\n   */\n  distanceY(vector: Vec3): number {\n    return this.y - vector.y;\n  }\n\n  /**\n   * Calculated the distance on the Z axis between this and the supplied vector\n   *\n   * @param  {Vec3} vector The vector to calculate the distance from\n   * @return {number}        The distance, along the y axis, between this and the supplied vector\n   */\n  distanceZ(vector: Vec3): number {\n    return this.z - vector.z;\n  }\n\n  /**\n   * Calculates the dot product between this and a supplied vector\n   *\n   * @example\n   * // returns -14\n   * new Vector(2, -3).dot(new Vector(-4, 2))\n   * new Vector(-4, 2).dot(new Vector(2, -3))\n   * new Vector(2, -4).dot(new Vector(-3, 2))\n   *\n   * @param  {Vec3} vector The vector object against which to calculate the dot product\n   * @return {number}        The dot product of the two vectors\n   */\n  dot(vector: Vec3): number {\n    return this.x * vector.x + this.y * vector.y + this.z * vector.z;\n  }\n\n  /**\n   * Calculates the cross product between this and the supplied vector.\n   *\n   * @example\n   * // returns -2\n   * new Vector(2, -3).cross(new Vector(-4, 2))\n   * new Vector(-4, 2).cross(new Vector(2, -3))\n   * // returns 2\n   * new Vector(2, -4).cross(new Vector(-3, 2))\n   *\n   * @param  {Vec3} vector The vector object against which to calculate the cross product\n   * @return {Vec3}        The cross product of the two vectors\n   */\n  cross(vector: Vec3): Vec3 {\n    return new Vec3(\n      this.y * vector.z - this.z * vector.y,\n      this.z * vector.x - this.x * vector.z,\n      this.x * vector.y - this.y * vector.x\n    );\n  }\n\n  crossNew(vector: Vec3): Vec3 {\n    return this.clone().cross(vector);\n  }\n\n  ceil(): Vec3 {\n    this.x = Math.ceil(this.x);\n    this.y = Math.ceil(this.y);\n    this.z = Math.ceil(this.z);\n    return this;\n  }\n\n  ceilNew(): Vec3 {\n    return this.clone().ceil();\n  }\n\n  floor(): Vec3 {\n    this.x = Math.floor(this.x);\n    this.y = Math.floor(this.y);\n    this.z = Math.floor(this.z);\n    return this;\n  }\n\n  floorNew(): Vec3 {\n    return this.clone().floor();\n  }\n\n  round(): Vec3 {\n    this.x = Math.round(this.x);\n    this.y = Math.round(this.y);\n    this.z = Math.round(this.z);\n    return this;\n  }\n\n  roundNew(): Vec3 {\n    return this.clone().round();\n  }\n\n  fract(): Vec3 {\n    this.x -= Math.floor(this.x);\n    this.y -= Math.floor(this.y);\n    this.z -= Math.floor(this.z);\n    return this;\n  }\n\n  fractNew(): Vec3 {\n    return this.clone().fract();\n  }\n\n  /**\n   * Getters and setters\n   */\n\n  /**\n   * (getter/setter) The x value of the vector.\n   *\n   * @type {number}\n   * @default 0\n   */\n  #x: number = 0;\n  set x(x: number) {\n    if (typeof x == \"number\") {\n      this.#x = x;\n    } else {\n      throw new TypeError(\"X should be a number\");\n    }\n  }\n  get x(): number {\n    return this.#x || 0;\n  }\n\n  /**\n   * (getter/setter) The y value of the vector.\n   *\n   * @type {number}\n   * @default 0\n   */\n  #y: number = 0;\n  set y(y: number) {\n    if (typeof y == \"number\") {\n      this.#y = y;\n    } else {\n      throw new TypeError(\"Y should be a number\");\n    }\n  }\n  get y(): number {\n    return this.#y || 0;\n  }\n\n  /**\n   * (getter/setter) The y value of the vector.\n   *\n   * @type {number}\n   * @default 0\n   */\n  #z: number = 0;\n  set z(z: number) {\n    if (typeof z == \"number\") {\n      this.#z = z;\n    } else {\n      throw new TypeError(\"Y should be a number\");\n    }\n  }\n  get z(): number {\n    return this.#z || 0;\n  }\n\n  /**\n   * (getter/setter) The length of the vector presented as a square. If you're using\n   * length for comparison, this is quicker.\n   *\n   * @type {number}\n   * @default 0\n   */\n  set lengthSquared(length: number) {\n    var factor;\n    if (typeof length == \"number\") {\n      factor = length / this.lengthSquared;\n      this.multiplyScalar(factor);\n    } else {\n      throw new TypeError(\"length should be a number\");\n    }\n  }\n  get lengthSquared(): number {\n    return this.x * this.x + this.y * this.y + this.z * this.z;\n  }\n\n  /**\n   * (getter/setter) The length of the vector\n   *\n   * @type {number}\n   * @default 0\n   */\n  set length(length: number) {\n    var factor;\n    if (typeof length == \"number\") {\n      factor = length / this.length;\n      this.multiplyScalar(factor);\n    } else {\n      throw new TypeError(\"length should be a number\");\n    }\n  }\n  get length(): number {\n    return Math.sqrt(this.lengthSquared);\n  }\n\n  /**\n   * (getter/setter) Spherical radius. For using a vec3 as spherical coordinates.\n   * Alias of {@link Vector#x x}\n   *\n   * @type {number}\n   */\n  set radius(s: number) {\n    this.x = s;\n  }\n  get radius(): number {\n    return this.x;\n  }\n\n  /**\n   * (getter/setter) Spherical phi. For using a vec3 as spherical coordinates.\n   * Alias of {@link Vector#y y}\n   *\n   * @type {number}\n   */\n  set phi(p: number) {\n    this.y = p;\n  }\n  get phi(): number {\n    return this.y;\n  }\n\n  /**\n   * (getter/setter) Spherical theta. For using a vec3 as spherical coordinates.\n   * Alias of {@link Vector#z z}\n   *\n   * @type {number}\n   */\n  set theta(t: number) {\n    this.z = t;\n  }\n  get theta(): number {\n    return this.z;\n  }\n\n  /**\n   * (getter/setter) Vector width.\n   * Alias of {@link Vector#x x}\n   *\n   * @type {number}\n   */\n  set width(w: number) {\n    this.x = w;\n  }\n  get width(): number {\n    return this.x;\n  }\n\n  /**\n   * (getter/setter) Vector height.\n   * Alias of {@link Vector#x x}\n   *\n   * @type {number}\n   */\n  set height(h: number) {\n    this.y = h;\n  }\n  get height(): number {\n    return this.y;\n  }\n\n  /**\n   * (getter/setter) Vector height.\n   * Alias of {@link Vector#x x}\n   *\n   * @type {number}\n   */\n  set depth(h: number) {\n    this.z = h;\n  }\n  get depth(): number {\n    return this.z;\n  }\n\n  /**\n   * (getter) Vector area.\n   * @readonly\n   *\n   * @type {number}\n   */\n  get area(): number {\n    return this.x * this.y * this.z;\n  }\n\n  /**\n   * (getter) Returns the basic array representation of this vector.\n   * @readonly\n   *\n   * @type {number}\n   */\n  get array(): number[] {\n    return [this.x, this.y, this.z];\n  }\n\n  /**\n   * (getter/sette) Swizzle XYZ\n   *\n   * @type {Vec3}\n   */\n  get xyz(): any {\n    return new Vec3(this.x, this.y, this.z);\n  }\n  set xyz(v: any) {\n    if (v instanceof Vec3) {\n      this.resetToVector(v);\n    } else if (v instanceof Array && v.length >= 3) {\n      this.reset(v[0], v[1], v[2]);\n    } else {\n      throw new Error(\"input should be of type Vector\");\n    }\n  }\n\n  /**\n   * (getter/sette) Swizzle YZX\n   *\n   * @type {Vec3}\n   */\n  get yzx(): any {\n    return new Vec3(this.y, this.z, this.x);\n  }\n  set yzx(v: any) {\n    this.xyz = Vec3.interpolate(v).yzx;\n  }\n\n  /**\n   * (getter/sette) Swizzle ZXY\n   *\n   * @type {Vec3}\n   */\n  get zxy(): any {\n    return new Vec3(this.z, this.x, this.y);\n  }\n  set zxy(v: any) {\n    this.xyz = Vec3.interpolate(v).zxy;\n  }\n\n  /**\n   * (getter/sette) Swizzle XY\n   *\n   * @type {Vec2}\n   */\n  get xy(): any {\n    return new Vec2(this.x, this.y);\n  }\n  set xy(v: any) {\n    v = Vec2.interpolate(v);\n    this.x = v.x;\n    this.y = v.y;\n  }\n\n  /**\n   * (getter/sette) Swizzle YZ\n   *\n   * @type {Vec2}\n   */\n  get yz(): any {\n    return new Vec2(this.y, this.z);\n  }\n  set yz(v: any) {\n    v = Vec2.interpolate(v);\n    this.y = v.x;\n    this.z = v.y;\n  }\n\n  /**\n   * (getter/sette) Swizzle zx\n   *\n   * @type {Vec2}\n   */\n  get zx(): any {\n    return new Vec2(this.z, this.x);\n  }\n  set zx(v: any) {\n    v = Vec2.interpolate(v);\n    this.z = v.x;\n    this.x = v.y;\n  }\n\n  /**\n   * (getter/sette) Swizzle YX\n   *\n   * @type {number}\n   */\n  get yx(): any {\n    return new Vec2(this.y, this.x);\n  }\n  set yx(v: any) {\n    v = Vec2.interpolate(v);\n    this.x = v.y;\n    this.y = v.x;\n  }\n\n  /**\n   * (getter/sette) Swizzle ZY\n   *\n   * @type {number}\n   */\n  get zy(): any {\n    return new Vec2(this.z, this.y);\n  }\n  set zy(v: any) {\n    v = Vec2.interpolate(v);\n    this.z = v.y;\n    this.y = v.x;\n  }\n\n  /**\n   * (getter/sette) Swizzle XX\n   *\n   * @type {number}\n   */\n  get xx(): any {\n    return new Vec2(this.x, this.x);\n  }\n  set xx(v: any) {\n    v = Vec2.interpolate(v);\n    this.x = v.y;\n  }\n\n  /**\n   * (getter/sette) Swizzle YY\n   *\n   * @type {number}\n   */\n  get yy(): any {\n    return new Vec2(this.y, this.y);\n  }\n  set yy(v: any) {\n    v = Vec2.interpolate(v);\n    this.y = v.y;\n  }\n\n  /**\n   * (getter/sette) Swizzle ZZ\n   *\n   * @type {number}\n   */\n  get zz(): any {\n    return new Vec2(this.z, this.z);\n  }\n  set zz(v: any) {\n    v = Vec2.interpolate(v);\n    this.z = v.y;\n  }\n\n  /**\n   * Static methods\n   */\n  /**\n   * Iterpolates a provided anonymous value into a vew Vec3\n   *\n   * @param {Vec3|array|string|number} v The value to interpolate\n   * @returns {Vec3} out\n   */\n  static interpolate(v: any) {\n    if (v instanceof Vec3) {\n      return new Vec3(v.x, v.y, v.z);\n    } else if (v instanceof Array && v.length >= 3) {\n      return new Vec3(v[0], v[1], v[2]);\n    } else if (!isNaN(v)) {\n      return new Vec3(v, v, v);\n    } else if (typeof v === \"string\") {\n      const nv = v.split(\",\");\n      const x: number = Number(nv[0]);\n      const y: number = Number(nv[1]);\n      const z: number = Number(nv[2]);\n      if (nv.length >= 3 && !isNaN(x) && !isNaN(y) && !isNaN(z)) {\n        return new Vec3(x, y, z);\n      }\n    } else {\n      throw new Error(\"The passed interpolant could not be parsed into a Vec3\");\n    }\n  }\n\n  /**\n   * Performs a linear interpolation between two Vec3's\n   *\n   * @param {Vec3} v1 the first operand\n   * @param {Vec3} v2 the second operand\n   * @param {Number} d interpolation amount in the range of 0 - 1\n   * @returns {Vec3}\n   */\n  static lerp(v1: Vec3, v2: Vec3, d): Vec3 {\n    return new Vec3(\n      v1.x + d * (v2.x - v1.x),\n      v1.y + d * (v2.y - v1.y),\n      v1.z + d * (v2.z - v1.z)\n    );\n  }\n\n  static getAngle(a: Vec3, b: Vec3) {\n    const _a = a.xy,\n      _b = b.xy;\n\n    let len1 = _a.lengthSquared;\n    if (len1 > 0) {\n      //TODO: evaluate use of glm_invsqrt here?\n      len1 = 1 / Math.sqrt(len1);\n    }\n\n    let len2 = _b.lengthSquared;\n    if (len2 > 0) {\n      //TODO: evaluate use of glm_invsqrt here?\n      len2 = 1 / Math.sqrt(len2);\n    }\n\n    let cosine = (_a.x * _b.x + _a.y * _b.y) * len1 * len2;\n\n    if (cosine > 1.0) {\n      return 0;\n    } else if (cosine < -1.0) {\n      return Math.PI;\n    } else {\n      return Math.acos(cosine);\n    }\n  }\n\n  static fromRotationMatrix(m: any, order: String = \"YXZ\"): Vec3 | void {\n    if (m.array) m = m.array; // This just transforms the matrix to an array.\n    if (m instanceof Array && m.length >= 16) {\n      const v = new Vec3();\n      if (order === \"XYZ\") {\n        v.y = Math.asin(Math.min(Math.max(m[8], -1), 1));\n        if (Math.abs(m[8]) < 0.99999) {\n          v.x = Math.atan2(-m[9], m[10]);\n          v.z = Math.atan2(-m[4], m[0]);\n        } else {\n          v.x = Math.atan2(m[6], m[5]);\n          v.z = 0;\n        }\n      } else if (order === \"YXZ\") {\n        v.x = Math.asin(-Math.min(Math.max(m[9], -1), 1));\n        if (Math.abs(m[9]) < 0.99999) {\n          v.y = Math.atan2(m[8], m[10]);\n          v.z = Math.atan2(m[1], m[5]);\n        } else {\n          v.y = Math.atan2(-m[2], m[0]);\n          v.z = 0;\n        }\n      } else if (order === \"ZXY\") {\n        v.x = Math.asin(Math.min(Math.max(m[6], -1), 1));\n        if (Math.abs(m[6]) < 0.99999) {\n          v.y = Math.atan2(-m[2], m[10]);\n          v.z = Math.atan2(-m[4], m[5]);\n        } else {\n          v.y = 0;\n          v.z = Math.atan2(m[1], m[0]);\n        }\n      } else if (order === \"ZYX\") {\n        v.y = Math.asin(-Math.min(Math.max(m[2], -1), 1));\n        if (Math.abs(m[2]) < 0.99999) {\n          v.x = Math.atan2(m[6], m[10]);\n          v.z = Math.atan2(m[1], m[0]);\n        } else {\n          v.x = 0;\n          v.z = Math.atan2(-m[4], m[5]);\n        }\n      } else if (order === \"YZX\") {\n        v.z = Math.asin(Math.min(Math.max(m[1], -1), 1));\n        if (Math.abs(m[1]) < 0.99999) {\n          v.x = Math.atan2(-m[9], m[5]);\n          v.y = Math.atan2(-m[2], m[0]);\n        } else {\n          v.x = 0;\n          v.y = Math.atan2(m[8], m[10]);\n        }\n      } else if (order === \"XZY\") {\n        v.z = Math.asin(-Math.min(Math.max(m[4], -1), 1));\n        if (Math.abs(m[4]) < 0.99999) {\n          v.x = Math.atan2(m[6], m[5]);\n          v.y = Math.atan2(m[8], m[0]);\n        } else {\n          v.x = Math.atan2(-m[9], m[10]);\n          v.y = 0;\n        }\n      }\n      return v;\n    }\n  }\n}\n\nexport { Vec3 };\n","import { Vec2 } from \"./Vec2\";\nimport { Vec3 } from \"./Vec3\";\n\ninterface V4Q {\n  x: number;\n  y: number;\n  z: number;\n  w: number;\n  length: number;\n  lengthSquared: number;\n  width: number;\n  height: number;\n  depth: number;\n  area: number;\n  array: number[];\n  xyzw: any;\n  yzwx: any;\n  zwxy: any;\n  wxyz: any;\n  xyz: any;\n  yzx: any;\n  zxy: any;\n  xx: any;\n  xy: any;\n  xz: any;\n  xw: any;\n  yx: any;\n  yy: any;\n  yz: any;\n  yw: any;\n  zx: any;\n  zy: any;\n  zz: any;\n  zw: any;\n  wx: any;\n  wy: any;\n  wz: any;\n  ww: any;\n  reset(...args: number[]): V4Q;\n  resetToVector(v: V4Q): V4Q;\n  clone(): V4Q;\n  rotateX(origin: V4Q, rad: number): V4Q;\n  rotateXNew(origin: V4Q, rad: number): V4Q;\n  rotateY(origin: V4Q, rad: number): V4Q;\n  rotateYNew(origin: V4Q, rad: number): V4Q;\n  rotateZ(origin: V4Q, rad: number): V4Q;\n  rotateZNew(origin: V4Q, rad: number): V4Q;\n  add(vector: V4Q): V4Q;\n  addNew(vector: V4Q): V4Q;\n  addScalar(scalar: number): V4Q;\n  addScalarNew(scalar: number): V4Q;\n  subtract(vector: V4Q): V4Q;\n  subtractNew(vector: V4Q): V4Q;\n  subtractScalar(scalar: number): V4Q;\n  subtractScalarNew(scalar: number): V4Q;\n  divide(vector: V4Q): V4Q;\n  divideNew(vector: V4Q): V4Q;\n  divideScalar(scalar: number): V4Q;\n  divideScalarNew(scalar: number): V4Q;\n  multiply(q: V4Q): V4Q;\n  multiplyNew(q: V4Q): V4Q;\n  multiplyScalar(scalar: number): V4Q;\n  multiplyScalarNew(scalar: number): V4Q;\n  scale(scalar: number): V4Q;\n  scaleNew(scalar: number): V4Q;\n  transformByMat4(m: any): V4Q;\n  transformByMat4New(m: any): V4Q;\n  transformByQuat(q: any): V4Q;\n  transformByQuatNew(q: any): V4Q;\n  negate(): V4Q;\n  negateNew(): V4Q;\n  inverse(): V4Q;\n  inverseNew(): V4Q;\n  normalise(): V4Q;\n  normaliseNew(): V4Q;\n  distance(vector: V4Q): number;\n  distanceX(vector: V4Q): number;\n  distanceY(vector: V4Q): number;\n  distanceZ(vector: V4Q): number;\n  distanceW(vector: V4Q): number;\n  dot(vector: V4Q): number;\n  cross(v: V4Q, w: V4Q): V4Q;\n  crossNew(v: V4Q, w: V4Q): V4Q;\n  ceil(): V4Q;\n  ceilNew(): V4Q;\n  floor(): V4Q;\n  floorNew(): V4Q;\n  round(): V4Q;\n  roundNew(): V4Q;\n  fract(): V4Q;\n  fractNew(): V4Q;\n}\n\n/**\n * A basic 3D Vector class that provides simple algebraic functionality in the form\n * of 3D Vectors.\n *\n * We use Getters/setters for both principle properties (x & y) as well as virtual\n * properties (rotation, length etc.).\n *\n * @class Vec4\n * @author Liam Egan <liam@wethecollective.com>\n * @version 1.0.0\n * @created Jan 07, 2020\n */\nclass Vec4 implements V4Q {\n  /**\n   * The Vector Class constructor\n   *\n   * @constructor\n   * @param {number} x \t\t\t\tThe x coord\n   * @param {number} y \t\t\t\tThe y coord\n   */\n  constructor(...args: number[]) {\n    this.reset(...args);\n  }\n\n  /**\n   * Resets the vector coordinates\n   *\n   * @public\n   * @chainable\n   * @param {number} x \tThe x coord\n   * @param {number} y \tThe y coord\n   * @param {number} z \tThe z coord\n   * @param {number} w \tThe w coord\n   */\n  reset(...args: number[]): V4Q {\n    let [x, y, z, w] = args;\n    if (isNaN(x)) x = 0;\n    if (isNaN(y)) y = 0;\n    if (isNaN(z)) z = 0;\n    if (isNaN(w)) w = 0;\n    this.x = x;\n    this.y = y;\n    this.z = z;\n    this.w = w;\n    return this;\n  }\n\n  /**\n   * Resets the vector coordinates to another vector object\n   *\n   * @public\n   * @chainable\n   * @param {Vec4} v \t\t\t\tThe vector object to use to reset the coordinates\n   */\n  resetToVector(v: V4Q): V4Q {\n    if (v instanceof Vec4) {\n      this.x = v.x;\n      this.y = v.y;\n      this.z = v.z;\n      this.w = v.w;\n    }\n    return this;\n  }\n\n  /**\n   * Clones the vector\n   *\n   * @public\n   * @return {Vec4}\t\t\t\t\tThe cloned vector\n   */\n  clone(): V4Q {\n    return new Vec4(this.x, this.y, this.z, this.w);\n  }\n\n  /**\n   * Adds one vector to another.\n   *\n   * @public\n   * @chainable\n   * @param  {Vec4}  vector The vector to add to this one\n   * @return {Vec4}\t\t\t\t\tReturns itself, modified\n   */\n  add(vector: V4Q): V4Q {\n    this.x += vector.x;\n    this.y += vector.y;\n    this.z += vector.z;\n    this.w += vector.w;\n    return this;\n  }\n  /**\n   * Clones the vector and adds the vector to it instead\n   *\n   * @public\n   * @chainable\n   * @param  {Vec4}  vector The vector to add to this one\n   * @return {Vec4}\t\t\t\t\tReturns the clone of itself, modified\n   */\n  addNew(vector: V4Q): V4Q {\n    return this.clone().add(vector);\n  }\n\n  /**\n   * Adds a scalar to the vector, modifying both the x and y\n   *\n   * @public\n   * @chainable\n   * @param  {number}  scalar The scalar to add to the vector\n   * @return {Vec4}\t\t\t\t\tReturns itself, modified\n   */\n  addScalar(scalar: number): V4Q {\n    return this.add(new Vec4(scalar, scalar, scalar, scalar));\n  }\n  /**\n   * Clones the vector and adds the scalar to it instead\n   *\n   * @public\n   * @chainable\n   * @param  {number}  scalar The scalar to add to the vector\n   * @return {Vec4}\t\t\t\t\tReturns the clone of itself, modified\n   */\n  addScalarNew(scalar: number): V4Q {\n    return this.clone().addScalar(scalar);\n  }\n\n  /**\n   * Subtracts one vector from another.\n   *\n   * @public\n   * @chainable\n   * @param  {Vec4}  vector The vector to subtract from this one\n   * @return {Vec4}\t\t\t\t\tReturns itself, modified\n   */\n  subtract(vector: V4Q): V4Q {\n    this.x -= vector.x;\n    this.y -= vector.y;\n    this.z -= vector.z;\n    this.w -= vector.w;\n    return this;\n  }\n  /**\n   * Clones the vector and subtracts the vector from it instead\n   *\n   * @public\n   * @chainable\n   * @param  {Vec4}  vector The vector to subtract from this one\n   * @return {Vec4}\t\t\t\t\tReturns the clone of itself, modified\n   */\n  subtractNew(vector: V4Q): V4Q {\n    return this.clone().subtract(vector);\n  }\n\n  /**\n   * Subtracts a scalar from the vector, modifying both the x and y\n   *\n   * @public\n   * @chainable\n   * @param  {number}  scalar The scalar to subtract from the vector\n   * @return {Vec4}\t\t\t\t\tReturns itself, modified\n   */\n  subtractScalar(scalar: number): V4Q {\n    return this.subtract(new Vec4(scalar, scalar, scalar, scalar));\n  }\n  /**\n   * Clones the vector and subtracts the scalar from it instead\n   *\n   * @public\n   * @chainable\n   * @param  {number}  scalar The scalar to add to the vector\n   * @return {Vec4}\t\t\t\t\tReturns the clone of itself, modified\n   */\n  subtractScalarNew(scalar: number): V4Q {\n    return this.clone().subtractScalar(scalar);\n  }\n\n  /**\n   * Divides one vector by another.\n   *\n   * @public\n   * @chainable\n   * @param  {Vec4}  vector The vector to divide this by\n   * @return {Vec4}\t\t\t\t\tReturns itself, modified\n   */\n  divide(vector: V4Q): V4Q {\n    if (vector.x !== 0) {\n      this.x /= vector.x;\n    } else {\n      this.x = 0;\n    }\n    if (vector.y !== 0) {\n      this.y /= vector.y;\n    } else {\n      this.y = 0;\n    }\n    if (vector.z !== 0) {\n      this.z /= vector.z;\n    } else {\n      this.z = 0;\n    }\n    if (vector.w !== 0) {\n      this.w /= vector.w;\n    } else {\n      this.w = 0;\n    }\n    return this;\n  }\n  /**\n   * Clones the vector and divides it by the vector instead\n   *\n   * @public\n   * @chainable\n   * @param  {Vec4}  vector The vector to divide the clone by\n   * @return {Vec4}\t\t\t\t\tReturns the clone of itself, modified\n   */\n  divideNew(vector: V4Q): V4Q {\n    return this.clone().divide(vector);\n  }\n\n  /**\n   * Divides the vector by a scalar.\n   *\n   * @public\n   * @chainable\n   * @param  {number}  scalar The scalar to divide both x and y by\n   * @return {Vec4}\t\t\t\t\tReturns itself, modified\n   */\n  divideScalar(scalar: number): V4Q {\n    var v = new Vec4(scalar, scalar, scalar, scalar);\n    return this.divide(v);\n  }\n  /**\n   * Clones the vector and divides it by the provided scalar.\n   *\n   * @public\n   * @chainable\n   * @param  {number}  scalar The scalar to divide both x and y by\n   * @return {Vec4}\t\t\t\t\tReturns the clone of itself, modified\n   */\n  divideScalarNew(scalar: number): V4Q {\n    return this.clone().divideScalar(scalar);\n  }\n\n  /**\n   * Multiplies one vector by another.\n   *\n   * @public\n   * @chainable\n   * @param  {Vec4}  vector The vector to multiply this by\n   * @return {Vec4}\t\t\t\t\tReturns itself, modified\n   */\n  multiply(vector: V4Q): V4Q {\n    this.x *= vector.x;\n    this.y *= vector.y;\n    this.z *= vector.z;\n    this.w *= vector.w;\n    return this;\n  }\n  /**\n   * Clones the vector and multiplies it by the vector instead\n   *\n   * @public\n   * @chainable\n   * @param  {Vec4}  vector The vector to multiply the clone by\n   * @return {Vec4}\t\t\t\t\tReturns the clone of itself, modified\n   */\n  multiplyNew(q: V4Q): V4Q {\n    return this.clone().multiply(q);\n  }\n\n  /**\n   * Multiplies the vector by a scalar.\n   *\n   * @public\n   * @chainable\n   * @param  {number}  scalar The scalar to multiply both x and y by\n   * @return {Vec4}\t\t\t\t\tReturns itself, modified\n   */\n  multiplyScalar(scalar: number): V4Q {\n    var v: Vec4 = new Vec4(scalar, scalar, scalar, scalar);\n    return this.multiply(v);\n  }\n  /**\n   * Clones the vector and multiplies it by the provided scalar.\n   *\n   * @public\n   * @chainable\n   * @param  {number}  scalar The scalar to multiply both x and y by\n   * @return {Vec4}\t\t\t\t\tReturns the clone of itself, modified\n   */\n  multiplyScalarNew(scalar: number): V4Q {\n    return this.clone().multiplyScalar(scalar);\n  }\n\n  /**\n   * Alias of {@link Vector#multiplyScalar__anchor multiplyScalar}\n   */\n  scale(scalar: number): V4Q {\n    return this.multiplyScalar(scalar);\n  }\n  /**\n   * Alias of {@link Vector#multiplyScalarNew__anchor multiplyScalarNew}\n   */\n  scaleNew(scalar: number): V4Q {\n    return this.multiplyScalarNew(scalar);\n  }\n\n  rotateX(origin: V4Q, radian: number): V4Q {\n    const s = Math.sin(radian);\n    const c = Math.cos(radian);\n\n    // Translate to the origin\n    const translated = this.subtractNew(origin);\n\n    // Rotate\n    const rotated = translated.clone();\n    rotated.y = rotated.y * c - rotated.z * s;\n    rotated.z = rotated.y * s + rotated.z * c;\n\n    // Translate back\n    this.y = rotated.y + origin.y;\n    this.z = rotated.z + origin.z;\n\n    return this;\n  }\n\n  rotateXNew(origin: V4Q, radian: number): V4Q {\n    return this.clone().rotateX(origin, radian);\n  }\n\n  rotateY(origin: V4Q, radian: number): V4Q {\n    const s = Math.sin(radian);\n    const c = Math.cos(radian);\n\n    // Translate to the origin\n    const translated = this.subtractNew(origin);\n\n    // Rotate\n    const rotated = translated.clone();\n    rotated.x = rotated.z * s + rotated.z * c;\n    rotated.z = rotated.z * c - rotated.x * s;\n\n    // Translate back\n    this.x = rotated.x + origin.x;\n    this.z = rotated.z + origin.z;\n\n    return this;\n  }\n\n  rotateYNew(origin: V4Q, radian: number): V4Q {\n    return this.clone().rotateY(origin, radian);\n  }\n\n  rotateZ(origin: V4Q, radian: number): V4Q {\n    const s = Math.sin(radian);\n    const c = Math.cos(radian);\n\n    // Translate to the origin\n    const translated = this.subtractNew(origin);\n\n    // Rotate\n    const rotated = translated.clone();\n    rotated.x = rotated.x * c - rotated.y * s;\n    rotated.y = rotated.x * s + rotated.y * c;\n\n    // Translate back\n    this.x = rotated.x + origin.x;\n    this.y = rotated.y + origin.y;\n\n    return this;\n  }\n\n  rotateZNew(origin: V4Q, radian: number): V4Q {\n    return this.clone().rotateZ(origin, radian);\n  }\n\n  transformByMat4(m: any): V4Q {\n    if (m.array) m = m.array; // This just transforms the matrix to an array.\n    if (m instanceof Array && m.length >= 16) {\n      const o = this.clone();\n      this.x = (m[0] * o.x + m[4] * o.y + m[8] * o.z + m[12]) / this.w;\n      this.y = (m[1] * o.x + m[5] * o.y + m[9] * o.z + m[13]) / this.w;\n      this.z = (m[2] * o.x + m[6] * o.y + m[10] * o.z + m[14]) / this.w;\n      this.w = (m[3] * o.x + m[7] * o.y + m[11] * o.z + m[15]) / this.w;\n    }\n    return this;\n  }\n\n  transformByMat4New(m: any): V4Q {\n    return this.clone().transformByMat4(m);\n  }\n\n  transformByQuat(q: any): V4Q {\n    if (q.array) q = q.array; // This just transforms the quaternion to an array.\n    if (q instanceof Array && q.length >= 4) {\n      const uv = new Vec4(\n        q[3] * this.x + q[1] * this.z - q[2] * this.y,\n        q[3] * this.y + q[2] * this.x - q[0] * this.z,\n        q[3] * this.z + q[0] * this.y - q[1] * this.x,\n        -q[0] * this.x - q[1] * this.y - q[2] * this.z\n      );\n\n      this.x = uv.x * q[3] + uv.w * -q[0] + uv.y * -q[2] - uv.z * -q[1];\n      this.y = uv.y * q[3] + uv.w * -q[1] + uv.z * -q[0] - uv.x * -q[2];\n      this.z = uv.z * q[3] + uv.w * -q[2] + uv.x * -q[1] - uv.y * -q[0];\n    }\n    return this;\n  }\n\n  transformByQuatNew(q: any): V4Q {\n    return this.clone().transformByQuat(q);\n  }\n\n  /**\n   * Negates the vector.\n   *\n   * @public\n   * @chainable\n   * @return {Vec4}\t\t\t\t\tReturns itself, modified\n   */\n  negate(): V4Q {\n    return this.multiplyScalar(-1);\n  }\n\n  /**\n   * Clones the vector and negates it.\n   *\n   * @public\n   * @chainable\n   * @return {Vec4}\t\t\t\t\tReturns itself, modified\n   */\n  negateNew(): V4Q {\n    return this.multiplyScalarNew(-1);\n  }\n\n  /**\n   * Inverses the vector.\n   *\n   * @public\n   * @chainable\n   * @return {Vec4}\t\t\t\t\tReturns itself, modified\n   */\n  inverse(): V4Q {\n    this.x = 1 / this.x;\n    this.y = 1 / this.y;\n    this.z = 1 / this.z;\n    this.w = 1 / this.w;\n    return this;\n  }\n\n  /**\n   * Clones the vector and then inverses it.\n   *\n   * @public\n   * @chainable\n   * @return {Vec4}\t\t\t\t\tReturns itself, modified\n   */\n  inverseNew(): V4Q {\n    const c: V4Q = this.clone();\n    c.x = 1 / c.x;\n    c.y = 1 / c.y;\n    c.z = 1 / c.z;\n    c.w = 1 / c.w;\n    return c;\n  }\n\n  /**\n   * Normalises the vector down to a length of 1 unit\n   *\n   * @public\n   * @chainable\n   * @return {Vec4}\t\t\t\t\tReturns itself, modified\n   */\n  normalise(): V4Q {\n    const l: number = this.length;\n    if (l === 0) {\n      this.x = 0;\n      this.y = 0;\n      this.z = 0;\n      this.w = 1;\n    } else {\n      this.divideScalar(l);\n    }\n    return this;\n  }\n  /**\n   * Clones the vector and normalises it\n   *\n   * @public\n   * @chainable\n   * @return {Vec4}\t\t\t\t\tReturns a clone of itself, modified\n   */\n  normaliseNew(): V4Q {\n    return this.clone().normalise();\n  }\n\n  /**\n   * Calculates the distance between this and the supplied vector\n   *\n   * @param  {Vec4} vector The vector to calculate the distance from\n   * @return {number}        The distance between this and the supplied vector\n   */\n  distance(vector: V4Q): number {\n    return this.subtractNew(vector).length;\n  }\n\n  /**\n   * Calculates the distance on the X axis between this and the supplied vector\n   *\n   * @param  {Vec4} vector The vector to calculate the distance from\n   * @return {number}        The distance, along the x axis, between this and the supplied vector\n   */\n  distanceX(vector: V4Q): number {\n    return this.x - vector.x;\n  }\n\n  /**\n   * Calculated the distance on the Y axis between this and the supplied vector\n   *\n   * @param  {Vec4} vector The vector to calculate the distance from\n   * @return {number}        The distance, along the y axis, between this and the supplied vector\n   */\n  distanceY(vector: V4Q): number {\n    return this.y - vector.y;\n  }\n\n  /**\n   * Calculated the distance on the Z axis between this and the supplied vector\n   *\n   * @param  {Vec4} vector The vector to calculate the distance from\n   * @return {number}        The distance, along the y axis, between this and the supplied vector\n   */\n  distanceZ(vector: V4Q): number {\n    return this.z - vector.z;\n  }\n\n  /**\n   * Calculated the distance on the W axis between this and the supplied vector\n   *\n   * @param  {Vec4} vector The vector to calculate the distance from\n   * @return {number}        The distance, along the y axis, between this and the supplied vector\n   */\n  distanceW(vector: V4Q): number {\n    return this.w - vector.w;\n  }\n\n  /**\n   * Calculates the dot product between this and a supplied vector\n   *\n   * @example\n   * // returns -14\n   * new Vector(2, -3).dot(new Vector(-4, 2))\n   * new Vector(-4, 2).dot(new Vector(2, -3))\n   * new Vector(2, -4).dot(new Vector(-3, 2))\n   *\n   * @param  {Vec4} vector The vector object against which to calculate the dot product\n   * @return {number}        The dot product of the two vectors\n   */\n  dot(vector: V4Q): number {\n    return (\n      this.x * vector.x +\n      this.y * vector.y +\n      this.z * vector.z +\n      this.w * vector.w\n    );\n  }\n\n  /**\n   * Calculates the cross product between this and two other supplied vectors\n   *\n   * @example\n   * // returns -2\n   * new Vector(2, -3).cross(new Vector(-4, 2))\n   * new Vector(-4, 2).cross(new Vector(2, -3))\n   * // returns 2\n   * new Vector(2, -4).cross(new Vector(-3, 2))\n   *\n   * @param  {Vec4} vector The vector object against which to calculate the cross product\n   * @return {Vec4}        The cross product of the two vectors\n   */\n  cross(v: V4Q, w: V4Q): V4Q {\n    const u = this.clone();\n\n    const A = v[0] * w[1] - v[1] * w[0],\n      B = v[0] * w[2] - v[2] * w[0],\n      C = v[0] * w[3] - v[3] * w[0],\n      D = v[1] * w[2] - v[2] * w[1],\n      E = v[1] * w[3] - v[3] * w[1],\n      F = v[2] * w[3] - v[3] * w[2],\n      G = u[0],\n      H = u[1],\n      I = u[2],\n      J = u[3];\n\n    return new Vec4(\n      H * F - I * E + J * D,\n      -(G * F) + I * C - J * B,\n      G * E - H * C + J * A,\n      -(G * D) + H * B - I * A\n    );\n  }\n\n  crossNew(v: V4Q, w: V4Q): V4Q {\n    return this.clone().cross(v, w);\n  }\n\n  ceil(): V4Q {\n    this.x = Math.ceil(this.x);\n    this.y = Math.ceil(this.y);\n    this.z = Math.ceil(this.z);\n    this.w = Math.ceil(this.w);\n    return this;\n  }\n\n  ceilNew(): V4Q {\n    return this.clone().ceil();\n  }\n\n  floor(): V4Q {\n    this.x = Math.floor(this.x);\n    this.y = Math.floor(this.y);\n    this.z = Math.floor(this.z);\n    this.w = Math.floor(this.w);\n    return this;\n  }\n\n  floorNew(): V4Q {\n    return this.clone().floor();\n  }\n\n  round(): V4Q {\n    this.x = Math.round(this.x);\n    this.y = Math.round(this.y);\n    this.z = Math.round(this.z);\n    this.w = Math.round(this.w);\n    return this;\n  }\n\n  roundNew(): V4Q {\n    return this.clone().round();\n  }\n\n  fract(): V4Q {\n    this.x -= Math.floor(this.x);\n    this.y -= Math.floor(this.y);\n    this.z -= Math.floor(this.z);\n    this.w -= Math.floor(this.w);\n    return this;\n  }\n\n  fractNew(): V4Q {\n    return this.clone().fract();\n  }\n\n  /**\n   * Getters and setters\n   */\n\n  /**\n   * (getter/setter) The x value of the vector.\n   *\n   * @type {number}\n   * @default 0\n   */\n  private _x: number = 0;\n  set x(x) {\n    if (typeof x == \"number\") {\n      this._x = x;\n    } else {\n      throw new TypeError(\"X should be a number\");\n    }\n  }\n  get x() {\n    return this._x || 0;\n  }\n\n  /**\n   * (getter/setter) The y value of the vector.\n   *\n   * @type {number}\n   * @default 0\n   */\n  private _y: number = 0;\n  set y(y) {\n    if (typeof y == \"number\") {\n      this._y = y;\n    } else {\n      throw new TypeError(\"Y should be a number\");\n    }\n  }\n  get y() {\n    return this._y || 0;\n  }\n\n  /**\n   * (getter/setter) The y value of the vector.\n   *\n   * @type {number}\n   * @default 0\n   */\n  private _z: number = 0;\n  set z(z) {\n    if (typeof z == \"number\") {\n      this._z = z;\n    } else {\n      throw new TypeError(\"Y should be a number\");\n    }\n  }\n  get z() {\n    return this._z || 0;\n  }\n\n  /**\n   * (getter/setter) The y value of the vector.\n   *\n   * @type {number}\n   * @default 0\n   */\n  private _w: number = 0;\n  set w(w) {\n    if (typeof w == \"number\") {\n      this._w = w;\n    } else {\n      throw new TypeError(\"W should be a number\");\n    }\n  }\n  get w() {\n    return this._w || 0;\n  }\n\n  /**\n   * (getter/setter) The length of the vector presented as a square. If you're using\n   * length for comparison, this is quicker.\n   *\n   * @type {number}\n   * @default 0\n   */\n  set lengthSquared(length: number) {\n    var factor;\n    if (typeof length == \"number\") {\n      factor = length / this.lengthSquared;\n      this.multiplyScalar(factor);\n    } else {\n      throw new TypeError(\"length should be a number\");\n    }\n  }\n  get lengthSquared(): number {\n    return (\n      this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w\n    );\n  }\n\n  /**\n   * (getter/setter) The length of the vector\n   *\n   * @type {number}\n   * @default 0\n   */\n  set length(length: number) {\n    var factor;\n    if (typeof length == \"number\") {\n      factor = length / this.length;\n      this.multiplyScalar(factor);\n    } else {\n      throw new TypeError(\"length should be a number\");\n    }\n  }\n  get length(): number {\n    return Math.sqrt(this.lengthSquared);\n  }\n\n  /**\n   * (getter/setter) Vector width.\n   * Alias of {@link Vector#x x}\n   *\n   * @type {number}\n   */\n  set width(w: number) {\n    this.x = w;\n  }\n  get width(): number {\n    return this.x;\n  }\n\n  /**\n   * (getter/setter) Vector height.\n   * Alias of {@link Vector#x x}\n   *\n   * @type {number}\n   */\n  set height(h: number) {\n    this.y = h;\n  }\n  get height(): number {\n    return this.y;\n  }\n\n  /**\n   * (getter/setter) Vector height.\n   * Alias of {@link Vector#x x}\n   *\n   * @type {number}\n   */\n  set depth(h: number) {\n    this.z = h;\n  }\n  get depth(): number {\n    return this.z;\n  }\n\n  /**\n   * (getter) Vector area.\n   * @readonly\n   *\n   * @type {number}\n   */\n  get area(): number {\n    return this.x * this.y * this.z * this.w;\n  }\n\n  /**\n   * (getter) Returns the basic array representation of this vector.\n   * @readonly\n   *\n   * @type {number}\n   */\n  get array(): number[] {\n    return [this.x, this.y, this.z, this.w];\n  }\n\n  /**\n   * (getter/sette) Swizzle XYZW\n   *\n   * @type {Vec4}\n   */\n  get xyzw(): any {\n    return new Vec4(this.x, this.y, this.z, this.w);\n  }\n  set xyzw(v: any) {\n    if (v instanceof Vec4) {\n      this.resetToVector(v);\n    } else if (v instanceof Array && v.length >= 4) {\n      this.reset(v[0], v[1], v[2], v[3]);\n    } else {\n      throw new Error(\"input should be of type Vector\");\n    }\n  }\n\n  /**\n   * (getter/sette) Swizzle XYZW\n   *\n   * @type {Vec4}\n   */\n  get yzwx(): any {\n    return new Vec4(this.y, this.z, this.w, this.x);\n  }\n  set yzwx(v: any) {\n    this.xyzw = Vec4.interpolate(v).yzwx;\n  }\n\n  /**\n   * (getter/sette) Swizzle XYZW\n   *\n   * @type {Vec4}\n   */\n  get zwxy(): any {\n    return new Vec4(this.z, this.w, this.x, this.y);\n  }\n  set zwxy(v: any) {\n    this.xyzw = Vec4.interpolate(v).zwxy;\n  }\n\n  /**\n   * (getter/sette) Swizzle XYZW\n   *\n   * @type {Vec4}\n   */\n  get wxyz(): any {\n    return new Vec4(this.w, this.x, this.y, this.z);\n  }\n  set wxyz(v: any) {\n    this.xyzw = Vec4.interpolate(v).wxyz;\n  }\n\n  // I'm skipping all the silly combinations of 4 here because they're largely useless\n\n  /**\n   * (getter/sette) Swizzle YZX\n   *\n   * @type {Vec3}\n   */\n  get xyz(): any {\n    return new Vec3(this.x, this.y, this.z);\n  }\n  set xyz(v: any) {\n    v = Vec3.interpolate(v);\n    this.x = v.x;\n    this.y = v.y;\n    this.z = v.z;\n  }\n\n  /**\n   * (getter/sette) Swizzle YZX\n   *\n   * @type {Vec3}\n   */\n  get yzx(): any {\n    return new Vec3(this.y, this.z, this.x);\n  }\n  set yzx(v: any) {\n    v = Vec3.interpolate(v);\n    this.x = v.y;\n    this.y = v.z;\n    this.z = v.x;\n  }\n\n  /**\n   * (getter/sette) Swizzle ZXY\n   *\n   * @type {Vec3}\n   */\n  get zxy(): any {\n    return new Vec3(this.z, this.x, this.y);\n  }\n  set zxy(v: any) {\n    v = Vec3.interpolate(v);\n    this.x = v.z;\n    this.y = v.x;\n    this.z = v.y;\n  }\n\n  /**\n   * (getter/sette) Swizzle XX\n   *\n   * @type {number}\n   */\n  get xx(): any {\n    return new Vec2(this.x, this.x);\n  }\n  set xx(v: any) {\n    v = Vec2.interpolate(v);\n    this.x = v.y;\n  }\n\n  /**\n   * (getter/sette) Swizzle XY\n   *\n   * @type {Vec2}\n   */\n  get xy(): any {\n    return new Vec2(this.x, this.y);\n  }\n  set xy(v: any) {\n    v = Vec2.interpolate(v);\n    this.x = v.x;\n    this.y = v.y;\n  }\n\n  /**\n   * (getter/sette) Swizzle XY\n   *\n   * @type {Vec2}\n   */\n  get xz(): any {\n    return new Vec2(this.x, this.z);\n  }\n  set xz(v: any) {\n    v = Vec2.interpolate(v);\n    this.x = v.x;\n    this.z = v.y;\n  }\n\n  /**\n   * (getter/sette) Swizzle XY\n   *\n   * @type {Vec2}\n   */\n  get xw(): any {\n    return new Vec2(this.x, this.w);\n  }\n  set xw(v: any) {\n    v = Vec2.interpolate(v);\n    this.x = v.x;\n    this.z = v.y;\n  }\n\n  /**\n   * (getter/sette) Swizzle YX\n   *\n   * @type {number}\n   */\n  get yx(): any {\n    return new Vec2(this.y, this.x);\n  }\n  set yx(v: any) {\n    v = Vec2.interpolate(v);\n    this.x = v.y;\n    this.y = v.x;\n  }\n\n  /**\n   * (getter/sette) Swizzle YY\n   *\n   * @type {number}\n   */\n  get yy(): any {\n    return new Vec2(this.y, this.y);\n  }\n  set yy(v: any) {\n    v = Vec2.interpolate(v);\n    this.y = v.y;\n  }\n\n  /**\n   * (getter/sette) Swizzle YZ\n   *\n   * @type {Vec2}\n   */\n  get yz(): any {\n    return new Vec2(this.y, this.z);\n  }\n  set yz(v: any) {\n    v = Vec2.interpolate(v);\n    this.y = v.x;\n    this.z = v.y;\n  }\n\n  /**\n   * (getter/sette) Swizzle YZ\n   *\n   * @type {Vec2}\n   */\n  get yw(): any {\n    return new Vec2(this.y, this.w);\n  }\n  set yw(v: any) {\n    v = Vec2.interpolate(v);\n    this.y = v.x;\n    this.w = v.y;\n  }\n\n  /**\n   * (getter/sette) Swizzle zx\n   *\n   * @type {Vec2}\n   */\n  get zx(): any {\n    return new Vec2(this.z, this.x);\n  }\n  set zx(v: any) {\n    v = Vec2.interpolate(v);\n    this.z = v.x;\n    this.x = v.y;\n  }\n\n  /**\n   * (getter/sette) Swizzle ZY\n   *\n   * @type {number}\n   */\n  get zy(): any {\n    return new Vec2(this.z, this.y);\n  }\n  set zy(v: any) {\n    v = Vec2.interpolate(v);\n    this.z = v.y;\n    this.y = v.x;\n  }\n\n  /**\n   * (getter/sette) Swizzle ZZ\n   *\n   * @type {number}\n   */\n  get zz(): any {\n    return new Vec2(this.z, this.z);\n  }\n  set zz(v: any) {\n    v = Vec2.interpolate(v);\n    this.z = v.y;\n  }\n\n  /**\n   * (getter/sette) Swizzle XY\n   *\n   * @type {Vec2}\n   */\n  get zw(): any {\n    return new Vec2(this.z, this.w);\n  }\n  set zw(v: any) {\n    v = Vec2.interpolate(v);\n    this.z = v.x;\n    this.w = v.y;\n  }\n\n  /**\n   * (getter/sette) Swizzle wx\n   *\n   * @type {Vec2}\n   */\n  get wx(): any {\n    return new Vec2(this.w, this.x);\n  }\n  set wx(v: any) {\n    v = Vec2.interpolate(v);\n    this.w = v.x;\n    this.x = v.y;\n  }\n\n  /**\n   * (getter/sette) Swizzle WY\n   *\n   * @type {number}\n   */\n  get wy(): any {\n    return new Vec2(this.w, this.y);\n  }\n  set wy(v: any) {\n    v = Vec2.interpolate(v);\n    this.w = v.x;\n    this.y = v.y;\n  }\n\n  /**\n   * (getter/sette) Swizzle WZ\n   *\n   * @type {number}\n   */\n  get wz(): any {\n    return new Vec2(this.w, this.z);\n  }\n  set wz(v: any) {\n    v = Vec2.interpolate(v);\n    this.w = v.x;\n    this.z = v.y;\n  }\n\n  /**\n   * (getter/sette) Swizzle WW\n   *\n   * @type {Vec2}\n   */\n  get ww(): any {\n    return new Vec2(this.w, this.w);\n  }\n  set ww(v: any) {\n    v = Vec2.interpolate(v);\n    this.w = v.y;\n  }\n\n  /**\n   * Static methods\n   */\n\n  /**\n   * Iterpolates a provided anonymous value into a vew Vec4\n   *\n   * @param {Vec4|array|string|number} v The value to interpolate\n   * @returns {Vec4} out\n   */\n  static interpolate(v) {\n    if (v instanceof Vec4) {\n      return new Vec4(v.x, v.y, v.z, v.w);\n    } else if (v instanceof Array && v.length >= 4) {\n      return new Vec4(v[0], v[1], v[2], v[3]);\n    } else if (!isNaN(v)) {\n      return new Vec4(v, v, v, v);\n    } else if (typeof v === \"string\") {\n      const nv = v.split(\",\");\n      const x: number = Number(nv[0]);\n      const y: number = Number(nv[1]);\n      const z: number = Number(nv[2]);\n      const w: number = Number(nv[3]);\n      if (nv.length >= 3 && !isNaN(x) && !isNaN(y) && !isNaN(z) && !isNaN(w)) {\n        return new Vec4(x, y, z, w);\n      }\n    } else {\n      throw new Error(\"The passed interpolant could not be parsed into a Vec4\");\n    }\n  }\n\n  /**\n   * Performs a linear interpolation between two Vec4's\n   *\n   * @param {Vec4} v1 the first operand\n   * @param {Vec4} v2 the second operand\n   * @param {Number} d interpolation amount in the range of 0 - 1\n   * @returns {Vec4}\n   */\n  static lerp(v1, v2, d) {\n    return new Vec4(\n      v1.x + d * (v2.x - v1.x),\n      v1.y + d * (v2.y - v1.y),\n      v1.z + d * (v2.z - v1.z),\n      v1.w + d * (v2.w - v1.w)\n    );\n  }\n\n  static getAngle(a, b) {\n    let dotproduct = a.dot(b);\n\n    return Math.acos(2 * dotproduct * dotproduct - 1);\n  }\n}\n\nexport { Vec4, V4Q };\n","const identity = [1, 0, 0, 1];\n\nconst identToIndex = function (v: string): number {\n  return [\"a11\", \"a12\", \"a21\", \"a22\"].indexOf(v);\n};\n\nconst orDefault = function (v: any, ident: string): number {\n  return isNaN(v) ? identity[identToIndex(ident)] : Number(v);\n};\n\nclass Mat2 {\n  constructor(...args: number[]) {\n    const [a11, a12, a21, a22] = args;\n    this.reset(a11, a12, a21, a22);\n  }\n\n  reset(a11: number, a12: number, a21: number, a22: number): Mat2 {\n    this.a11 = orDefault(a11, \"a11\");\n    this.a12 = orDefault(a12, \"a12\");\n    this.a21 = orDefault(a21, \"a21\");\n    this.a22 = orDefault(a22, \"a22\");\n    return this;\n  }\n\n  resetToMat2(m: Mat2): Mat2 {\n    this.a11 = m.a11;\n    this.a12 = m.a12;\n    this.a21 = m.a21;\n    this.a22 = m.a22;\n    return this;\n  }\n\n  clone(): Mat2 {\n    return new Mat2(this.a11, this.a12, this.a21, this.a22);\n  }\n\n  transpose(): Mat2 {\n    const a12 = this.a12;\n    this.a12 = this.a21;\n    this.a21 = a12;\n    return this;\n  }\n\n  transposeNew(): Mat2 {\n    return this.clone().transpose();\n  }\n\n  add(m: Mat2): Mat2 {\n    this.a11 += m.a11;\n    this.a12 += m.a12;\n    this.a21 += m.a21;\n    this.a22 += m.a22;\n    return this;\n  }\n\n  addNew(m: Mat2): Mat2 {\n    return this.clone().add(m);\n  }\n\n  // @TODO: We might want to generalise this and allow any sort of matrix on these operations\n\n  subtract(m: Mat2): Mat2 {\n    this.a11 -= m.a11;\n    this.a12 -= m.a12;\n    this.a21 -= m.a21;\n    this.a22 -= m.a22;\n    return this;\n  }\n\n  subtractNew(m: Mat2): Mat2 {\n    return this.clone().subtract(m);\n  }\n\n  multiply(m: Mat2): Mat2 {\n    const o = this.clone();\n    this.a11 = o.a11 * m.a11 + o.a21 * m.a12;\n    this.a12 = o.a12 * m.a11 + o.a22 * m.a12;\n    this.a21 = o.a11 * m.a21 + o.a21 * m.a22;\n    this.a22 = o.a12 * m.a21 + o.a22 * m.a22;\n    return this;\n  }\n\n  multiplyNew(m: Mat2): Mat2 {\n    return this.clone().multiply(m);\n  }\n\n  multiplyScalar(s: number): Mat2 {\n    this.a11 *= s;\n    this.a12 *= s;\n    this.a21 *= s;\n    this.a22 *= s;\n    return this;\n  }\n\n  multiplyScalarNew(s: number): Mat2 {\n    return this.clone().multiplyScalar(s);\n  }\n\n  scale(s: number): Mat2 {\n    return this.multiplyScalar(s);\n  }\n\n  scaleNew(s: number): Mat2 {\n    return this.multiplyScalarNew(s);\n  }\n\n  scaleByVec2(v: any): Mat2 {\n    if (v.array) v = v.array; // This just transforms a provided vector into to an array.\n\n    if (v instanceof Array) {\n      this.a11 *= v[0];\n      this.a12 *= v[0];\n      this.a21 *= v[1];\n      this.a22 *= v[1];\n    }\n\n    return this;\n  }\n\n  scaleByVec2New(v: any): Mat2 {\n    return this.clone().scaleByVec2(v);\n  }\n\n  rotate(r: number): Mat2 {\n    const o = this.clone();\n    const s = Math.sin(r);\n    const c = Math.cos(r);\n    this.a11 = o.a11 * c + o.a21 * s;\n    this.a12 = o.a12 * c + o.a22 * s;\n    this.a21 = o.a11 * -s + o.a21 * c;\n    this.a22 = o.a12 * -s + o.a22 * c;\n    return this;\n  }\n\n  rotateNew(r: number): Mat2 {\n    return this.clone().rotate(r);\n  }\n\n  invert(): Mat2 {\n    const c = this.clone();\n\n    let det = this.determinant;\n\n    // If we don't have a determinant this function should fail silently and just return the unmodified array\n    if (det) {\n      det = 1 / det;\n\n      this.a11 = c.a22 * det;\n      this.a12 = -c.a12 * det;\n      this.a21 = -c.a21 * det;\n      this.a22 = c.a11 * det;\n    }\n\n    return this;\n  }\n\n  invertNew(): Mat2 {\n    return this.clone().invert();\n  }\n\n  /**\n   * Calculates the adjugate of a mat2\n   *\n   * @returns {mat2} out\n   */\n  adjoint(): Mat2 {\n    const a11 = this.a11;\n    this.a11 = this.a22;\n    this.a12 = -this.a12;\n    this.a21 = -this.a21;\n    this.a22 = a11;\n\n    return this;\n  }\n\n  adjointNew(): Mat2 {\n    return this.clone().adjoint();\n  }\n\n  toString(): string {\n    return `\n      ${this.a11}, ${this.a12},\n      ${this.a21}, ${this.a22}\n    `;\n  }\n\n  /**\n   * Getters and setters\n   */\n\n  /**\n   * (getter/setter) The a11 value of the matrix.\n   *\n   * @type {number}\n   * @default 0\n   */\n  #a11: number = 0;\n  set a11(v) {\n    if (typeof v == \"number\") {\n      this.#a11 = v;\n    } else {\n      throw new TypeError(\"a11 should be a number\");\n    }\n  }\n  get a11() {\n    return this.#a11 || 0;\n  }\n\n  /**\n   * (getter/setter) The a12 value of the matrix.\n   *\n   * @type {number}\n   * @default 0\n   */\n  #a12: number = 0;\n  set a12(v) {\n    if (typeof v == \"number\") {\n      this.#a12 = v;\n    } else {\n      throw new TypeError(\"a12 should be a number\");\n    }\n  }\n  get a12() {\n    return this.#a12 || 0;\n  }\n\n  /**\n   * (getter/setter) The a21 value of the matrix.\n   *\n   * @type {number}\n   * @default 0\n   */\n  #a21: number = 0;\n  set a21(v) {\n    if (typeof v == \"number\") {\n      this.#a21 = v;\n    } else {\n      throw new TypeError(\"a21 should be a number\");\n    }\n  }\n  get a21() {\n    return this.#a21 || 0;\n  }\n\n  /**\n   * (getter/setter) The a22 value of the matrix.\n   *\n   * @type {number}\n   * @default 0\n   */\n  #a22: number = 0;\n  set a22(v) {\n    if (typeof v == \"number\") {\n      this.#a22 = v;\n    } else {\n      throw new TypeError(\"a22 should be a number\");\n    }\n  }\n  get a22() {\n    return this.#a22 || 0;\n  }\n\n  get determinant(): number {\n    return this.a11 * this.a21 - this.a21 * this.a12;\n  }\n\n  /**\n   * (getter) Returns the basic array representation of this matrix.\n   * @readonly\n   *\n   * @type {array}\n   */\n  get array(): number[] {\n    return [this.a11, this.a12, this.a21, this.a22];\n  }\n\n  /**\n   * (getter) Returns the basic array representation of this matrix.\n   * this returns the array in column-major form.\n   * @readonly\n   *\n   * @type {array}\n   */\n  get columnArray(): number[] {\n    return [this.a11, this.a21, this.a12, this.a22];\n  }\n\n  static fromAngle(r: number): Mat2 {\n    let s = Math.sin(r);\n    let c = Math.cos(r);\n\n    return new Mat2(c, -s, s, c);\n  }\n\n  static fromScalingVec2(v: any): Mat2 {\n    if (v.array) v = v.array; // This just transforms a provided vector into to an array.\n\n    if (v instanceof Array) {\n      return new Mat2(v[0], 0, 0, v[1]);\n    }\n    return Mat2.identity();\n  }\n\n  static identity(): Mat2 {\n    return new Mat2(...identity);\n  }\n}\n\nexport { Mat2 };\n","const identity = [1, 0, 0, 0, 1, 0, 0, 0, 1];\n\n/** TO DO\n * Move these functions to a types file\n */\ntype Mat3DeterminantFunction = {\n  f: {\n    b01: number;\n    b11: number;\n    b21: number;\n  };\n  determinant: number;\n};\ntype Mat4DeterminantFunction = {\n  f: {\n    b00: number;\n    b01: number;\n    b02: number;\n    b03: number;\n    b04: number;\n    b05: number;\n    b06: number;\n    b07: number;\n    b08: number;\n    b09: number;\n    b10: number;\n    b11: number;\n  };\n  determinant: number;\n};\ninterface Mat4 {\n  a11: number;\n  a12: number;\n  a13: number;\n  a14: number;\n\n  a21: number;\n  a22: number;\n  a23: number;\n  a24: number;\n\n  a31: number;\n  a32: number;\n  a33: number;\n  a34: number;\n\n  a41: number;\n  a42: number;\n  a43: number;\n  a44: number;\n\n  determinantFunction: Mat4DeterminantFunction;\n}\n\nconst identToIndex = function (v: string): number {\n  return [\n    \"a11\",\n    \"a12\",\n    \"a13\",\n    \"a21\",\n    \"a22\",\n    \"a23\",\n    \"a31\",\n    \"a32\",\n    \"a33\",\n  ].indexOf(v);\n};\n\nconst orDefault = function (v: any, ident: string): number {\n  return isNaN(v) ? identity[identToIndex(ident)] : Number(v);\n};\n\nclass Mat3 {\n  constructor(...args: number[]) {\n    this.reset(...args);\n  }\n\n  reset(...args: number[]): Mat3 {\n    const [a11, a12, a13, a21, a22, a23, a31, a32, a33] = args;\n    this.a11 = orDefault(a11, \"a11\");\n    this.a12 = orDefault(a12, \"a12\");\n    this.a13 = orDefault(a13, \"a13\");\n\n    this.a21 = orDefault(a21, \"a21\");\n    this.a22 = orDefault(a22, \"a22\");\n    this.a23 = orDefault(a23, \"a23\");\n\n    this.a31 = orDefault(a31, \"a31\");\n    this.a32 = orDefault(a32, \"a32\");\n    this.a33 = orDefault(a33, \"a33\");\n    return this;\n  }\n\n  resetToMat3(m: Mat3): Mat3 {\n    this.a11 = m.a11;\n    this.a12 = m.a12;\n    this.a13 = m.a13;\n    this.a21 = m.a21;\n    this.a22 = m.a22;\n    this.a23 = m.a23;\n    this.a31 = m.a31;\n    this.a32 = m.a32;\n    this.a33 = m.a33;\n    return this;\n  }\n\n  clone(): Mat3 {\n    return new Mat3(\n      this.a11,\n      this.a12,\n      this.a13,\n      this.a21,\n      this.a22,\n      this.a23,\n      this.a31,\n      this.a32,\n      this.a33\n    );\n  }\n\n  transpose(): Mat3 {\n    const a12 = this.a12,\n      a13 = this.a13,\n      a23 = this.a23;\n\n    this.a12 = this.a21;\n    this.a13 = this.a31;\n    this.a21 = a12;\n    this.a23 = this.a32;\n    this.a31 = a13;\n    this.a32 = a23;\n\n    return this;\n  }\n\n  transposeNew(): Mat3 {\n    return this.clone().transpose();\n  }\n\n  adjoint(): Mat3 {\n    const o = this.clone();\n\n    this.a11 = o.a22 * o.a33 - o.a23 * o.a32;\n    this.a12 = o.a13 * o.a32 - o.a12 * o.a33;\n    this.a13 = o.a12 * o.a23 - o.a13 * o.a22;\n\n    this.a21 = o.a23 * o.a31 - o.a21 * o.a33;\n    this.a22 = o.a11 * o.a33 - o.a13 * o.a31;\n    this.a23 = o.a13 * o.a21 - o.a11 * o.a23;\n\n    this.a31 = o.a21 * o.a32 - o.a22 * o.a31;\n    this.a32 = o.a12 * o.a31 - o.a11 * o.a32;\n    this.a33 = o.a11 * o.a22 - o.a12 * o.a21;\n\n    return this;\n  }\n\n  adjointNew(): Mat3 {\n    return this.clone().adjoint();\n  }\n\n  add(m: Mat3): Mat3 {\n    this.a11 += m.a11;\n    this.a12 += m.a12;\n    this.a13 += m.a13;\n    this.a21 += m.a21;\n    this.a22 += m.a22;\n    this.a23 += m.a23;\n    this.a31 += m.a31;\n    this.a32 += m.a32;\n    this.a33 += m.a33;\n    return this;\n  }\n\n  addNew(m: Mat3): Mat3 {\n    return this.clone().add(m);\n  }\n\n  // @TODO: We might want to generalise this and allow any sort of matrix on these operations\n\n  subtract(m: Mat3): Mat3 {\n    this.a11 -= m.a11;\n    this.a12 -= m.a12;\n    this.a13 -= m.a13;\n    this.a21 -= m.a21;\n    this.a22 -= m.a22;\n    this.a23 -= m.a23;\n    this.a31 -= m.a31;\n    this.a32 -= m.a32;\n    this.a33 -= m.a33;\n    return this;\n  }\n\n  subtractNew(m: Mat3): Mat3 {\n    return this.clone().subtract(m);\n  }\n\n  multiply(m: Mat3): Mat3 {\n    const o = this.clone();\n    this.a11 = m.a11 * o.a11 + m.a12 * o.a21 + m.a13 * o.a31;\n    this.a12 = m.a11 * o.a12 + m.a12 * o.a22 + m.a13 * o.a32;\n    this.a13 = m.a11 * o.a13 + m.a12 * o.a23 + m.a13 * o.a33;\n\n    this.a21 = m.a21 * o.a11 + m.a22 * o.a21 + m.a23 * o.a31;\n    this.a22 = m.a21 * o.a12 + m.a22 * o.a22 + m.a23 * o.a32;\n    this.a23 = m.a21 * o.a13 + m.a22 * o.a23 + m.a23 * o.a33;\n\n    this.a31 = m.a31 * o.a11 + m.a32 * o.a21 + m.a33 * o.a31;\n    this.a32 = m.a31 * o.a12 + m.a32 * o.a22 + m.a33 * o.a32;\n    this.a33 = m.a31 * o.a13 + m.a32 * o.a23 + m.a33 * o.a33;\n    return this;\n  }\n\n  multiplyNew(m: Mat3): Mat3 {\n    return this.clone().multiply(m);\n  }\n\n  multiplyScalar(s: number): Mat3 {\n    this.a11 *= s;\n    this.a12 *= s;\n    this.a13 *= s;\n    this.a21 *= s;\n    this.a22 *= s;\n    this.a23 *= s;\n    this.a31 *= s;\n    this.a32 *= s;\n    this.a33 *= s;\n    return this;\n  }\n\n  multiplyScalarNew(s: number): Mat3 {\n    return this.clone().multiplyScalar(s);\n  }\n\n  scale(s: number): Mat3 {\n    return this.multiplyScalar(s);\n  }\n\n  scaleNew(s: number): Mat3 {\n    return this.multiplyScalarNew(s);\n  }\n\n  scaleByVec2(v: any): Mat3 {\n    if (v.array) v = v.array;\n\n    this.a11 *= v[0];\n    this.a12 *= v[0];\n    this.a13 *= v[0];\n\n    this.a21 *= v[1];\n    this.a22 *= v[1];\n    this.a23 *= v[1];\n\n    return this;\n  }\n\n  scaleByVec2New(v: any): Mat3 {\n    return this.clone().scaleByVec2(v);\n  }\n\n  rotate(r: number): Mat3 {\n    const o = this.clone();\n    const s = Math.sin(r);\n    const c = Math.cos(r);\n\n    this.a11 = o.a11 * c + o.a21 * s;\n    this.a12 = o.a12 * c + o.a22 * s;\n    this.a13 = o.a13 * c + o.a23 * s;\n\n    this.a21 = o.a21 * c - o.a11 * s;\n    this.a22 = o.a22 * c - o.a12 * s;\n    this.a23 = o.a23 * c - o.a13 * s;\n\n    return this;\n  }\n\n  rotateNew(r: number): Mat3 {\n    return this.clone().rotate(r);\n  }\n\n  invert(): Mat3 {\n    const o = this.clone();\n\n    const {\n      f: { b01, b11, b21 },\n      determinant,\n    } = this.determinantFunction;\n\n    // If we don't have a determinant this function should fail silently and just return the unmodified array\n    if (determinant) {\n      const det = 1 / determinant;\n\n      this.a11 = b01 * det;\n      this.a12 = (-o.a33 * o.a12 + o.a13 * o.a32) * det;\n      this.a13 = (o.a23 * o.a12 - o.a13 * o.a22) * det;\n\n      this.a21 = b11 * det;\n      this.a22 = (o.a33 * o.a11 - o.a13 * o.a31) * det;\n      this.a23 = (-o.a23 * o.a11 + o.a13 * o.a21) * det;\n\n      this.a31 = b21 * det;\n      this.a32 = (-o.a32 * o.a11 + o.a12 * o.a31) * det;\n      this.a33 = (o.a22 * o.a11 - o.a12 * o.a21) * det;\n    }\n\n    return this;\n  }\n\n  invertNew(): Mat3 {\n    return this.clone().invert();\n  }\n\n  toString(): string {\n    return `\n      ${this.a11}, ${this.a12}, ${this.a13},\n      ${this.a21}, ${this.a22}, ${this.a23},\n      ${this.a31}, ${this.a32}, ${this.a33}\n    `;\n  }\n\n  /**\n   * Getters and setters\n   */\n\n  /**\n   * (getter/setter) The a11 value of the matrix.\n   *\n   * @type {number}\n   * @default 0\n   */\n  #a11: number = 0;\n  set a11(v) {\n    if (typeof v == \"number\") {\n      this.#a11 = v;\n    } else {\n      throw new TypeError(\"a11 should be a number\");\n    }\n  }\n  get a11() {\n    return this.#a11 || 0;\n  }\n\n  /**\n   * (getter/setter) The a12 value of the matrix.\n   *\n   * @type {number}\n   * @default 0\n   */\n  #a12: number = 0;\n  set a12(v) {\n    if (typeof v == \"number\") {\n      this.#a12 = v;\n    } else {\n      throw new TypeError(\"a12 should be a number\");\n    }\n  }\n  get a12() {\n    return this.#a12 || 0;\n  }\n\n  /**\n   * (getter/setter) The a13 value of the matrix.\n   *\n   * @type {number}\n   * @default 0\n   */\n  #a13: number = 0;\n  set a13(v) {\n    if (typeof v == \"number\") {\n      this.#a13 = v;\n    } else {\n      throw new TypeError(\"a13 should be a number\");\n    }\n  }\n  get a13() {\n    return this.#a13 || 0;\n  }\n\n  /**\n   * (getter/setter) The a21 value of the matrix.\n   *\n   * @type {number}\n   * @default 0\n   */\n  #a21: number = 0;\n  set a21(v) {\n    if (typeof v == \"number\") {\n      this.#a21 = v;\n    } else {\n      throw new TypeError(\"a21 should be a number\");\n    }\n  }\n  get a21() {\n    return this.#a21 || 0;\n  }\n\n  /**\n   * (getter/setter) The a22 value of the matrix.\n   *\n   * @type {number}\n   * @default 0\n   */\n  #a22: number = 0;\n  set a22(v) {\n    if (typeof v == \"number\") {\n      this.#a22 = v;\n    } else {\n      throw new TypeError(\"a22 should be a number\");\n    }\n  }\n  get a22() {\n    return this.#a22 || 0;\n  }\n\n  /**\n   * (getter/setter) The a23 value of the matrix.\n   *\n   * @type {number}\n   * @default 0\n   */\n  #a23: number = 0;\n  set a23(v) {\n    if (typeof v == \"number\") {\n      this.#a23 = v;\n    } else {\n      throw new TypeError(\"a23 should be a number\");\n    }\n  }\n  get a23() {\n    return this.#a23 || 0;\n  }\n\n  /**\n   * (getter/setter) The a31 value of the matrix.\n   *\n   * @type {number}\n   * @default 0\n   */\n  #a31: number = 0;\n  set a31(v) {\n    if (typeof v == \"number\") {\n      this.#a31 = v;\n    } else {\n      throw new TypeError(\"a31 should be a number\");\n    }\n  }\n  get a31() {\n    return this.#a31 || 0;\n  }\n\n  /**\n   * (getter/setter) The a32 value of the matrix.\n   *\n   * @type {number}\n   * @default 0\n   */\n  #a32: number = 0;\n  set a32(v) {\n    if (typeof v == \"number\") {\n      this.#a32 = v;\n    } else {\n      throw new TypeError(\"a32 should be a number\");\n    }\n  }\n  get a32() {\n    return this.#a32 || 0;\n  }\n\n  /**\n   * (getter/setter) The a33 value of the matrix.\n   *\n   * @type {number}\n   * @default 0\n   */\n  #a33: number = 0;\n  set a33(v) {\n    if (typeof v == \"number\") {\n      this.#a33 = v;\n    } else {\n      throw new TypeError(\"a33 should be a number\");\n    }\n  }\n  get a33() {\n    return this.#a33 || 0;\n  }\n\n  get frobeniusnorm(): number {\n    return Math.hypot(...this.array);\n  }\n\n  /**\n   * (getter) Returns the basic array representation of this matrix.\n   * @readonly\n   *\n   * @type {array}\n   */\n  get array(): number[] {\n    return [\n      this.a11,\n      this.a12,\n      this.a13,\n      this.a21,\n      this.a22,\n      this.a23,\n      this.a31,\n      this.a32,\n      this.a33,\n    ];\n  }\n\n  /**\n   * (getter) Returns the basic array representation of this matrix.\n   * this returns the array in column-major form.\n   * @readonly\n   *\n   * @type {array}\n   */\n  get columnArray(): number[] {\n    return [\n      this.a11,\n      this.a21,\n      this.a31,\n      this.a12,\n      this.a22,\n      this.a32,\n      this.a13,\n      this.a23,\n      this.a33,\n    ];\n  }\n\n  get determinantFunction(): Mat3DeterminantFunction {\n    let b01 = this.a33 * this.a22 - this.a23 * this.a32;\n    let b11 = -this.a33 * this.a21 + this.a23 * this.a31;\n    let b21 = this.a32 * this.a21 - this.a22 * this.a31;\n    // Calculate the determinant\n    return {\n      f: { b01, b11, b21 },\n      determinant: this.a11 * b01 + this.a12 * b11 + this.a13 * b21,\n    };\n  }\n\n  /**\n   * Calculates the determinant of the mat3\n   *\n   * @returns {Number} determinant of a\n   */\n  get determinant(): number {\n    return this.determinantFunction.determinant;\n  }\n\n  static fromAngle(r: number): Mat3 {\n    let s = Math.sin(r);\n    let c = Math.cos(r);\n\n    return new Mat3(c, -s, 0, s, c, 0, 0, 0, 0);\n  }\n\n  static fromScalingVec2(v: any): Mat3 {\n    if (v.array) v = v.array; // This just transforms a provided vector into to an array.\n\n    if (v instanceof Array) {\n      return new Mat3(v[0], 0, 0, 0, v[1], 0, 0, 0, 1);\n    }\n    return Mat3.identity();\n  }\n\n  static fromQuat(q: any): Mat3 {\n    if (q.array) q = q.array; // This just transforms a provided vector into to an array.\n\n    if (q instanceof Array && q.length >= 4) {\n      const [x, y, z, w] = q;\n      const [x2, y2, z2] = q.map((x) => x * 2);\n\n      const xx = x * x2,\n        yx = y * x2,\n        yy = y * y2,\n        zx = z * x2,\n        zy = z * y2,\n        zz = z * z2,\n        wx = w * x2,\n        wy = w * y2,\n        wz = w * z2;\n\n      return new Mat3(\n        1 - yy - zz,\n        yx - wz,\n        zx + wy,\n        yx + wz,\n        1 - xx - zz,\n        zy - wx,\n        zx - wy,\n        zy + wx,\n        1 - xx - yy\n      );\n    }\n  }\n\n  /**\n   * Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix\n   *\n   * @param {mat4} a Mat4 to derive the normal matrix from\n   *\n   * @returns {mat3}\n   */\n  static fromMat4(a: Mat4): Mat3 {\n    const {\n      f: { b00, b01, b02, b03, b04, b05, b06, b07, b08, b09, b10, b11 },\n      determinant,\n    } = a.determinantFunction;\n\n    if (!determinant) {\n      return null;\n    }\n    const det = 1.0 / determinant;\n\n    return new Mat3(\n      (a.a22 * b11 - a.a23 * b10 + a.a24 * b09) * det,\n      (a.a23 * b08 - a.a21 * b11 - a.a24 * b07) * det,\n      (a.a21 * b10 - a.a22 * b08 + a.a24 * b06) * det,\n      (a.a13 * b10 - a.a12 * b11 - a.a14 * b09) * det,\n      (a.a11 * b11 - a.a13 * b08 + a.a14 * b07) * det,\n      (a.a12 * b08 - a.a11 * b10 - a.a14 * b06) * det,\n      (a.a42 * b05 - a.a43 * b04 + a.a44 * b03) * det,\n      (a.a43 * b02 - a.a41 * b05 - a.a44 * b01) * det,\n      (a.a41 * b04 - a.a42 * b02 + a.a44 * b00) * det\n    );\n  }\n\n  /**\n   * Generates a 2D projection matrix with the given bounds\n   *\n   * @param {number} width Width of your gl context\n   * @param {number} height Height of gl context\n   * @returns {mat3} out\n   */\n  static fromProjection(width: number, height: number): Mat3 {\n    return new Mat3(2 / width, 0, 0, 0, -2 / height, 0, -1, 1, 1);\n  }\n\n  static identity(): Mat3 {\n    return new Mat3(...identity);\n  }\n}\n\nexport { Mat3 };\n","import { Mat3 } from \"./Mat3\";\nimport { Vec3 } from \"./Vec3\";\nimport { Vec4, V4Q } from \"./Vec4\";\n\nconst identity: number[] = [0, 0, 0, 1];\n\nconst identToIndex = function (v: string): number {\n  return [\"x\", \"y\", \"z\", \"w\"].indexOf(v);\n};\n\nconst orDefault = function (v: any, ident: string): number {\n  return isNaN(v) ? identity[identToIndex(ident)] : Number(v);\n};\n\nclass Quat extends Vec4 implements V4Q {\n  constructor(...args: number[]) {\n    super(...args);\n    this.reset(...args);\n  }\n\n  reset(...args: number[]): V4Q {\n    let [x, y, z, w] = args;\n    this.x = orDefault(x, \"x\");\n    this.y = orDefault(y, \"y\");\n    this.z = orDefault(z, \"z\");\n    this.w = orDefault(w, \"w\");\n\n    return this;\n  }\n\n  resetToQuat(q): Quat {\n    this.x = q.x;\n    this.y = q.y;\n    this.z = q.z;\n    this.w = q.w;\n\n    return this;\n  }\n\n  clone(): V4Q {\n    return new Quat(this.x, this.y, this.z, this.w);\n  }\n\n  toString() {\n    return `${this.x}, ${this.y}, ${this.z}, ${this.w}`;\n  }\n\n  multiply(q: V4Q): V4Q {\n    const a = this.clone();\n\n    this.x = a.x * q.w + a.w * q.x + a.y * q.z - a.z * q.y;\n    this.y = a.y * q.w + a.w * q.y + a.z * q.x - a.x * q.z;\n    this.z = a.z * q.w + a.w * q.z + a.x * q.y - a.y * q.x;\n    this.w = a.w * q.w - a.x * q.x - a.y * q.y - a.z * q.z;\n\n    return this;\n  }\n\n  multiplyNew(q: V4Q): V4Q {\n    return this.clone().multiply(q);\n  }\n\n  rotateX(origin: V4Q, rad: number): V4Q {\n    rad *= 0.5;\n\n    const a = this.clone();\n    const s = Math.sin(rad),\n      c = Math.cos(rad);\n\n    this.x = a.x * c + a.w * s;\n    this.y = a.y * c + a.z * s;\n    this.z = a.z * c - a.y * s;\n    this.w = a.w * c - a.x * s;\n\n    return this;\n  }\n\n  rotateY(origin: V4Q, rad: number): V4Q {\n    rad *= 0.5;\n\n    const a = this.clone();\n    const s = Math.sin(rad),\n      c = Math.cos(rad);\n\n    this.x = a.x * c - a.z * s;\n    this.y = a.y * c + a.w * s;\n    this.z = a.z * c + a.x * s;\n    this.w = a.w * c - a.y * s;\n\n    return this;\n  }\n\n  rotateZ(origin: V4Q, rad: number): V4Q {\n    rad *= 0.5;\n\n    const a = this.clone();\n    const s = Math.sin(rad),\n      c = Math.cos(rad);\n\n    this.x = a.x * c + a.y * s;\n    this.y = a.y * c - a.x * s;\n    this.z = a.z * c + a.w * s;\n    this.w = a.w * c - a.z * s;\n\n    return this;\n  }\n\n  /**\n   * Getters and setters\n   */\n\n  // Gets the calculated W component of this quaternion.\n  get normalW(): number {\n    return Math.sqrt(\n      Math.abs(1.0 - this.x * this.x - this.y * this.y - this.z * this.z)\n    );\n  }\n\n  /**\n   * Static methods\n   */\n\n  /**\n   * Creates a quaternion from a given axis and rotation\n   *\n   * @static\n   * @param {Vec3|Array} axis the axis around which to rotate\n   * @param {Number} rad the angle in radians\n   * @returns {Quat}\n   **/\n  static fromAxisAngle(axis: Vec3, rad: number): Quat {\n    axis = Vec3.interpolate(axis);\n    rad *= 0.5;\n    const s = Math.sin(rad);\n    return new Quat(s * axis.x, s * axis.y, s * axis.z, Math.cos(rad));\n  }\n\n  static fromEuler(euler: any, order: string = \"YXZ\"): Quat | void {\n    if (euler.array) euler = euler.array; // This just transforms the matrix to an array.\n    if (euler instanceof Array && euler.length >= 3) {\n      const out = new Quat();\n\n      let sx = Math.sin(euler[0] * 0.5);\n      let cx = Math.cos(euler[0] * 0.5);\n      let sy = Math.sin(euler[1] * 0.5);\n      let cy = Math.cos(euler[1] * 0.5);\n      let sz = Math.sin(euler[2] * 0.5);\n      let cz = Math.cos(euler[2] * 0.5);\n\n      if (order === \"XYZ\") {\n        out.x = sx * cy * cz + cx * sy * sz;\n        out.y = cx * sy * cz - sx * cy * sz;\n        out.z = cx * cy * sz + sx * sy * cz;\n        out.w = cx * cy * cz - sx * sy * sz;\n      } else if (order === \"YXZ\") {\n        out.x = sx * cy * cz + cx * sy * sz;\n        out.y = cx * sy * cz - sx * cy * sz;\n        out.z = cx * cy * sz - sx * sy * cz;\n        out.w = cx * cy * cz + sx * sy * sz;\n      } else if (order === \"ZXY\") {\n        out.x = sx * cy * cz - cx * sy * sz;\n        out.y = cx * sy * cz + sx * cy * sz;\n        out.z = cx * cy * sz + sx * sy * cz;\n        out.w = cx * cy * cz - sx * sy * sz;\n      } else if (order === \"ZYX\") {\n        out.x = sx * cy * cz - cx * sy * sz;\n        out.y = cx * sy * cz + sx * cy * sz;\n        out.z = cx * cy * sz - sx * sy * cz;\n        out.w = cx * cy * cz + sx * sy * sz;\n      } else if (order === \"YZX\") {\n        out.x = sx * cy * cz + cx * sy * sz;\n        out.y = cx * sy * cz + sx * cy * sz;\n        out.z = cx * cy * sz - sx * sy * cz;\n        out.w = cx * cy * cz - sx * sy * sz;\n      } else if (order === \"XZY\") {\n        out.x = sx * cy * cz - cx * sy * sz;\n        out.y = cx * sy * cz - sx * cy * sz;\n        out.z = cx * cy * sz + sx * sy * cz;\n        out.w = cx * cy * cz + sx * sy * sz;\n      }\n\n      return out;\n    }\n  }\n}\n\nexport { Quat };\n","import { Vec3 } from \"./Vec3\";\nimport { Quat } from \"./Quat\";\n\ntype Mat4DeterminantFunction = {\n  f: {\n    b00: number;\n    b01: number;\n    b02: number;\n    b03: number;\n    b04: number;\n    b05: number;\n    b06: number;\n    b07: number;\n    b08: number;\n    b09: number;\n    b10: number;\n    b11: number;\n  };\n  determinant: number;\n};\n\nconst EPSILON: number = 0.0001;\n\nconst identity = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n\nconst identToIndex = function (v: string): number {\n  return [\n    \"a11\",\n    \"a12\",\n    \"a13\",\n    \"a14\",\n    \"a21\",\n    \"a22\",\n    \"a23\",\n    \"a24\",\n    \"a31\",\n    \"a32\",\n    \"a33\",\n    \"a34\",\n    \"a41\",\n    \"a42\",\n    \"a43\",\n    \"a44\",\n  ].indexOf(v);\n};\n\nconst orDefault = function (v: any, ident: string): number {\n  return isNaN(v) ? identity[identToIndex(ident)] : Number(v);\n};\n\nclass Mat4 {\n  constructor(...args: number[]) {\n    this.reset(...args);\n  }\n\n  reset(...args: number[]): Mat4 {\n    const [\n      a11,\n      a12,\n      a13,\n      a14,\n      a21,\n      a22,\n      a23,\n      a24,\n      a31,\n      a32,\n      a33,\n      a34,\n      a41,\n      a42,\n      a43,\n      a44,\n    ] = args;\n    this.a11 = orDefault(a11, \"a11\");\n    this.a12 = orDefault(a12, \"a12\");\n    this.a13 = orDefault(a13, \"a13\");\n    this.a14 = orDefault(a14, \"a14\");\n\n    this.a21 = orDefault(a21, \"a21\");\n    this.a22 = orDefault(a22, \"a22\");\n    this.a23 = orDefault(a23, \"a23\");\n    this.a24 = orDefault(a24, \"a24\");\n\n    this.a31 = orDefault(a31, \"a31\");\n    this.a32 = orDefault(a32, \"a32\");\n    this.a33 = orDefault(a33, \"a33\");\n    this.a34 = orDefault(a34, \"a34\");\n\n    this.a41 = orDefault(a41, \"a41\");\n    this.a42 = orDefault(a42, \"a42\");\n    this.a43 = orDefault(a43, \"a43\");\n    this.a44 = orDefault(a44, \"a44\");\n    return this;\n  }\n\n  resetToMat4(m: Mat4): Mat4 {\n    this.a11 = m.a11;\n    this.a12 = m.a12;\n    this.a13 = m.a13;\n    this.a14 = m.a14;\n\n    this.a21 = m.a21;\n    this.a22 = m.a22;\n    this.a23 = m.a23;\n    this.a24 = m.a24;\n\n    this.a31 = m.a31;\n    this.a32 = m.a32;\n    this.a33 = m.a33;\n    this.a34 = m.a34;\n\n    this.a41 = m.a41;\n    this.a42 = m.a42;\n    this.a43 = m.a43;\n    this.a44 = m.a44;\n\n    return this;\n  }\n\n  clone(): Mat4 {\n    return new Mat4(\n      this.a11,\n      this.a12,\n      this.a13,\n      this.a14,\n      this.a21,\n      this.a22,\n      this.a23,\n      this.a24,\n      this.a31,\n      this.a32,\n      this.a33,\n      this.a34,\n      this.a41,\n      this.a42,\n      this.a43,\n      this.a44\n    );\n  }\n\n  transpose(): Mat4 {\n    const a12 = this.a12,\n      a13 = this.a13,\n      a14 = this.a14,\n      a23 = this.a23,\n      a24 = this.a24,\n      a34 = this.a34;\n\n    this.a12 = this.a21;\n    this.a13 = this.a31;\n    this.a14 = this.a41;\n\n    this.a21 = a12;\n    this.a23 = this.a32;\n    this.a24 = this.a42;\n\n    this.a31 = a13;\n    this.a32 = a23;\n    this.a34 = this.a43;\n\n    this.a41 = a14;\n    this.a42 = a24;\n    this.a43 = a34;\n\n    return this;\n  }\n\n  transposeNew(): Mat4 {\n    return this.clone().transpose();\n  }\n\n  add(m: Mat4): Mat4 {\n    this.a11 += m.a11;\n    this.a12 += m.a12;\n    this.a13 += m.a13;\n    this.a14 += m.a14;\n\n    this.a21 += m.a21;\n    this.a22 += m.a22;\n    this.a23 += m.a23;\n    this.a24 += m.a24;\n\n    this.a31 += m.a31;\n    this.a32 += m.a32;\n    this.a33 += m.a33;\n    this.a34 += m.a34;\n\n    this.a41 += m.a41;\n    this.a42 += m.a42;\n    this.a43 += m.a43;\n    this.a44 += m.a44;\n    return this;\n  }\n\n  addNew(m: Mat4): Mat4 {\n    return this.clone().add(m);\n  }\n\n  // @TODO: We might want to generalise this and allow any sort of matrix on these operations\n\n  subtract(m: Mat4): Mat4 {\n    this.a11 -= m.a11;\n    this.a12 -= m.a12;\n    this.a13 -= m.a13;\n    this.a14 -= m.a14;\n\n    this.a21 -= m.a21;\n    this.a22 -= m.a22;\n    this.a23 -= m.a23;\n    this.a24 -= m.a24;\n\n    this.a31 -= m.a31;\n    this.a32 -= m.a32;\n    this.a33 -= m.a33;\n    this.a34 -= m.a34;\n\n    this.a41 -= m.a41;\n    this.a42 -= m.a42;\n    this.a43 -= m.a43;\n    this.a44 -= m.a44;\n    return this;\n  }\n\n  subtractNew(m: Mat4): Mat4 {\n    return this.clone().subtract(m);\n  }\n\n  multiply(m: Mat4): Mat4 {\n    const o = this.clone();\n\n    this.a11 = m.a11 * o.a11 + m.a12 * o.a21 + m.a13 * o.a31 + m.a14 * o.a41;\n    this.a12 = m.a11 * o.a12 + m.a12 * o.a22 + m.a13 * o.a32 + m.a14 * o.a42;\n    this.a13 = m.a11 * o.a13 + m.a12 * o.a23 + m.a13 * o.a33 + m.a14 * o.a43;\n    this.a14 = m.a11 * o.a14 + m.a12 * o.a24 + m.a13 * o.a34 + m.a14 * o.a44;\n\n    this.a21 = m.a21 * o.a11 + m.a22 * o.a21 + m.a23 * o.a31 + m.a24 * o.a41;\n    this.a22 = m.a21 * o.a12 + m.a22 * o.a22 + m.a23 * o.a32 + m.a24 * o.a42;\n    this.a23 = m.a21 * o.a13 + m.a22 * o.a23 + m.a23 * o.a33 + m.a24 * o.a43;\n    this.a24 = m.a21 * o.a14 + m.a22 * o.a24 + m.a23 * o.a34 + m.a24 * o.a44;\n\n    this.a31 = m.a31 * o.a11 + m.a32 * o.a21 + m.a33 * o.a31 + m.a34 * o.a41;\n    this.a32 = m.a31 * o.a12 + m.a32 * o.a22 + m.a33 * o.a32 + m.a34 * o.a42;\n    this.a33 = m.a31 * o.a13 + m.a32 * o.a23 + m.a33 * o.a33 + m.a34 * o.a43;\n    this.a34 = m.a31 * o.a14 + m.a32 * o.a24 + m.a33 * o.a34 + m.a34 * o.a44;\n\n    this.a41 = m.a41 * o.a11 + m.a42 * o.a21 + m.a43 * o.a31 + m.a44 * o.a41;\n    this.a42 = m.a41 * o.a12 + m.a42 * o.a22 + m.a43 * o.a32 + m.a44 * o.a42;\n    this.a43 = m.a41 * o.a13 + m.a42 * o.a23 + m.a43 * o.a33 + m.a44 * o.a43;\n    this.a44 = m.a41 * o.a14 + m.a42 * o.a24 + m.a43 * o.a34 + m.a44 * o.a44;\n    return this;\n  }\n\n  multiplyNew(m: Mat4): Mat4 {\n    return this.clone().multiply(m);\n  }\n\n  multiplyScalar(s: number): Mat4 {\n    this.a11 *= s;\n    this.a12 *= s;\n    this.a13 *= s;\n    this.a14 *= s;\n\n    this.a21 *= s;\n    this.a22 *= s;\n    this.a23 *= s;\n    this.a24 *= s;\n\n    this.a31 *= s;\n    this.a32 *= s;\n    this.a33 *= s;\n    this.a34 *= s;\n\n    this.a41 *= s;\n    this.a42 *= s;\n    this.a43 *= s;\n    this.a44 *= s;\n\n    return this;\n  }\n\n  multiplyScalarNew(s: number): Mat4 {\n    return this.clone().multiplyScalar(s);\n  }\n\n  scale(s: number): Mat4 {\n    return this.multiplyScalar(s);\n  }\n\n  scaleNew(s: number): Mat4 {\n    return this.multiplyScalarNew(s);\n  }\n\n  scaleByVec3(v: any): Mat4 {\n    if (v.array) v = v.array;\n    v = v.concat([1, 1, 1]);\n    const [x, y, z] = v;\n\n    this.a11 *= x;\n    this.a12 *= x;\n    this.a13 *= x;\n    this.a14 *= x;\n\n    this.a21 *= y;\n    this.a22 *= y;\n    this.a23 *= y;\n    this.a24 *= y;\n\n    this.a31 *= z;\n    this.a32 *= z;\n    this.a33 *= z;\n    this.a34 *= z;\n\n    return this;\n  }\n\n  scaleByVec3New(v: any): Mat4 {\n    return this.clone().scaleByVec3(v);\n  }\n\n  /**\n   * Transforms the mat4 by a given amount\n   *\n   * @param {Vec3} v The amount to add to the matrixes transformation properties\n   * @returns {mat4} output\n   */\n  transform(v: any): Mat4 {\n    if (v.array) v = v.array;\n    v = v.concat([0, 0, 0]);\n    const [x, y, z] = v;\n\n    this.a14 += x;\n    this.a24 += y;\n    this.a34 += z;\n\n    return this;\n  }\n\n  transformNew(v: any): Mat4 {\n    return this.clone().transform(v);\n  }\n\n  /**\n   * Transforms the mat4 to a given position\n   *\n   * @param {Vec3} v The amount to add to the matrixes transformation properties\n   * @returns {mat4} output\n   */\n  transformTo(v: any): Mat4 {\n    if (v.array) v = v.array;\n    v = v.concat([0, 0, 0]);\n    const [x, y, z] = v;\n\n    this.a14 = x;\n    this.a24 = y;\n    this.a34 = z;\n\n    return this;\n  }\n\n  transformToNew(v: any): Mat4 {\n    return this.clone().transform(v);\n  }\n\n  /**\n   * Rotates a mat4 by the given angle around the given axis\n   *\n   * @param {Number} r the angle to rotate the matrix by\n   * @param {vec3} axis the axis to rotate around\n   * @returns {mat4} output\n   */\n  rotate(r: number, axis: any): Mat4 {\n    if (axis.array) axis = axis.array;\n    if (!axis.length || axis.length < 3) return this;\n    let l = Math.hypot(axis[0], axis[1], axis[2]);\n    if (l < EPSILON) return this;\n\n    l = 1 / l;\n    const x = axis[0] / l,\n      y = axis[1] / l,\n      z = axis[2] / l,\n      s = Math.sin(r),\n      c = Math.cos(r),\n      t = 1 - c,\n      o = this.clone(),\n      b = new Mat4();\n\n    // Construct the rotation matrix 3x3 matrix, but we can use a mat4 to store (w/e)\n    b.a11 = x * x * t + c;\n    b.a12 = y * x * t + z * s;\n    b.a13 = z * x * t - y * s;\n\n    b.a21 = x * y * t - z * s;\n    b.a22 = y * y * t + c;\n    b.a23 = z * y * t + x * s;\n\n    b.a31 = x * z * t + y * s;\n    b.a32 = y * z * t - x * s;\n    b.a33 = z * z * t + c;\n\n    // Perform rotation-specific matrix multiplication\n    this.a11 = o.a11 * b.a11 + o.a21 * b.a12 + o.a31 * b.a13;\n    this.a12 = o.a12 * b.a11 + o.a22 * b.a12 + o.a32 * b.a13;\n    this.a13 = o.a13 * b.a11 + o.a23 * b.a12 + o.a33 * b.a13;\n    this.a14 = o.a14 * b.a11 + o.a24 * b.a12 + o.a34 * b.a13;\n\n    this.a21 = o.a11 * b.a21 + o.a21 * b.a22 + o.a31 * b.a23;\n    this.a22 = o.a12 * b.a21 + o.a22 * b.a22 + o.a32 * b.a23;\n    this.a23 = o.a13 * b.a21 + o.a23 * b.a22 + o.a33 * b.a23;\n    this.a24 = o.a14 * b.a21 + o.a24 * b.a22 + o.a34 * b.a23;\n\n    this.a31 = o.a11 * b.a31 + o.a21 * b.a32 + o.a31 * b.a33;\n    this.a32 = o.a12 * b.a31 + o.a22 * b.a32 + o.a32 * b.a33;\n    this.a33 = o.a13 * b.a31 + o.a23 * b.a32 + o.a33 * b.a33;\n    this.a34 = o.a14 * b.a31 + o.a24 * b.a32 + o.a34 * b.a33;\n\n    return this;\n  }\n\n  rotateNew(r: number, axis: any): Mat4 {\n    return this.clone().rotate(r, axis);\n  }\n\n  invert(): Mat4 {\n    const c = this.clone();\n\n    const {\n      f: { b00, b01, b02, b03, b04, b05, b06, b07, b08, b09, b10, b11 },\n      determinant,\n    } = this.determinantFunction;\n\n    // If we don't have a determinant this function should fail silently and just return the unmodified array\n    if (determinant) {\n      const det = 1.0 / determinant;\n\n      this.a11 = (c.a22 * b11 - c.a23 * b10 + c.a24 * b09) * det;\n      this.a12 = (c.a13 * b10 - c.a12 * b11 - c.a14 * b09) * det;\n      this.a13 = (c.a42 * b05 - c.a43 * b04 + c.a44 * b03) * det;\n      this.a14 = (c.a33 * b04 - c.a32 * b05 - c.a34 * b03) * det;\n      this.a21 = (c.a23 * b08 - c.a21 * b11 - c.a24 * b07) * det;\n      this.a22 = (c.a11 * b11 - c.a13 * b08 + c.a14 * b07) * det;\n      this.a23 = (c.a43 * b02 - c.a41 * b05 - c.a44 * b01) * det;\n      this.a24 = (c.a31 * b05 - c.a33 * b02 + c.a34 * b01) * det;\n      this.a31 = (c.a21 * b10 - c.a22 * b08 + c.a24 * b06) * det;\n      this.a32 = (c.a12 * b08 - c.a11 * b10 - c.a14 * b06) * det;\n      this.a33 = (c.a41 * b04 - c.a42 * b02 + c.a44 * b00) * det;\n      this.a34 = (c.a32 * b02 - c.a31 * b04 - c.a34 * b00) * det;\n      this.a41 = (c.a22 * b07 - c.a21 * b09 - c.a23 * b06) * det;\n      this.a42 = (c.a11 * b09 - c.a12 * b07 + c.a13 * b06) * det;\n      this.a43 = (c.a42 * b01 - c.a41 * b03 - c.a43 * b00) * det;\n      this.a44 = (c.a31 * b03 - c.a32 * b01 + c.a33 * b00) * det;\n    }\n\n    return this;\n  }\n\n  invertNew(): Mat4 {\n    return this.clone().invert();\n  }\n\n  toString(): string {\n    return `\n      ${this.a11}, ${this.a12}, ${this.a13}, ${this.a14},\n      ${this.a21}, ${this.a22}, ${this.a23}, ${this.a24},\n      ${this.a31}, ${this.a32}, ${this.a33}, ${this.a34},\n      ${this.a41}, ${this.a42}, ${this.a43}, ${this.a44}\n    `;\n  }\n\n  /**\n   * Getters and setters\n   */\n\n  /**\n   * (getter/setter) The a11 value of the matrix.\n   *\n   * @type {number}\n   * @default 0\n   */\n  #a11: number = 0;\n  set a11(v) {\n    if (typeof v == \"number\") {\n      this.#a11 = v;\n    } else {\n      throw new TypeError(\"a11 should be a number\");\n    }\n  }\n  get a11() {\n    return this.#a11 || 0;\n  }\n\n  /**\n   * (getter/setter) The a12 value of the matrix.\n   *\n   * @type {number}\n   * @default 0\n   */\n  #a12: number = 0;\n  set a12(v) {\n    if (typeof v == \"number\") {\n      this.#a12 = v;\n    } else {\n      throw new TypeError(\"a12 should be a number\");\n    }\n  }\n  get a12() {\n    return this.#a12 || 0;\n  }\n\n  /**\n   * (getter/setter) The a13 value of the matrix.\n   *\n   * @type {number}\n   * @default 0\n   */\n  #a13: number = 0;\n  set a13(v) {\n    if (typeof v == \"number\") {\n      this.#a13 = v;\n    } else {\n      throw new TypeError(\"a13 should be a number\");\n    }\n  }\n  get a13() {\n    return this.#a13 || 0;\n  }\n\n  /**\n   * (getter/setter) The a14 value of the matrix.\n   *\n   * @type {number}\n   * @default 0\n   */\n  #a14: number = 0;\n  set a14(v) {\n    if (typeof v == \"number\") {\n      this.#a14 = v;\n    } else {\n      throw new TypeError(\"a14 should be a number\");\n    }\n  }\n  get a14() {\n    return this.#a14 || 0;\n  }\n\n  /**\n   * (getter/setter) The a21 value of the matrix.\n   *\n   * @type {number}\n   * @default 0\n   */\n  #a21: number = 0;\n  set a21(v) {\n    if (typeof v == \"number\") {\n      this.#a21 = v;\n    } else {\n      throw new TypeError(\"a21 should be a number\");\n    }\n  }\n  get a21() {\n    return this.#a21 || 0;\n  }\n\n  /**\n   * (getter/setter) The a22 value of the matrix.\n   *\n   * @type {number}\n   * @default 0\n   */\n  #a22: number = 0;\n  set a22(v) {\n    if (typeof v == \"number\") {\n      this.#a22 = v;\n    } else {\n      throw new TypeError(\"a22 should be a number\");\n    }\n  }\n  get a22() {\n    return this.#a22 || 0;\n  }\n\n  /**\n   * (getter/setter) The a23 value of the matrix.\n   *\n   * @type {number}\n   * @default 0\n   */\n  #a23: number = 0;\n  set a23(v) {\n    if (typeof v == \"number\") {\n      this.#a23 = v;\n    } else {\n      throw new TypeError(\"a23 should be a number\");\n    }\n  }\n  get a23() {\n    return this.#a23 || 0;\n  }\n\n  /**\n   * (getter/setter) The a24 value of the matrix.\n   *\n   * @type {number}\n   * @default 0\n   */\n  #a24: number = 0;\n  set a24(v) {\n    if (typeof v == \"number\") {\n      this.#a24 = v;\n    } else {\n      throw new TypeError(\"a24 should be a number\");\n    }\n  }\n  get a24() {\n    return this.#a24 || 0;\n  }\n\n  /**\n   * (getter/setter) The a31 value of the matrix.\n   *\n   * @type {number}\n   * @default 0\n   */\n  #a31: number = 0;\n  set a31(v) {\n    if (typeof v == \"number\") {\n      this.#a31 = v;\n    } else {\n      throw new TypeError(\"a31 should be a number\");\n    }\n  }\n  get a31() {\n    return this.#a31 || 0;\n  }\n\n  /**\n   * (getter/setter) The a32 value of the matrix.\n   *\n   * @type {number}\n   * @default 0\n   */\n  #a32: number = 0;\n  set a32(v) {\n    if (typeof v == \"number\") {\n      this.#a32 = v;\n    } else {\n      throw new TypeError(\"a32 should be a number\");\n    }\n  }\n  get a32() {\n    return this.#a32 || 0;\n  }\n\n  /**\n   * (getter/setter) The a33 value of the matrix.\n   *\n   * @type {number}\n   * @default 0\n   */\n  #a33: number = 0;\n  set a33(v) {\n    if (typeof v == \"number\") {\n      this.#a33 = v;\n    } else {\n      throw new TypeError(\"a33 should be a number\");\n    }\n  }\n  get a33() {\n    return this.#a33 || 0;\n  }\n\n  /**\n   * (getter/setter) The a34 value of the matrix.\n   *\n   * @type {number}\n   * @default 0\n   */\n  #a34: number = 0;\n  set a34(v) {\n    if (typeof v == \"number\") {\n      this.#a34 = v;\n    } else {\n      throw new TypeError(\"a34 should be a number\");\n    }\n  }\n  get a34() {\n    return this.#a34 || 0;\n  }\n\n  /**\n   * (getter/setter) The a41 value of the matrix.\n   *\n   * @type {number}\n   * @default 0\n   */\n  #a41: number = 0;\n  set a41(v) {\n    if (typeof v == \"number\") {\n      this.#a41 = v;\n    } else {\n      throw new TypeError(\"a41 should be a number\");\n    }\n  }\n  get a41() {\n    return this.#a41 || 0;\n  }\n\n  /**\n   * (getter/setter) The a42 value of the matrix.\n   *\n   * @type {number}\n   * @default 0\n   */\n  #a42: number = 0;\n  set a42(v) {\n    if (typeof v == \"number\") {\n      this.#a42 = v;\n    } else {\n      throw new TypeError(\"a42 should be a number\");\n    }\n  }\n  get a42() {\n    return this.#a42 || 0;\n  }\n\n  /**\n   * (getter/setter) The a43 value of the matrix.\n   *\n   * @type {number}\n   * @default 0\n   */\n  #a43: number = 0;\n  set a43(v) {\n    if (typeof v == \"number\") {\n      this.#a43 = v;\n    } else {\n      throw new TypeError(\"a43 should be a number\");\n    }\n  }\n  get a43() {\n    return this.#a43 || 0;\n  }\n\n  /**\n   * (getter/setter) The a44 value of the matrix.\n   *\n   * @type {number}\n   * @default 0\n   */\n  #a44: number = 0;\n  set a44(v) {\n    if (typeof v == \"number\") {\n      this.#a44 = v;\n    } else {\n      throw new TypeError(\"a44 should be a number\");\n    }\n  }\n  get a44() {\n    return this.#a44 || 0;\n  }\n\n  get frobeniusnorm(): number {\n    return Math.hypot(...this.array);\n  }\n\n  get translation(): Vec3 {\n    return new Vec3(this.a41, this.a42, this.a43);\n  }\n\n  get scaling(): Vec3 {\n    return new Vec3(\n      Math.hypot(this.a11, this.a12, this.a13),\n      Math.hypot(this.a21, this.a22, this.a23),\n      Math.hypot(this.a31, this.a32, this.a33)\n    );\n  }\n\n  get rotation(): Quat {\n    const scale = this.scaling.inverse();\n\n    let sm11 = this.a11 * scale.x;\n    let sm12 = this.a12 * scale.y;\n    let sm13 = this.a13 * scale.z;\n\n    let sm21 = this.a21 * scale.x;\n    let sm22 = this.a22 * scale.y;\n    let sm23 = this.a23 * scale.z;\n\n    let sm31 = this.a31 * scale.x;\n    let sm32 = this.a32 * scale.y;\n    let sm33 = this.a33 * scale.z;\n\n    const trace = sm11 + sm22 + sm33;\n    let S = 0;\n\n    if (trace > 0) {\n      S = Math.sqrt(trace + 1.0) * 2;\n      return new Quat(\n        (sm23 - sm32) / S,\n        (sm31 - sm13) / S,\n        (sm12 - sm21) / S,\n        0.25 * S\n      );\n    } else if (sm11 > sm22 && sm11 > sm33) {\n      S = Math.sqrt(1.0 + sm11 - sm22 - sm33) * 2;\n      return new Quat(\n        0.25 * S,\n        (sm12 + sm21) / S,\n        (sm31 + sm13) / S,\n        (sm23 - sm32) / S\n      );\n    } else if (sm22 > sm33) {\n      S = Math.sqrt(1.0 + sm22 - sm11 - sm33) * 2;\n      return new Quat(\n        (sm12 + sm21) / S,\n        0.25 * S,\n        (sm23 + sm32) / S,\n        (sm31 - sm13) / S\n      );\n    } else {\n      S = Math.sqrt(1.0 + sm33 - sm11 - sm22) * 2;\n      return new Quat(\n        (sm31 + sm13) / S,\n        (sm23 + sm32) / S,\n        0.25 * S,\n        (sm12 - sm21) / S\n      );\n    }\n  }\n\n  /**\n   * Calculates the determinant function the mat4\n   *\n   * @returns {Number} determinant of a\n   */\n  get determinantFunction(): Mat4DeterminantFunction {\n    let b00 = this.a11 * this.a22 - this.a12 * this.a21;\n    let b01 = this.a11 * this.a23 - this.a13 * this.a21;\n    let b02 = this.a11 * this.a24 - this.a14 * this.a21;\n    let b03 = this.a12 * this.a23 - this.a13 * this.a22;\n    let b04 = this.a12 * this.a24 - this.a14 * this.a22;\n    let b05 = this.a13 * this.a24 - this.a14 * this.a23;\n    let b06 = this.a31 * this.a42 - this.a32 * this.a41;\n    let b07 = this.a31 * this.a43 - this.a33 * this.a41;\n    let b08 = this.a31 * this.a44 - this.a34 * this.a41;\n    let b09 = this.a32 * this.a43 - this.a33 * this.a42;\n    let b10 = this.a32 * this.a44 - this.a34 * this.a42;\n    let b11 = this.a33 * this.a44 - this.a34 * this.a43;\n    // Calculate the determinant\n    return {\n      f: { b00, b01, b02, b03, b04, b05, b06, b07, b08, b09, b10, b11 },\n      determinant:\n        b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06,\n    };\n  }\n\n  /**\n   * Calculates the determinant of the mat4\n   *\n   * @returns {Number} determinant of a\n   */\n  get determinant(): number {\n    return this.determinantFunction.determinant;\n  }\n\n  /**\n   * (getter) Returns the basic array representation of this matrix.\n   * @readonly\n   *\n   * @type {array}\n   */\n  get array(): number[] {\n    return [\n      this.a11,\n      this.a12,\n      this.a13,\n      this.a14,\n      this.a21,\n      this.a22,\n      this.a23,\n      this.a24,\n      this.a31,\n      this.a32,\n      this.a33,\n      this.a34,\n      this.a41,\n      this.a42,\n      this.a43,\n      this.a44,\n    ];\n  }\n\n  static fromRotation(r, axis) {\n    return new Mat4().rotate(r, axis);\n  }\n\n  static fromXRotation(r) {\n    const s = Math.sin(r),\n      c = Math.cos(r);\n\n    return new Mat4(1, 0, 0, 0, 0, c, s, 0, 0, -s, c, 0, 0, 0, 0, 1);\n  }\n\n  static fromYRotation(r) {\n    const s = Math.sin(r),\n      c = Math.cos(r);\n\n    return new Mat4(c, 0, -s, 0, 0, 1, 0, 0, s, 0, c, 0, 0, 0, 0, 1);\n  }\n\n  static fromZRotation(r) {\n    const s = Math.sin(r),\n      c = Math.cos(r);\n\n    return new Mat4(c, s, 0, 0, -s, c, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n  }\n\n  static fromScalingVec3(v) {\n    if (v.array) v = v.array; // This just transforms a provided vector into to an array.\n\n    if (v instanceof Array) {\n      return new Mat4(v[0], 0, 0, 0, 0, v[1], 0, 0, 0, 0, v[2], 0, 0, 0, 0, 1);\n    }\n  }\n\n  static fromTranslatingVec3(v) {\n    if (v.array) v = v.array; // This just transforms a provided vector into to an array.\n\n    if (v instanceof Array) {\n      return new Mat4(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, v[0], v[1], v[2], 1);\n    }\n  }\n\n  /**\n   * Calculates a 4x4 matrix from the given quaternion\n   *\n   * @param {quat} q Quaternion to create matrix from\n   *\n   * @returns {mat4} out\n   */\n  static fromQuat(q) {\n    if (q.array) q = q.array; // This just transforms a provided vector into to an array.\n\n    if (q instanceof Array && q.length >= 4) {\n      const [x, y, z, w] = q;\n      const [x2, y2, z2] = q.map((x) => x * 2);\n\n      const xx = x * x2,\n        yx = y * x2,\n        yy = y * y2,\n        zx = z * x2,\n        zy = z * y2,\n        zz = z * z2,\n        wx = w * x2,\n        wy = w * y2,\n        wz = w * z2;\n\n      return new Mat4(\n        1 - yy - zz,\n        yx + wz,\n        zx - wy,\n        0,\n        yx - wz,\n        1 - xx - zz,\n        zy + wx,\n        0,\n        zx + wy,\n        zy - wx,\n        1 - xx - yy,\n        0,\n        0,\n        0,\n        0,\n        1\n      );\n    }\n  }\n\n  /**\n   * Creates a matrix from a quaternion rotation, vector translation and vector scale\n   * This is equivalent to (but much faster than):\n   *\n   *     mat4.identity(dest);\n   *     mat4.translate(dest, vec);\n   *     let quatMat = mat4.create();\n   *     quat4.toMat4(quat, quatMat);\n   *     mat4.multiply(dest, quatMat);\n   *     mat4.scale(dest, scale)\n   *\n   * @param {quat4} q Rotation quaternion\n   * @param {vec3} v Translation vector\n   * @param {vec3} s Scaling vector\n   * @returns {mat4} out\n   */\n  static fromRotationTranslationScale(q, v, s) {\n    if (q.array) q = q.array;\n    if (v.array) v = v.array;\n    if (s.array) s = s.array;\n\n    if (\n      q.length &&\n      q.length >= 4 &&\n      v.length &&\n      v.length >= 3 &&\n      s.length &&\n      s.length >= 3\n    ) {\n      const x2 = q[0] + q[0],\n        y2 = q[1] + q[1],\n        z2 = q[2] + q[2];\n\n      const xx = q[0] * x2,\n        xy = q[0] * y2,\n        xz = q[0] * z2,\n        yy = q[1] * y2,\n        yz = q[1] * z2,\n        zz = q[2] * z2,\n        wx = q[3] * x2,\n        wy = q[3] * y2,\n        wz = q[3] * z2,\n        sx = s[0],\n        sy = s[1],\n        sz = s[2];\n\n      return new Mat4(\n        (1 - (yy + zz)) * sx,\n        (xy + wz) * sx,\n        (xz - wy) * sx,\n        0,\n        (xy - wz) * sy,\n        (1 - (xx + zz)) * sy,\n        (yz + wx) * sy,\n        0,\n        (xz + wy) * sz,\n        (yz - wx) * sz,\n        (1 - (xx + yy)) * sz,\n        0,\n        v[0],\n        v[1],\n        v[2],\n        1\n      );\n    }\n  }\n\n  /**\n   * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin\n   * This is equivalent to (but much faster than):\n   *\n   *     mat4.identity(dest);\n   *     mat4.translate(dest, vec);\n   *     mat4.translate(dest, origin);\n   *     let quatMat = mat4.create();\n   *     quat4.toMat4(quat, quatMat);\n   *     mat4.multiply(dest, quatMat);\n   *     mat4.scale(dest, scale)\n   *     mat4.translate(dest, negativeOrigin);\n   *\n   * @param {quat4} q Rotation quaternion\n   * @param {vec3} v Translation vector\n   * @param {vec3} s Scaling vector\n   * @param {vec3} o The origin vector around which to scale and rotate\n   * @returns {mat4} out\n   */\n  static fromRotationTranslationScaleOrigin(q, v, s, o) {\n    if (q.array) q = q.array;\n    if (v.array) v = v.array;\n    if (s.array) s = s.array;\n    if (o.array) o = o.array;\n\n    if (\n      q.length &&\n      q.length >= 4 &&\n      v.length &&\n      v.length >= 3 &&\n      s.length &&\n      s.length >= 3 &&\n      o.length &&\n      o.length >= 3\n    ) {\n      const x2 = q[0] + q[0],\n        y2 = q[1] + q[1],\n        z2 = q[2] + q[2];\n\n      const xx = q[0] * x2,\n        xy = q[0] * y2,\n        xz = q[0] * z2,\n        yy = q[1] * y2,\n        yz = q[1] * z2,\n        zz = q[2] * z2,\n        wx = q[3] * x2,\n        wy = q[3] * y2,\n        wz = q[3] * z2,\n        sx = s[0],\n        sy = s[1],\n        sz = s[2],\n        ox = o[0],\n        oy = o[1],\n        oz = o[2];\n\n      const out0 = (1 - (yy + zz)) * sx,\n        out1 = (xy + wz) * sx,\n        out2 = (xz - wy) * sx,\n        out4 = (xy - wz) * sy,\n        out5 = (1 - (xx + zz)) * sy,\n        out6 = (yz + wx) * sy,\n        out8 = (xz + wy) * sz,\n        out9 = (yz - wx) * sz,\n        out10 = (1 - (xx + yy)) * sz;\n\n      return new Mat4(\n        out0,\n        out1,\n        out2,\n        0,\n        out4,\n        out5,\n        out6,\n        0,\n        out8,\n        out9,\n        out10,\n        0,\n        v[0] + ox - (out0 * ox + out4 * oy + out8 * oz),\n        v[1] + oy - (out1 * ox + out5 * oy + out9 * oz),\n        v[2] + oz - (out2 * ox + out6 * oy + out10 * oz),\n        1\n      );\n    }\n  }\n\n  /**\n   * Generates a frustum matrix with the given bounds\n   *\n   * @param {Number} left Left bound of the frustum\n   * @param {Number} right Right bound of the frustum\n   * @param {Number} bottom Bottom bound of the frustum\n   * @param {Number} top Top bound of the frustum\n   * @param {Number} near Near bound of the frustum\n   * @param {Number} far Far bound of the frustum\n   * @returns {mat4} out\n   */\n  static frustum(left, right, bottom, top, near, far) {\n    const rl = 1 / (right - left),\n      tb = 1 / (top - bottom),\n      nf = 1 / (near - far);\n\n    return new Mat4(\n      near * 2 * rl,\n      0,\n      0,\n      0,\n\n      0,\n      near * 2 * tb,\n      0,\n      0,\n\n      (right + left) * rl,\n      (top + bottom) * tb,\n      (far + near) * nf,\n      -1,\n\n      0,\n      0,\n      far * near * 2 * nf,\n      0\n    );\n  }\n\n  /**\n   * Generates a perspective projection matrix with the given bounds.\n   * Passing null/undefined/no value for far will generate infinite projection matrix.\n   *\n   * @param {number} fovy Vertical field of view in radians\n   * @param {number} aspect Aspect ratio. typically viewport width/height\n   * @param {number} near Near bound of the frustum\n   * @param {number} far Far bound of the frustum, can be null or Infinity\n   * @returns {mat4} out\n   */\n  static perspective(fovy, aspect, near, far) {\n    const f = 1.0 / Math.tan(fovy / 2);\n    let nf, a33, a43;\n\n    if (far != null && far !== Infinity) {\n      nf = 1 / (near - far);\n      a33 = (far + near) * nf;\n      // a43 = (2 * far * near) * nf;\n      a43 = 2 * far * near * nf;\n    } else {\n      a33 = -1;\n      a43 = -2 * near;\n    }\n\n    const out = new Mat4(\n      f / aspect,\n      0,\n      0,\n      0,\n\n      0,\n      f,\n      0,\n      0,\n\n      0,\n      0,\n      a33,\n      -1,\n\n      0,\n      0,\n      a43,\n      0\n    );\n\n    return out;\n  }\n\n  /**\n   * Generates a orthogonal projection matrix with the given bounds\n   *\n   * @param {number} left Left bound of the frustum\n   * @param {number} right Right bound of the frustum\n   * @param {number} bottom Bottom bound of the frustum\n   * @param {number} top Top bound of the frustum\n   * @param {number} near Near bound of the frustum\n   * @param {number} far Far bound of the frustum\n   * @returns {mat4} out\n   */\n  static ortho(left, right, bottom, top, near, far) {\n    const lr = 1 / (left - right),\n      bt = 1 / (bottom - top),\n      nf = 1 / (near - far);\n\n    return new Mat4(\n      -2 * lr,\n      0,\n      0,\n      0,\n\n      0,\n      -2 * bt,\n      0,\n      0,\n\n      0,\n      0,\n      2 * nf,\n      0,\n\n      (left + right) * lr,\n      (top + bottom) * bt,\n      (far + near) * nf,\n      1\n    );\n  }\n\n  /**\n   * Generates a look-at matrix with the given eye position, focal point, and up axis.\n   * If you want a matrix that actually makes an object look at another object, you should use targetTo instead.\n   *\n   * @param {mat4} out mat4 frustum matrix will be written into\n   * @param {vec3} eye Position of the viewer\n   * @param {vec3} center Point the viewer is looking at\n   * @param {vec3} up vec3 pointing up\n   * @returns {mat4} out\n   */\n  static lookAt(eye, center, up) {\n    if (eye.array) eye = eye.array;\n    if (center.array) center = center.array;\n    if (up.array) up = up.array;\n\n    if (\n      eye.length &&\n      eye.length >= 3 &&\n      center.length &&\n      center.length >= 3 &&\n      up.length &&\n      up.length >= 3\n    ) {\n      const e = new Vec3(...eye),\n        c = new Vec3(...center),\n        u = new Vec3(...up);\n\n      if (\n        Math.abs(e.x - c.x) < EPSILON &&\n        Math.abs(e.y - c.y) < EPSILON &&\n        Math.abs(e.z - c.z) < EPSILON\n      ) {\n        return new Mat4();\n      }\n\n      const off = e.subtractNew(c);\n      let l = 1 / Math.hypot(off.x, off.y, off.z);\n      off.x *= l;\n      off.y *= l;\n      off.z *= l;\n\n      const or = new Vec3(\n        u.y * off.z - u.z * off.y,\n        u.z * off.x - u.x * off.z,\n        u.x * off.y - u.y * off.x\n      );\n      l = Math.hypot(or.x, or.y, or.z);\n      if (!l) {\n        or.reset(0, 0, 0);\n      } else {\n        l = 1 / l;\n        or.x *= l;\n        or.y *= l;\n        or.z *= l;\n      }\n\n      const tn = new Vec3(\n        off.y * or.z - off.z * or.y,\n        off.z * or.x - off.x * or.z,\n        off.x * or.y - off.y * or.x\n      );\n      l = Math.hypot(tn.x, tn.y, tn.z);\n      if (!l) {\n        tn.reset(0, 0, 0);\n      } else {\n        l = 1 / l;\n        tn.x *= l;\n        tn.y *= l;\n        tn.z *= l;\n      }\n\n      return new Mat4(\n        or.x,\n        tn.x,\n        off.x,\n        0,\n\n        or.y,\n        tn.y,\n        off.y,\n        0,\n\n        or.z,\n        tn.z,\n        off.z,\n        0,\n\n        -(or.x * e.x + or.y * e.y + or.z * e.z),\n        -(tn.x * e.x + tn.y * e.y + tn.z * e.z),\n        -(off.x * e.x + off.y * e.y + off.z * e.z),\n        1\n      );\n    }\n  }\n\n  /**\n   * Generates a matrix that makes something look at something else.\n   *\n   * @param {vec3} eye Position of the viewer\n   * @param {vec3} center Point the viewer is looking at\n   * @param {vec3} up vec3 pointing up\n   * @returns {mat4} out\n   */\n  static targetTo(eye, target, up) {\n    if (eye.array) eye = eye.array;\n    if (target.array) target = target.array;\n    if (up.array) up = up.array;\n\n    if (\n      eye.length &&\n      eye.length >= 3 &&\n      target.length &&\n      target.length >= 3 &&\n      up.length &&\n      up.length >= 3\n    ) {\n      const e = new Vec3(...eye),\n        c = new Vec3(...target),\n        u = new Vec3(...up);\n\n      const off = e.subtractNew(c);\n      let l = off.lengthSquared;\n      if (l > 0) {\n        l = 1 / Math.sqrt(l);\n        off.x *= l;\n        off.y *= l;\n        off.z *= l;\n      } else {\n        off.z = 1;\n      }\n\n      const or = new Vec3(\n        u.y * off.z - u.z * off.y,\n        u.z * off.x - u.x * off.z,\n        u.x * off.y - u.y * off.x\n      );\n      l = or.lengthSquared;\n      if (l === 0) {\n        if(u.z) u.x += 1e-6;\n        else if(u.y) u.z += 1e-6;\n        else u.y += 1e-6;\n        or.reset(\n          u.y * off.z - u.z * off.y,\n          u.z * off.x - u.x * off.z,\n          u.x * off.y - u.y * off.x\n        );\n        l = or.lengthSquared;\n      }\n      \n      l = 1 / Math.sqrt(l);\n      or.x *= l;\n      or.y *= l;\n      or.z *= l;\n\n      return new Mat4(\n        or.x,\n        or.y,\n        or.z,\n        0,\n\n        off.y * or.z - off.z * or.y,\n        off.z * or.x - off.x * or.z,\n        off.x * or.y - off.y * or.x,\n        0,\n\n        off.x,\n        off.y,\n        off.z,\n        0,\n\n        e.x,\n        e.y,\n        e.z,\n        1\n      );\n    }\n  }\n}\n\nexport { Mat4 };\n"],"names":["conversionFactor","Math","PI","degreesToRadian","degrees","Vec2","_classPrivateFieldLooseBase","this","reset","x","y","isNaN","resetToVector","v","clone","add","vector","addNew","addScalar","scalar","addScalarNew","subtract","subtractNew","subtractScalar","subtractScalarNew","divide","divideNew","divideScalar","divideScalarNew","multiply","multiplyNew","multiplyScalar","multiplyScalarNew","scale","scaleNew","rotate","radian","cos","sin","rotateNew","rotateDeg","rotateDegNew","rotateBy","rotateByNew","rotateDegBy","rotateDegByNew","rotateTo","angle","rotateToNew","rotateToDeg","rotateToDegNew","negate","negateNew","inverse","inverseNew","c","normalise","length","normaliseNew","distance","distanceX","distanceY","dot","det","slopeBetween","cross","ceil","ceilNew","floor","floorNew","round","roundNew","mod","modNew","fract","fractNew","transformByMat2","m","array","Array","transformByMat2New","transformByMat3","transformByMat3New","interpolate","Error","nv","split","Number","lerp","v1","v2","d","getAngle","a","b","cosine","acos","TypeError","lengthSquared","sqrt","atan2","w","h","value","atan","xy","yx","Vec3","z","rotateX","origin","s","rotated","rotateXNew","rotateY","rotateyNew","rotateZ","rotateZNew","transformByMat4","o","transformByMat4New","transformByQuat","q","uv","uuv","transformByQuatNew","distanceZ","crossNew","_a","_b","len1","len2","fromRotationMatrix","order","asin","min","max","abs","p","t","xyz","yzx","zxy","Vec4","rotateYNew","l","distanceW","u","A","B","C","D","E","F","G","H","I","J","dotproduct","_x","_y","_z","_w","xyzw","yzwx","zwxy","wxyz","identity","orDefault","ident","indexOf","identToIndex","Mat2","a11","a12","a21","a22","resetToMat2","transpose","transposeNew","scaleByVec2","scaleByVec2New","r","invert","determinant","invertNew","adjoint","adjointNew","toString","fromAngle","fromScalingVec2","Mat3","a13","a23","a31","a32","a33","resetToMat3","determinantFunction","f","b11","b21","b01","fromQuat","map","x2","y2","z2","xx","yy","zx","zy","zz","wx","wy","wz","fromMat4","b02","b04","b05","b06","b07","b08","b09","b10","a24","a14","a42","a43","a44","b03","a41","b00","fromProjection","width","height","hypot","Quat","args","_this","resetToQuat","rad","fromAxisAngle","axis","fromEuler","euler","out","sx","cx","sy","cy","sz","cz","Mat4","a34","resetToMat4","scaleByVec3","concat","scaleByVec3New","transform","transformNew","transformTo","transformToNew","fromRotation","fromXRotation","fromYRotation","fromZRotation","fromScalingVec3","fromTranslatingVec3","fromRotationTranslationScale","xz","yz","fromRotationTranslationScaleOrigin","ox","oy","oz","out0","out1","out2","out4","out5","out6","out8","out9","out10","frustum","left","right","bottom","top","near","far","rl","tb","nf","perspective","fovy","aspect","tan","Infinity","ortho","lr","bt","lookAt","eye","center","up","e","off","or","tn","targetTo","target","scaling","sm11","sm12","sm13","sm21","sm22","sm23","sm31","sm32","sm33","trace","S"],"mappings":"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"}