{"code":"import { SVG } from \"@svgdotjs/svg.js\";\r\nimport { Vec2 } from \"wtc-math\";\r\nclass Drawing {\r\n    static #defaults = {\r\n        stroke: \"#333\",\r\n        pxratio: 1,\r\n    };\r\n    static DT_CANVAS = 1;\r\n    static DT_SVG = 2;\r\n    #drawing;\r\n    #ctx;\r\n    #mode;\r\n    #instructions = [];\r\n    constructor(mode = Drawing.DT_CANVAS, settings) {\r\n        settings = Object.assign({}, Drawing.#defaults, settings);\r\n        this.mode = mode;\r\n        if (this.mode & Drawing.DT_CANVAS) {\r\n            this.#drawing = document.createElement(\"canvas\");\r\n        }\r\n        else if (this.mode & Drawing.DT_SVG) {\r\n            this.#drawing = SVG();\r\n        }\r\n        this.stroke = settings.stroke;\r\n        this.pxratio = settings.pxratio;\r\n    }\r\n    clear() {\r\n        if (this.mode & Drawing.DT_CANVAS) {\r\n            this.c.clearRect(0, 0, ...this.dimensions.scaleNew(this.pxratio).array);\r\n        }\r\n        else if (this.mode & Drawing.DT_SVG) {\r\n            this.drawing.clear();\r\n        }\r\n    }\r\n    rect(position, dimensions) {\r\n        if (this.saving) {\r\n            this.#instructions.push({\r\n                f: \"rect\",\r\n                args: [position, dimensions],\r\n            });\r\n        }\r\n        position = position.scaleNew(this.pxratio);\r\n        dimensions = dimensions.scaleNew(this.pxratio);\r\n        if (this.mode & Drawing.DT_CANVAS) {\r\n            this.c.beginPath();\r\n            this.c.rect(...position.array, ...dimensions.array);\r\n            this.c.stroke();\r\n        }\r\n        else if (this.mode & Drawing.DT_SVG) {\r\n            this.drawing\r\n                .rect(dimensions.width, dimensions.height)\r\n                .move(...position.array)\r\n                .fill(this.svgFill)\r\n                .stroke(\"#f06\");\r\n        }\r\n    }\r\n    circle(position, radius) {\r\n        if (this.saving) {\r\n            this.#instructions.push({\r\n                f: \"circle\",\r\n                args: [position, radius],\r\n            });\r\n        }\r\n        position = position.scaleNew(this.pxratio);\r\n        radius *= this.pxratio;\r\n        if (this.mode & Drawing.DT_CANVAS) {\r\n            if (this.fill)\r\n                this.c.fillStyle = this.fill;\r\n            this.c.beginPath();\r\n            this.c.arc(position.x, position.y, radius, 0, 2 * Math.PI);\r\n            if (this.stroke)\r\n                this.c.stroke();\r\n            if (this.fill)\r\n                this.c.fill();\r\n        }\r\n        else if (this.mode & Drawing.DT_SVG) {\r\n            this.drawing\r\n                .circle(radius * 2)\r\n                .fill(this.svgFill)\r\n                .stroke(this.svgStroke)\r\n                .move(...position.subtractScalarNew(radius).array);\r\n        }\r\n    }\r\n    line(a, b) {\r\n        if (this.saving) {\r\n            this.#instructions.push({\r\n                f: \"line\",\r\n                args: [a, b],\r\n            });\r\n        }\r\n        a = a.scaleNew(this.pxratio);\r\n        b = b.scaleNew(this.pxratio);\r\n        if (this.mode & Drawing.DT_CANVAS) {\r\n            this.c.beginPath();\r\n            this.c.moveTo(a.x, a.y);\r\n            this.c.lineTo(b.x, b.y);\r\n            if (this.stroke)\r\n                this.c.stroke();\r\n        }\r\n        else if (this.mode & Drawing.DT_SVG) {\r\n            this.drawing.line(...a.array, ...b.array).stroke(this.svgStroke);\r\n        }\r\n    }\r\n    polyline(points) {\r\n        if (this.saving) {\r\n            this.#instructions.push({\r\n                f: \"polyline\",\r\n                args: points,\r\n            });\r\n        }\r\n        if (this.mode & Drawing.DT_CANVAS) {\r\n            this.c.beginPath();\r\n            points.forEach((p, i) => {\r\n                p = p.scaleNew(this.pxratio);\r\n                if (i === 0)\r\n                    this.c.moveTo(p.x, p.y);\r\n                else\r\n                    this.c.lineTo(p.x, p.y);\r\n            });\r\n            if (this.stroke)\r\n                this.c.stroke();\r\n        }\r\n        else if (this.mode & Drawing.DT_SVG) {\r\n            this.drawing\r\n                .polyline(points.map((p) => p.array))\r\n                .fill(this.svgFill)\r\n                .stroke(this.svgStroke);\r\n        }\r\n    }\r\n    path(path) {\r\n        if (this.mode & Drawing.DT_CANVAS) {\r\n            this.c.beginPath();\r\n            const p1 = new Path2D(path);\r\n            const m = document\r\n                .createElementNS(\"http://www.w3.org/2000/svg\", \"svg\")\r\n                .createSVGMatrix();\r\n            const p = new Path2D();\r\n            const t = m.scale(this.pxratio);\r\n            p.addPath(p1, t);\r\n            if (this.stroke)\r\n                this.c.stroke(p);\r\n        }\r\n        else if (this.mode & Drawing.DT_SVG) {\r\n            this.drawing.path(path).fill(this.svgFill).stroke(this.svgStroke);\r\n        }\r\n    }\r\n    polygon(points) {\r\n        if (this.saving) {\r\n            this.#instructions.push({\r\n                f: \"polygon\",\r\n                args: [points],\r\n            });\r\n        }\r\n        if (this.mode & Drawing.DT_CANVAS) {\r\n            this.c.beginPath();\r\n            points.forEach((p, i) => {\r\n                p = p.scaleNew(this.pxratio);\r\n                if (i === 0)\r\n                    this.c.moveTo(p.x, p.y);\r\n                else\r\n                    this.c.lineTo(p.x, p.y);\r\n            });\r\n            if (this.stroke)\r\n                this.c.stroke();\r\n            if (this.fill)\r\n                this.c.fill();\r\n        }\r\n        else if (this.mode & Drawing.DT_SVG) {\r\n            this.drawing\r\n                .polygon(points.map((p) => p.array))\r\n                .fill(this.svgFill)\r\n                .stroke(this.svgStroke);\r\n        }\r\n    }\r\n    download() {\r\n        let d;\r\n        if (this.mode & Drawing.DT_CANVAS) {\r\n            d = new Drawing(Drawing.DT_SVG, {}).size(this.dimensions);\r\n            this.#instructions.forEach((i) => {\r\n                d[i.f](...i.args);\r\n            });\r\n        }\r\n        else if (this.mode & Drawing.DT_SVG) {\r\n            d = this;\r\n        }\r\n        const fileName = \"untitled.svg\";\r\n        const url = \"data:image/svg+xml;utf8,\" + encodeURIComponent(d.drawing.svg());\r\n        const link = document.createElement(\"a\");\r\n        link.download = fileName;\r\n        link.href = url;\r\n        link.click();\r\n    }\r\n    addTo(element) {\r\n        if (typeof element === \"string\") {\r\n            if (this.mode & Drawing.DT_CANVAS) {\r\n                document.body.querySelector(element).appendChild(this.drawing);\r\n            }\r\n            else if (this.mode & Drawing.DT_SVG) {\r\n                this.drawing.addTo(\"#container\");\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n    size(d) {\r\n        if (this.mode & Drawing.DT_CANVAS) {\r\n            this.drawing.width = d.width * this.#pxratio;\r\n            this.drawing.height = d.height * this.#pxratio;\r\n        }\r\n        else if (this.mode & Drawing.DT_SVG) {\r\n            this.drawing.size(...d.scaleNew(this.#pxratio).array);\r\n            this.#drawing.viewbox(`0 0 ${d.x * this.#pxratio} ${d.y * this.#pxratio}`);\r\n        }\r\n        this.#dimensions = d;\r\n        return this;\r\n    }\r\n    #dimensions;\r\n    set dimensions(v) {\r\n        if (v instanceof Vec2) {\r\n            this.#dimensions = v;\r\n            this.size(v);\r\n        }\r\n    }\r\n    get dimensions() {\r\n        return this.#dimensions;\r\n    }\r\n    #pxratio = 1;\r\n    set pxratio(v) {\r\n        if (v > 0) {\r\n            this.#pxratio = v;\r\n        }\r\n    }\r\n    get pxratio() {\r\n        return this.#pxratio || 1;\r\n    }\r\n    get drawing() {\r\n        return this.#drawing;\r\n    }\r\n    get c() {\r\n        if (this.mode & Drawing.DT_CANVAS) {\r\n            if (this.#ctx)\r\n                return this.#ctx;\r\n            this.#ctx = this.drawing.getContext(\"2d\");\r\n            return this.#ctx;\r\n        }\r\n    }\r\n    #stroke;\r\n    set stroke(v) {\r\n        this.#stroke = v;\r\n        if (this.mode & Drawing.DT_CANVAS) {\r\n            this.c.strokeStyle = v;\r\n        }\r\n    }\r\n    get stroke() {\r\n        return this.#stroke;\r\n    }\r\n    get svgStroke() {\r\n        if (this.#stroke)\r\n            return this.#stroke;\r\n        return {};\r\n    }\r\n    #fill = null;\r\n    set fill(v) {\r\n        this.#fill = v;\r\n        if (this.mode & Drawing.DT_CANVAS) {\r\n            this.c.fillStyle = v;\r\n        }\r\n    }\r\n    get fill() {\r\n        return this.#fill;\r\n    }\r\n    get svgFill() {\r\n        if (this.#fill)\r\n            return this.#fill;\r\n        return \"none\";\r\n    }\r\n    set mode(v) {\r\n        if (v & (Drawing.DT_CANVAS | Drawing.DT_SVG)) {\r\n            this.#mode = v;\r\n        }\r\n    }\r\n    get mode() {\r\n        return this.#mode || Drawing.DT_CANVAS;\r\n    }\r\n    #saving = false;\r\n    set saving(v) {\r\n        this.#saving = v === true;\r\n    }\r\n    get saving() {\r\n        return this.#saving;\r\n    }\r\n}\r\nexport default Drawing;\r\n//# sourceMappingURL=index.js.map","references":["/home/liamegan/projects/personal/Sketcher/node_modules/@svgdotjs/svg.js/svg.js.d.ts","/home/liamegan/projects/personal/Sketcher/node_modules/wtc-math/dist/index.d.ts"],"map":"{\"version\":3,\"file\":\"index.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../src/index.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/home/liamegan/projects/personal/Sketcher/dist/index.d.ts","writeByteOrderMark":false,"text":"declare class Drawing {\r\n    #private;\r\n    static DT_CANVAS: number;\r\n    static DT_SVG: number;\r\n    constructor(mode: number, settings: any);\r\n    clear(): void;\r\n    rect(position: any, dimensions: any): void;\r\n    circle(position: any, radius: any): void;\r\n    line(a: any, b: any): void;\r\n    polyline(points: any): void;\r\n    path(path: any): void;\r\n    polygon(points: any): void;\r\n    download(): void;\r\n    addTo(element: any): this;\r\n    size(d: any): this;\r\n    set dimensions(v: any);\r\n    get dimensions(): any;\r\n    set pxratio(v: number);\r\n    get pxratio(): number;\r\n    get drawing(): any;\r\n    get c(): any;\r\n    set stroke(v: any);\r\n    get stroke(): any;\r\n    get svgStroke(): any;\r\n    set fill(v: any);\r\n    get fill(): any;\r\n    get svgFill(): any;\r\n    set mode(v: any);\r\n    get mode(): any;\r\n    set saving(v: boolean);\r\n    get saving(): boolean;\r\n}\r\nexport default Drawing;\r\n"}}
